import { Observable } from 'rxjs';
export function startAnimations(abortControllerOrAnimation, ...animations) {
    return new Observable((subscriber) => {
        let abortController = undefined;
        if (abortControllerOrAnimation instanceof AbortController) {
            abortController = abortControllerOrAnimation;
        }
        else {
            abortController = new AbortController();
            animations.unshift(abortControllerOrAnimation);
        }
        if (animations.length === 0) {
            subscriber.next();
            subscriber.complete();
        }
        const _animations = animations
            .map((animation) => animation())
            .filter((x) => !!x);
        for (const animation of _animations) {
            abortController.signal.addEventListener('abort', () => animation.cancel());
        }
        Promise.all(
        // eslint-disable-next-line @typescript-eslint/no-empty-function
        _animations.map((animation) => animation.finished.catch(() => { }))).then(() => {
            abortController = undefined;
            subscriber.next();
            subscriber.complete();
        });
    });
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RhcnQtYW5pbWF0aW9ucy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3d0cHJvZ3JhbXMvbWF0ZXJpYWwtZGVzaWduL3NyYy9saWIvY29tbW9uL3J4anMvc3RhcnQtYW5pbWF0aW9ucy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sTUFBTSxDQUFDO0FBYWxDLE1BQU0sVUFBVSxlQUFlLENBQzdCLDBCQUEyRSxFQUMzRSxHQUFHLFVBQTJDO0lBRTlDLE9BQU8sSUFBSSxVQUFVLENBQU8sQ0FBQyxVQUFVLEVBQUUsRUFBRTtRQUN6QyxJQUFJLGVBQWUsR0FBZ0MsU0FBUyxDQUFDO1FBQzdELElBQUksMEJBQTBCLFlBQVksZUFBZSxFQUFFLENBQUM7WUFDMUQsZUFBZSxHQUFHLDBCQUEwQixDQUFDO1FBQy9DLENBQUM7YUFBTSxDQUFDO1lBQ04sZUFBZSxHQUFHLElBQUksZUFBZSxFQUFFLENBQUM7WUFDeEMsVUFBVSxDQUFDLE9BQU8sQ0FBQywwQkFBMEIsQ0FBQyxDQUFDO1FBQ2pELENBQUM7UUFFRCxJQUFJLFVBQVUsQ0FBQyxNQUFNLEtBQUssQ0FBQyxFQUFFLENBQUM7WUFDNUIsVUFBVSxDQUFDLElBQUksRUFBRSxDQUFDO1lBQ2xCLFVBQVUsQ0FBQyxRQUFRLEVBQUUsQ0FBQztRQUN4QixDQUFDO1FBQ0QsTUFBTSxXQUFXLEdBQUcsVUFBVTthQUMzQixHQUFHLENBQUMsQ0FBQyxTQUFTLEVBQUUsRUFBRSxDQUFDLFNBQVMsRUFBRSxDQUFDO2FBQy9CLE1BQU0sQ0FBQyxDQUFDLENBQUMsRUFBa0IsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUN0QyxLQUFLLE1BQU0sU0FBUyxJQUFJLFdBQVcsRUFBRSxDQUFDO1lBQ3BDLGVBQWUsQ0FBQyxNQUFNLENBQUMsZ0JBQWdCLENBQUMsT0FBTyxFQUFFLEdBQUcsRUFBRSxDQUNwRCxTQUFTLENBQUMsTUFBTSxFQUFFLENBQ25CLENBQUM7UUFDSixDQUFDO1FBQ0QsT0FBTyxDQUFDLEdBQUc7UUFDVCxnRUFBZ0U7UUFDaEUsV0FBVyxDQUFDLEdBQUcsQ0FBQyxDQUFDLFNBQVMsRUFBRSxFQUFFLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsR0FBRyxFQUFFLEdBQUUsQ0FBQyxDQUFDLENBQUMsQ0FDbkUsQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFFO1lBQ1YsZUFBZSxHQUFHLFNBQVMsQ0FBQztZQUM1QixVQUFVLENBQUMsSUFBSSxFQUFFLENBQUM7WUFDbEIsVUFBVSxDQUFDLFFBQVEsRUFBRSxDQUFDO1FBQ3hCLENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQyxDQUFDLENBQUM7QUFDTCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xuXG5leHBvcnQgZnVuY3Rpb24gc3RhcnRBbmltYXRpb25zKFxuICAuLi5hbmltYXRpb25zOiAoKCkgPT4gQW5pbWF0aW9uIHwgdW5kZWZpbmVkKVtdXG4pOiBPYnNlcnZhYmxlPHZvaWQ+O1xuZXhwb3J0IGZ1bmN0aW9uIHN0YXJ0QW5pbWF0aW9ucyhcbiAgYWJvcnRDb250cm9sbGVyOiBBYm9ydENvbnRyb2xsZXIsXG4gIC4uLmFuaW1hdGlvbnM6ICgoKSA9PiBBbmltYXRpb24gfCB1bmRlZmluZWQpW11cbik6IE9ic2VydmFibGU8dm9pZD47XG5leHBvcnQgZnVuY3Rpb24gc3RhcnRBbmltYXRpb25zKFxuICBhYm9ydENvbnRyb2xsZXJPckFuaW1hdGlvbjogQWJvcnRDb250cm9sbGVyIHwgKCgpID0+IEFuaW1hdGlvbiB8IHVuZGVmaW5lZCksXG4gIC4uLmFuaW1hdGlvbnM6ICgoKSA9PiBBbmltYXRpb24gfCB1bmRlZmluZWQpW11cbik6IE9ic2VydmFibGU8dm9pZD47XG5leHBvcnQgZnVuY3Rpb24gc3RhcnRBbmltYXRpb25zKFxuICBhYm9ydENvbnRyb2xsZXJPckFuaW1hdGlvbjogQWJvcnRDb250cm9sbGVyIHwgKCgpID0+IEFuaW1hdGlvbiB8IHVuZGVmaW5lZCksXG4gIC4uLmFuaW1hdGlvbnM6ICgoKSA9PiBBbmltYXRpb24gfCB1bmRlZmluZWQpW11cbik6IE9ic2VydmFibGU8dm9pZD4ge1xuICByZXR1cm4gbmV3IE9ic2VydmFibGU8dm9pZD4oKHN1YnNjcmliZXIpID0+IHtcbiAgICBsZXQgYWJvcnRDb250cm9sbGVyOiBBYm9ydENvbnRyb2xsZXIgfCB1bmRlZmluZWQgPSB1bmRlZmluZWQ7XG4gICAgaWYgKGFib3J0Q29udHJvbGxlck9yQW5pbWF0aW9uIGluc3RhbmNlb2YgQWJvcnRDb250cm9sbGVyKSB7XG4gICAgICBhYm9ydENvbnRyb2xsZXIgPSBhYm9ydENvbnRyb2xsZXJPckFuaW1hdGlvbjtcbiAgICB9IGVsc2Uge1xuICAgICAgYWJvcnRDb250cm9sbGVyID0gbmV3IEFib3J0Q29udHJvbGxlcigpO1xuICAgICAgYW5pbWF0aW9ucy51bnNoaWZ0KGFib3J0Q29udHJvbGxlck9yQW5pbWF0aW9uKTtcbiAgICB9XG5cbiAgICBpZiAoYW5pbWF0aW9ucy5sZW5ndGggPT09IDApIHtcbiAgICAgIHN1YnNjcmliZXIubmV4dCgpO1xuICAgICAgc3Vic2NyaWJlci5jb21wbGV0ZSgpO1xuICAgIH1cbiAgICBjb25zdCBfYW5pbWF0aW9ucyA9IGFuaW1hdGlvbnNcbiAgICAgIC5tYXAoKGFuaW1hdGlvbikgPT4gYW5pbWF0aW9uKCkpXG4gICAgICAuZmlsdGVyKCh4KTogeCBpcyBBbmltYXRpb24gPT4gISF4KTtcbiAgICBmb3IgKGNvbnN0IGFuaW1hdGlvbiBvZiBfYW5pbWF0aW9ucykge1xuICAgICAgYWJvcnRDb250cm9sbGVyLnNpZ25hbC5hZGRFdmVudExpc3RlbmVyKCdhYm9ydCcsICgpID0+XG4gICAgICAgIGFuaW1hdGlvbi5jYW5jZWwoKVxuICAgICAgKTtcbiAgICB9XG4gICAgUHJvbWlzZS5hbGwoXG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWVtcHR5LWZ1bmN0aW9uXG4gICAgICBfYW5pbWF0aW9ucy5tYXAoKGFuaW1hdGlvbikgPT4gYW5pbWF0aW9uLmZpbmlzaGVkLmNhdGNoKCgpID0+IHt9KSlcbiAgICApLnRoZW4oKCkgPT4ge1xuICAgICAgYWJvcnRDb250cm9sbGVyID0gdW5kZWZpbmVkO1xuICAgICAgc3Vic2NyaWJlci5uZXh0KCk7XG4gICAgICBzdWJzY3JpYmVyLmNvbXBsZXRlKCk7XG4gICAgfSk7XG4gIH0pO1xufVxuIl19