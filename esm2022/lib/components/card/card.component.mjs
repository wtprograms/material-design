import { CommonModule } from '@angular/common';
import { Component, ChangeDetectionStrategy, ViewEncapsulation, model, viewChild, computed, } from '@angular/core';
import { ElevationComponent } from '../elevation/elevation.component';
import { RippleComponent } from '../ripple/ripple.component';
import { MaterialDesignComponent } from '../material-design.component';
import { ProgressIndicatorComponent } from '../progress-indicator/progress-indicator.component';
import { TouchAreaComponent } from '../touch-area/touch-area.component';
import { FocusRingComponent } from '../focus-ring/focus-ring.component';
import { SlotDirective } from '../../directives/slot.directive';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
export class CardComponent extends MaterialDesignComponent {
    variant = model('outlined');
    disabled = model(false);
    type = model(undefined);
    href = model();
    anchorTarget = model();
    name = model();
    value = model();
    progressIndeterminate = model(false);
    progressValue = model(0);
    progressMax = model(0);
    progressBuffer = model(0);
    leadingSlot = this.slotDirective('leading');
    trailingSlot = this.slotDirective('trailing');
    button = viewChild('button');
    hasElevation = computed(() => this.variant() !== 'outlined');
    elevationLevel = computed(() => this.variant() === 'elevated' ? 1 : 0);
    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.9", ngImport: i0, type: CardComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "18.2.9", type: CardComponent, isStandalone: true, selector: "md-card", inputs: { variant: { classPropertyName: "variant", publicName: "variant", isSignal: true, isRequired: false, transformFunction: null }, disabled: { classPropertyName: "disabled", publicName: "disabled", isSignal: true, isRequired: false, transformFunction: null }, type: { classPropertyName: "type", publicName: "type", isSignal: true, isRequired: false, transformFunction: null }, href: { classPropertyName: "href", publicName: "href", isSignal: true, isRequired: false, transformFunction: null }, anchorTarget: { classPropertyName: "anchorTarget", publicName: "anchorTarget", isSignal: true, isRequired: false, transformFunction: null }, name: { classPropertyName: "name", publicName: "name", isSignal: true, isRequired: false, transformFunction: null }, value: { classPropertyName: "value", publicName: "value", isSignal: true, isRequired: false, transformFunction: null }, progressIndeterminate: { classPropertyName: "progressIndeterminate", publicName: "progressIndeterminate", isSignal: true, isRequired: false, transformFunction: null }, progressValue: { classPropertyName: "progressValue", publicName: "progressValue", isSignal: true, isRequired: false, transformFunction: null }, progressMax: { classPropertyName: "progressMax", publicName: "progressMax", isSignal: true, isRequired: false, transformFunction: null }, progressBuffer: { classPropertyName: "progressBuffer", publicName: "progressBuffer", isSignal: true, isRequired: false, transformFunction: null } }, outputs: { variant: "variantChange", disabled: "disabledChange", type: "typeChange", href: "hrefChange", anchorTarget: "anchorTargetChange", name: "nameChange", value: "valueChange", progressIndeterminate: "progressIndeterminateChange", progressValue: "progressValueChange", progressMax: "progressMaxChange", progressBuffer: "progressBufferChange" }, host: { properties: { "attr.variant": "variant()", "attr.interactive": "!!type() || !!href() || null", "attr.leading": "leadingSlot()?.any()", "attr.trailing": "trailingSlot()?.any()", "attr.disabled": "disabled() || null", "attr.busy": "progressIndeterminate() || !!progressValue() || null" } }, viewQueries: [{ propertyName: "button", first: true, predicate: ["button"], descendants: true, isSignal: true }], usesInheritance: true, ngImport: i0, template: "<ng-template #content>\n  <div part=\"leading\" class=\"leading content\">\n    <slot name=\"leading\"></slot>\n  </div>\n  <div part=\"body\" class=\"body content\">\n    <slot></slot>\n  </div>\n  <div part=\"trailing\" class=\"trailing content\">\n    <slot name=\"trailing\"></slot>\n  </div>\n</ng-template>\n\n@if (type() || href()) {\n@if (hasElevation()) {\n<md-elevation part=\"elevation\" [target]=\"button()\" [level]=\"elevationLevel()\" />\n}\n<md-focus-ring part=\"focus-ring\" [target]=\"button()\" />\n<md-ripple part=\"ripple\" [target]=\"button()\" />\n@if (href()) {\n<a part=\"button\" #button [attr.href]=\"href() ?? null\" [attr.target]=\"anchorTarget() ?? null\"\n  [tabIndex]=\"disabled() ? -1 : 0\">\n  <md-touch-area />\n  <ng-container *ngTemplateOutlet=\"content\" />\n</a>\n} @else {\n<button part=\"button\" #button [type]=\"type()\" [disabled]=\"disabled() || null\" [attr.name]=\"name() ?? null\"\n  [attr.value]=\"value() ?? null\">\n  <md-touch-area />\n  <ng-container *ngTemplateOutlet=\"content\" />\n</button>\n}\n} @else {\n<md-elevation part=\"elevation\" [target]=\"hostElement\" [level]=\"elevationLevel()\" [hoverable]=\"false\"\n  [interactive]=\"false\" />\n<ng-container *ngTemplateOutlet=\"content\" />\n}\n\n@if (!disabled() && (progressValue() || progressIndeterminate())) {\n<div class=\"progress\">\n  <md-progress-indicator variant=\"linear\" [value]=\"progressValue()\" [indeterminate]=\"progressIndeterminate()\"\n    [buffer]=\"progressBuffer()\" />\n</div>\n}", styles: [":host{--__color: currentColor;position:relative;display:inline-flex;flex-direction:column;isolation:isolate;text-align:left;align-items:flex-start;border-radius:var(--md-sys-shape-medium);transition-property:opacity,background-color,color,border-color;transition-duration:var(--md-sys-motion-duration-short-4);transition-timing-function:var(--md-sys-motion-easing-standard)}:host button,:host a{background-color:transparent;font:inherit;color:inherit;padding:0;margin:0;gap:inherit;text-decoration:none;border-radius:inherit;appearance:none;border:0;outline:none;cursor:pointer;align-items:center;transition-property:opacity;transition-duration:var(--md-sys-motion-duration-short-4);transition-timing-function:var(--md-sys-motion-easing-standard);display:inherit;flex-direction:inherit}:host md-elevation{z-index:-1}:host md-ripple{--md-comp-ripple-color: var(--__color)}:host .leading,:host .body,:host .trailing{flex-direction:column;padding:1rem}:host .body{align-self:stretch;display:inline-flex;text-align:inherit;align-items:flex-start}:host .leading,:host .trailing{align-self:stretch;border-radius:inherit;display:none;background-color:var(--md-sys-color-secondary-container);text-align:inherit;align-items:flex-start}:host .progress{border-radius:inherit;overflow:hidden;position:absolute;inset:0}:host([leading=true]) .leading{display:inline-flex}:host([trailing=true]) .trailing{display:inline-flex}:host([interactive=true]){cursor:pointer}:host([variant=elevated]){background-color:var(--md-sys-color-surface-container-low)}:host([variant=elevated][disabled=true]){background-color:color-mix(in oklab,transparent,var(--md-sys-color-surface-on) calc(var(--md-sys-disabled-background-color) * 100%))}:host([variant=filled]){background-color:var(--md-sys-color-surface-container-highest)}:host([variant=filled][disabled=true]){background-color:color-mix(in oklab,transparent,var(--md-sys-color-surface-on) calc(var(--md-sys-disabled-background-color) * 100%))}:host([variant=outlined]){border:1px solid var(--md-sys-color-outline-variant)}:host([variant=outlined][disabled=true]){border-color:color-mix(in oklab,transparent,var(--md-sys-color-surface-on) calc(var(--md-sys-disabled-border-color) * 100%))}:host([busy=true]:not([disabled=true])){pointer-events:none}:host([disabled=true]){pointer-events:none;cursor:default;color:color-mix(in oklab,transparent,var(--md-sys-color-surface-on) calc(var(--md-sys-disabled-color) * 100%))}\n"], dependencies: [{ kind: "ngmodule", type: CommonModule }, { kind: "directive", type: i1.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }, { kind: "component", type: RippleComponent, selector: "md-ripple, [mdRipple]", inputs: ["hoverable", "interactive"], outputs: ["hoverableChange", "interactiveChange"] }, { kind: "component", type: TouchAreaComponent, selector: "md-touch-area" }, { kind: "component", type: FocusRingComponent, selector: "md-focus-ring", inputs: ["focusVisible"], outputs: ["focusVisibleChange"] }, { kind: "component", type: ElevationComponent, selector: "md-elevation", inputs: ["level", "hoverable", "interactive", "dragging"], outputs: ["levelChange", "hoverableChange", "interactiveChange", "draggingChange"] }, { kind: "directive", type: SlotDirective, selector: "slot", inputs: ["name", "slot"] }, { kind: "component", type: ProgressIndicatorComponent, selector: "md-progress-indicator", inputs: ["variant", "value", "max", "indeterminate", "fourColor", "size", "width", "buffer", "circleSize"], outputs: ["variantChange", "valueChange", "maxChange", "indeterminateChange", "fourColorChange", "sizeChange", "widthChange", "bufferChange", "circleSizeChange"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.ShadowDom });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.9", ngImport: i0, type: CardComponent, decorators: [{
            type: Component,
            args: [{ selector: 'md-card', standalone: true, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.ShadowDom, imports: [
                        CommonModule,
                        RippleComponent,
                        TouchAreaComponent,
                        FocusRingComponent,
                        ElevationComponent,
                        SlotDirective,
                        ProgressIndicatorComponent,
                    ], hostDirectives: [], host: {
                        '[attr.variant]': 'variant()',
                        '[attr.interactive]': '!!type() || !!href() || null',
                        '[attr.leading]': `leadingSlot()?.any()`,
                        '[attr.trailing]': `trailingSlot()?.any()`,
                        '[attr.disabled]': 'disabled() || null',
                        '[attr.busy]': 'progressIndeterminate() || !!progressValue() || null',
                    }, template: "<ng-template #content>\n  <div part=\"leading\" class=\"leading content\">\n    <slot name=\"leading\"></slot>\n  </div>\n  <div part=\"body\" class=\"body content\">\n    <slot></slot>\n  </div>\n  <div part=\"trailing\" class=\"trailing content\">\n    <slot name=\"trailing\"></slot>\n  </div>\n</ng-template>\n\n@if (type() || href()) {\n@if (hasElevation()) {\n<md-elevation part=\"elevation\" [target]=\"button()\" [level]=\"elevationLevel()\" />\n}\n<md-focus-ring part=\"focus-ring\" [target]=\"button()\" />\n<md-ripple part=\"ripple\" [target]=\"button()\" />\n@if (href()) {\n<a part=\"button\" #button [attr.href]=\"href() ?? null\" [attr.target]=\"anchorTarget() ?? null\"\n  [tabIndex]=\"disabled() ? -1 : 0\">\n  <md-touch-area />\n  <ng-container *ngTemplateOutlet=\"content\" />\n</a>\n} @else {\n<button part=\"button\" #button [type]=\"type()\" [disabled]=\"disabled() || null\" [attr.name]=\"name() ?? null\"\n  [attr.value]=\"value() ?? null\">\n  <md-touch-area />\n  <ng-container *ngTemplateOutlet=\"content\" />\n</button>\n}\n} @else {\n<md-elevation part=\"elevation\" [target]=\"hostElement\" [level]=\"elevationLevel()\" [hoverable]=\"false\"\n  [interactive]=\"false\" />\n<ng-container *ngTemplateOutlet=\"content\" />\n}\n\n@if (!disabled() && (progressValue() || progressIndeterminate())) {\n<div class=\"progress\">\n  <md-progress-indicator variant=\"linear\" [value]=\"progressValue()\" [indeterminate]=\"progressIndeterminate()\"\n    [buffer]=\"progressBuffer()\" />\n</div>\n}", styles: [":host{--__color: currentColor;position:relative;display:inline-flex;flex-direction:column;isolation:isolate;text-align:left;align-items:flex-start;border-radius:var(--md-sys-shape-medium);transition-property:opacity,background-color,color,border-color;transition-duration:var(--md-sys-motion-duration-short-4);transition-timing-function:var(--md-sys-motion-easing-standard)}:host button,:host a{background-color:transparent;font:inherit;color:inherit;padding:0;margin:0;gap:inherit;text-decoration:none;border-radius:inherit;appearance:none;border:0;outline:none;cursor:pointer;align-items:center;transition-property:opacity;transition-duration:var(--md-sys-motion-duration-short-4);transition-timing-function:var(--md-sys-motion-easing-standard);display:inherit;flex-direction:inherit}:host md-elevation{z-index:-1}:host md-ripple{--md-comp-ripple-color: var(--__color)}:host .leading,:host .body,:host .trailing{flex-direction:column;padding:1rem}:host .body{align-self:stretch;display:inline-flex;text-align:inherit;align-items:flex-start}:host .leading,:host .trailing{align-self:stretch;border-radius:inherit;display:none;background-color:var(--md-sys-color-secondary-container);text-align:inherit;align-items:flex-start}:host .progress{border-radius:inherit;overflow:hidden;position:absolute;inset:0}:host([leading=true]) .leading{display:inline-flex}:host([trailing=true]) .trailing{display:inline-flex}:host([interactive=true]){cursor:pointer}:host([variant=elevated]){background-color:var(--md-sys-color-surface-container-low)}:host([variant=elevated][disabled=true]){background-color:color-mix(in oklab,transparent,var(--md-sys-color-surface-on) calc(var(--md-sys-disabled-background-color) * 100%))}:host([variant=filled]){background-color:var(--md-sys-color-surface-container-highest)}:host([variant=filled][disabled=true]){background-color:color-mix(in oklab,transparent,var(--md-sys-color-surface-on) calc(var(--md-sys-disabled-background-color) * 100%))}:host([variant=outlined]){border:1px solid var(--md-sys-color-outline-variant)}:host([variant=outlined][disabled=true]){border-color:color-mix(in oklab,transparent,var(--md-sys-color-surface-on) calc(var(--md-sys-disabled-border-color) * 100%))}:host([busy=true]:not([disabled=true])){pointer-events:none}:host([disabled=true]){pointer-events:none;cursor:default;color:color-mix(in oklab,transparent,var(--md-sys-color-surface-on) calc(var(--md-sys-disabled-color) * 100%))}\n"] }]
        }] });
//# sourceMappingURL=data:application/json;base64,