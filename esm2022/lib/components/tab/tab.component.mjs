import { ChangeDetectionStrategy, Component, computed, HostListener, model, viewChild, ViewEncapsulation, } from '@angular/core';
import { MaterialDesignComponent } from '../material-design.component';
import { TouchAreaComponent } from '../touch-area/touch-area.component';
import { SlotDirective } from '../../directives/slot.directive';
import { FocusRingComponent } from '../focus-ring/focus-ring.component';
import { RippleComponent } from '../ripple/ripple.component';
import { CommonModule } from '@angular/common';
import { toObservable } from '@angular/core/rxjs-interop';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
export class TabComponent extends MaterialDesignComponent {
    secondary = model(false);
    disabled = model(false);
    href = model();
    anchorTarget = model();
    name = model();
    value = model();
    selected = model(false);
    selected$ = toObservable(this.selected);
    labelSlot = this.slotDirective('label');
    _label = viewChild('label');
    contentWidth = computed(() => {
        const icon = this.defaultSlot()?.elements()[0];
        this.labelSlot();
        const secondary = this.secondary();
        const label = this._label()?.nativeElement;
        if (secondary) {
            return this.hostElement.offsetWidth;
        }
        const iconWidth = icon ? icon.offsetWidth : 0;
        const labelWidth = label ? label.offsetWidth : 0;
        return Math.max(iconWidth, labelWidth) + 8;
    });
    button = viewChild('button');
    click() {
        this.selected.set(true);
    }
    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.9", ngImport: i0, type: TabComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "18.2.9", type: TabComponent, isStandalone: true, selector: "md-tab", inputs: { secondary: { classPropertyName: "secondary", publicName: "secondary", isSignal: true, isRequired: false, transformFunction: null }, disabled: { classPropertyName: "disabled", publicName: "disabled", isSignal: true, isRequired: false, transformFunction: null }, href: { classPropertyName: "href", publicName: "href", isSignal: true, isRequired: false, transformFunction: null }, anchorTarget: { classPropertyName: "anchorTarget", publicName: "anchorTarget", isSignal: true, isRequired: false, transformFunction: null }, name: { classPropertyName: "name", publicName: "name", isSignal: true, isRequired: false, transformFunction: null }, value: { classPropertyName: "value", publicName: "value", isSignal: true, isRequired: false, transformFunction: null }, selected: { classPropertyName: "selected", publicName: "selected", isSignal: true, isRequired: false, transformFunction: null } }, outputs: { secondary: "secondaryChange", disabled: "disabledChange", href: "hrefChange", anchorTarget: "anchorTargetChange", name: "nameChange", value: "valueChange", selected: "selectedChange" }, host: { listeners: { "click": "click()" }, properties: { "attr.selected": "selected() || null", "attr.secondary": "secondary() || null", "attr.disabled": "disabled() || null" } }, viewQueries: [{ propertyName: "_label", first: true, predicate: ["label"], descendants: true, isSignal: true }, { propertyName: "button", first: true, predicate: ["button"], descendants: true, isSignal: true }], usesInheritance: true, ngImport: i0, template: "<ng-template #content>\n  <md-touch-area />\n  <slot></slot>\n  <span #label part=\"label\">\n    <slot name=\"label\"></slot>\n  </span>\n</ng-template>\n\n<md-focus-ring part=\"focus-ring\" [target]=\"button()\" />\n<md-ripple part=\"ripple\" [target]=\"button()\" />\n@if (href()) {\n<a part=\"button\" #button [attr.href]=\"href() ?? null\" [attr.target]=\"anchorTarget() ?? null\"\n  [tabIndex]=\"disabled() ? -1 : 0\">\n  <ng-container *ngTemplateOutlet=\"content\" />\n</a>\n} @else {\n<button part=\"button\" #button type=\"button\" [disabled]=\"disabled() || null\" [attr.name]=\"name() ?? null\"\n  [attr.value]=\"value() ?? null\">\n  <ng-container *ngTemplateOutlet=\"content\" />\n</button>\n}", styles: [":host{--_color: currentColor;position:relative;display:inline-flex;flex-direction:column;cursor:pointer;flex-grow:1;transition-property:background-color,color,border-color;transition-duration:var(--md-sys-motion-duration-short-4);transition-timing-function:var(--md-sys-motion-easing-standard);place-content:center;place-items:center;gap:4px;padding-top:8px;padding-bottom:8px;padding-inline:24px;font-size:var(--md-sys-typescale-title-small-size);font-weight:var(--md-sys-typescale-title-small-weight);font-family:var(--md-sys-typescale-title-small-font)}:host button,:host a{background-color:transparent;display:inherit;font:inherit;color:inherit;padding:0;margin:0;gap:inherit;text-decoration:none;border-radius:inherit;appearance:none;border:0;outline:none;cursor:pointer;align-items:center;transition-property:opacity;transition-duration:var(--md-sys-motion-duration-short-4);transition-timing-function:var(--md-sys-motion-easing-standard);flex-direction:inherit}:host md-ripple{--md-comp-ripple-color: var(--_color)}:host([selected]){color:var(--md-sys-color-primary);pointer-events:none}:host([selected]) ::slotted(md-icon){--md-comp-icon-filled: 1}:host([secondary=true]){flex-direction:row;gap:8px}:host([disabled=true]){pointer-events:none;cursor:default;color:color-mix(in oklab,transparent,var(--md-sys-color-surface-on) calc(var(--md-sys-disabled-color) * 100%))}\n"], dependencies: [{ kind: "component", type: TouchAreaComponent, selector: "md-touch-area" }, { kind: "directive", type: SlotDirective, selector: "slot", inputs: ["name", "slot"] }, { kind: "component", type: FocusRingComponent, selector: "md-focus-ring", inputs: ["focusVisible"], outputs: ["focusVisibleChange"] }, { kind: "component", type: RippleComponent, selector: "md-ripple, [mdRipple]", inputs: ["hoverable", "interactive"], outputs: ["hoverableChange", "interactiveChange"] }, { kind: "ngmodule", type: CommonModule }, { kind: "directive", type: i1.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.ShadowDom });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.9", ngImport: i0, type: TabComponent, decorators: [{
            type: Component,
            args: [{ selector: 'md-tab', standalone: true, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.ShadowDom, imports: [
                        TouchAreaComponent,
                        SlotDirective,
                        FocusRingComponent,
                        RippleComponent,
                        CommonModule,
                    ], hostDirectives: [], host: {
                        '[attr.selected]': 'selected() || null',
                        '[attr.secondary]': 'secondary() || null',
                        '[attr.disabled]': 'disabled() || null',
                    }, template: "<ng-template #content>\n  <md-touch-area />\n  <slot></slot>\n  <span #label part=\"label\">\n    <slot name=\"label\"></slot>\n  </span>\n</ng-template>\n\n<md-focus-ring part=\"focus-ring\" [target]=\"button()\" />\n<md-ripple part=\"ripple\" [target]=\"button()\" />\n@if (href()) {\n<a part=\"button\" #button [attr.href]=\"href() ?? null\" [attr.target]=\"anchorTarget() ?? null\"\n  [tabIndex]=\"disabled() ? -1 : 0\">\n  <ng-container *ngTemplateOutlet=\"content\" />\n</a>\n} @else {\n<button part=\"button\" #button type=\"button\" [disabled]=\"disabled() || null\" [attr.name]=\"name() ?? null\"\n  [attr.value]=\"value() ?? null\">\n  <ng-container *ngTemplateOutlet=\"content\" />\n</button>\n}", styles: [":host{--_color: currentColor;position:relative;display:inline-flex;flex-direction:column;cursor:pointer;flex-grow:1;transition-property:background-color,color,border-color;transition-duration:var(--md-sys-motion-duration-short-4);transition-timing-function:var(--md-sys-motion-easing-standard);place-content:center;place-items:center;gap:4px;padding-top:8px;padding-bottom:8px;padding-inline:24px;font-size:var(--md-sys-typescale-title-small-size);font-weight:var(--md-sys-typescale-title-small-weight);font-family:var(--md-sys-typescale-title-small-font)}:host button,:host a{background-color:transparent;display:inherit;font:inherit;color:inherit;padding:0;margin:0;gap:inherit;text-decoration:none;border-radius:inherit;appearance:none;border:0;outline:none;cursor:pointer;align-items:center;transition-property:opacity;transition-duration:var(--md-sys-motion-duration-short-4);transition-timing-function:var(--md-sys-motion-easing-standard);flex-direction:inherit}:host md-ripple{--md-comp-ripple-color: var(--_color)}:host([selected]){color:var(--md-sys-color-primary);pointer-events:none}:host([selected]) ::slotted(md-icon){--md-comp-icon-filled: 1}:host([secondary=true]){flex-direction:row;gap:8px}:host([disabled=true]){pointer-events:none;cursor:default;color:color-mix(in oklab,transparent,var(--md-sys-color-surface-on) calc(var(--md-sys-disabled-color) * 100%))}\n"] }]
        }], propDecorators: { click: [{
                type: HostListener,
                args: ['click']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFiLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3d0cHJvZ3JhbXMvbWF0ZXJpYWwtZGVzaWduL3NyYy9saWIvY29tcG9uZW50cy90YWIvdGFiLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3d0cHJvZ3JhbXMvbWF0ZXJpYWwtZGVzaWduL3NyYy9saWIvY29tcG9uZW50cy90YWIvdGFiLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFDTCx1QkFBdUIsRUFDdkIsU0FBUyxFQUNULFFBQVEsRUFFUixZQUFZLEVBQ1osS0FBSyxFQUNMLFNBQVMsRUFDVCxpQkFBaUIsR0FDbEIsTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sOEJBQThCLENBQUM7QUFDdkUsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sb0NBQW9DLENBQUM7QUFDeEUsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLGlDQUFpQyxDQUFDO0FBQ2hFLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLG9DQUFvQyxDQUFDO0FBQ3hFLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUM3RCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLDRCQUE0QixDQUFDOzs7QUF1QjFELE1BQU0sT0FBTyxZQUFhLFNBQVEsdUJBQXVCO0lBQzlDLFNBQVMsR0FBRyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDekIsUUFBUSxHQUFHLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUN4QixJQUFJLEdBQUcsS0FBSyxFQUFVLENBQUM7SUFDdkIsWUFBWSxHQUFHLEtBQUssRUFBVSxDQUFDO0lBQy9CLElBQUksR0FBRyxLQUFLLEVBQVUsQ0FBQztJQUN2QixLQUFLLEdBQUcsS0FBSyxFQUFVLENBQUM7SUFDeEIsUUFBUSxHQUFHLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUN4QixTQUFTLEdBQUcsWUFBWSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUV4QyxTQUFTLEdBQUcsSUFBSSxDQUFDLGFBQWEsQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUVoQyxNQUFNLEdBQUcsU0FBUyxDQUEwQixPQUFPLENBQUMsQ0FBQztJQUU3RCxZQUFZLEdBQUcsUUFBUSxDQUFDLEdBQUcsRUFBRTtRQUNwQyxNQUFNLElBQUksR0FBRyxJQUFJLENBQUMsV0FBVyxFQUFFLEVBQUUsUUFBUSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDL0MsSUFBSSxDQUFDLFNBQVMsRUFBRSxDQUFDO1FBQ2pCLE1BQU0sU0FBUyxHQUFHLElBQUksQ0FBQyxTQUFTLEVBQUUsQ0FBQztRQUNuQyxNQUFNLEtBQUssR0FBRyxJQUFJLENBQUMsTUFBTSxFQUFFLEVBQUUsYUFBYSxDQUFDO1FBQzNDLElBQUksU0FBUyxFQUFFLENBQUM7WUFDZCxPQUFPLElBQUksQ0FBQyxXQUFXLENBQUMsV0FBVyxDQUFDO1FBQ3RDLENBQUM7UUFDRCxNQUFNLFNBQVMsR0FBRyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUM5QyxNQUFNLFVBQVUsR0FBRyxLQUFLLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUNqRCxPQUFPLElBQUksQ0FBQyxHQUFHLENBQUMsU0FBUyxFQUFFLFVBQVUsQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUM3QyxDQUFDLENBQUMsQ0FBQztJQUVNLE1BQU0sR0FDYixTQUFTLENBQW9ELFFBQVEsQ0FBQyxDQUFDO0lBR3pFLEtBQUs7UUFDSCxJQUFJLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUMxQixDQUFDO3VHQWpDVSxZQUFZOzJGQUFaLFlBQVksdWlEQ3ZDekIsb3NCQW9CQyw0NUNETUcsa0JBQWtCLDBEQUNsQixhQUFhLDJFQUNiLGtCQUFrQixxSEFDbEIsZUFBZSwwSkFDZixZQUFZOzsyRkFTSCxZQUFZO2tCQXJCeEIsU0FBUzsrQkFDRSxRQUFRLGNBR04sSUFBSSxtQkFDQyx1QkFBdUIsQ0FBQyxNQUFNLGlCQUNoQyxpQkFBaUIsQ0FBQyxTQUFTLFdBQ2pDO3dCQUNQLGtCQUFrQjt3QkFDbEIsYUFBYTt3QkFDYixrQkFBa0I7d0JBQ2xCLGVBQWU7d0JBQ2YsWUFBWTtxQkFDYixrQkFDZSxFQUFFLFFBQ1o7d0JBQ0osaUJBQWlCLEVBQUUsb0JBQW9CO3dCQUN2QyxrQkFBa0IsRUFBRSxxQkFBcUI7d0JBQ3pDLGlCQUFpQixFQUFFLG9CQUFvQjtxQkFDeEM7OEJBaUNELEtBQUs7c0JBREosWUFBWTt1QkFBQyxPQUFPIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksXG4gIENvbXBvbmVudCxcbiAgY29tcHV0ZWQsXG4gIEVsZW1lbnRSZWYsXG4gIEhvc3RMaXN0ZW5lcixcbiAgbW9kZWwsXG4gIHZpZXdDaGlsZCxcbiAgVmlld0VuY2Fwc3VsYXRpb24sXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTWF0ZXJpYWxEZXNpZ25Db21wb25lbnQgfSBmcm9tICcuLi9tYXRlcmlhbC1kZXNpZ24uY29tcG9uZW50JztcbmltcG9ydCB7IFRvdWNoQXJlYUNvbXBvbmVudCB9IGZyb20gJy4uL3RvdWNoLWFyZWEvdG91Y2gtYXJlYS5jb21wb25lbnQnO1xuaW1wb3J0IHsgU2xvdERpcmVjdGl2ZSB9IGZyb20gJy4uLy4uL2RpcmVjdGl2ZXMvc2xvdC5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgRm9jdXNSaW5nQ29tcG9uZW50IH0gZnJvbSAnLi4vZm9jdXMtcmluZy9mb2N1cy1yaW5nLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBSaXBwbGVDb21wb25lbnQgfSBmcm9tICcuLi9yaXBwbGUvcmlwcGxlLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgdG9PYnNlcnZhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZS9yeGpzLWludGVyb3AnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdtZC10YWInLFxuICB0ZW1wbGF0ZVVybDogJy4vdGFiLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmw6ICcuL3RhYi5jb21wb25lbnQuc2NzcycsXG4gIHN0YW5kYWxvbmU6IHRydWUsXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxuICBlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbi5TaGFkb3dEb20sXG4gIGltcG9ydHM6IFtcbiAgICBUb3VjaEFyZWFDb21wb25lbnQsXG4gICAgU2xvdERpcmVjdGl2ZSxcbiAgICBGb2N1c1JpbmdDb21wb25lbnQsXG4gICAgUmlwcGxlQ29tcG9uZW50LFxuICAgIENvbW1vbk1vZHVsZSxcbiAgXSxcbiAgaG9zdERpcmVjdGl2ZXM6IFtdLFxuICBob3N0OiB7XG4gICAgJ1thdHRyLnNlbGVjdGVkXSc6ICdzZWxlY3RlZCgpIHx8IG51bGwnLFxuICAgICdbYXR0ci5zZWNvbmRhcnldJzogJ3NlY29uZGFyeSgpIHx8IG51bGwnLFxuICAgICdbYXR0ci5kaXNhYmxlZF0nOiAnZGlzYWJsZWQoKSB8fCBudWxsJyxcbiAgfSxcbn0pXG5leHBvcnQgY2xhc3MgVGFiQ29tcG9uZW50IGV4dGVuZHMgTWF0ZXJpYWxEZXNpZ25Db21wb25lbnQge1xuICByZWFkb25seSBzZWNvbmRhcnkgPSBtb2RlbChmYWxzZSk7XG4gIHJlYWRvbmx5IGRpc2FibGVkID0gbW9kZWwoZmFsc2UpO1xuICByZWFkb25seSBocmVmID0gbW9kZWw8c3RyaW5nPigpO1xuICByZWFkb25seSBhbmNob3JUYXJnZXQgPSBtb2RlbDxzdHJpbmc+KCk7XG4gIHJlYWRvbmx5IG5hbWUgPSBtb2RlbDxzdHJpbmc+KCk7XG4gIHJlYWRvbmx5IHZhbHVlID0gbW9kZWw8c3RyaW5nPigpO1xuICByZWFkb25seSBzZWxlY3RlZCA9IG1vZGVsKGZhbHNlKTtcbiAgcmVhZG9ubHkgc2VsZWN0ZWQkID0gdG9PYnNlcnZhYmxlKHRoaXMuc2VsZWN0ZWQpO1xuXG4gIHJlYWRvbmx5IGxhYmVsU2xvdCA9IHRoaXMuc2xvdERpcmVjdGl2ZSgnbGFiZWwnKTtcblxuICBwcml2YXRlIHJlYWRvbmx5IF9sYWJlbCA9IHZpZXdDaGlsZDxFbGVtZW50UmVmPEhUTUxFbGVtZW50Pj4oJ2xhYmVsJyk7XG5cbiAgcmVhZG9ubHkgY29udGVudFdpZHRoID0gY29tcHV0ZWQoKCkgPT4ge1xuICAgIGNvbnN0IGljb24gPSB0aGlzLmRlZmF1bHRTbG90KCk/LmVsZW1lbnRzKClbMF07XG4gICAgdGhpcy5sYWJlbFNsb3QoKTtcbiAgICBjb25zdCBzZWNvbmRhcnkgPSB0aGlzLnNlY29uZGFyeSgpO1xuICAgIGNvbnN0IGxhYmVsID0gdGhpcy5fbGFiZWwoKT8ubmF0aXZlRWxlbWVudDtcbiAgICBpZiAoc2Vjb25kYXJ5KSB7XG4gICAgICByZXR1cm4gdGhpcy5ob3N0RWxlbWVudC5vZmZzZXRXaWR0aDtcbiAgICB9XG4gICAgY29uc3QgaWNvbldpZHRoID0gaWNvbiA/IGljb24ub2Zmc2V0V2lkdGggOiAwO1xuICAgIGNvbnN0IGxhYmVsV2lkdGggPSBsYWJlbCA/IGxhYmVsLm9mZnNldFdpZHRoIDogMDtcbiAgICByZXR1cm4gTWF0aC5tYXgoaWNvbldpZHRoLCBsYWJlbFdpZHRoKSArIDg7XG4gIH0pO1xuXG4gIHJlYWRvbmx5IGJ1dHRvbiA9XG4gICAgdmlld0NoaWxkPEVsZW1lbnRSZWY8SFRNTEJ1dHRvbkVsZW1lbnQgfCBIVE1MQW5jaG9yRWxlbWVudD4+KCdidXR0b24nKTtcblxuICBASG9zdExpc3RlbmVyKCdjbGljaycpXG4gIGNsaWNrKCkge1xuICAgIHRoaXMuc2VsZWN0ZWQuc2V0KHRydWUpO1xuICB9XG59XG4iLCI8bmctdGVtcGxhdGUgI2NvbnRlbnQ+XG4gIDxtZC10b3VjaC1hcmVhIC8+XG4gIDxzbG90Pjwvc2xvdD5cbiAgPHNwYW4gI2xhYmVsIHBhcnQ9XCJsYWJlbFwiPlxuICAgIDxzbG90IG5hbWU9XCJsYWJlbFwiPjwvc2xvdD5cbiAgPC9zcGFuPlxuPC9uZy10ZW1wbGF0ZT5cblxuPG1kLWZvY3VzLXJpbmcgcGFydD1cImZvY3VzLXJpbmdcIiBbdGFyZ2V0XT1cImJ1dHRvbigpXCIgLz5cbjxtZC1yaXBwbGUgcGFydD1cInJpcHBsZVwiIFt0YXJnZXRdPVwiYnV0dG9uKClcIiAvPlxuQGlmIChocmVmKCkpIHtcbjxhIHBhcnQ9XCJidXR0b25cIiAjYnV0dG9uIFthdHRyLmhyZWZdPVwiaHJlZigpID8/IG51bGxcIiBbYXR0ci50YXJnZXRdPVwiYW5jaG9yVGFyZ2V0KCkgPz8gbnVsbFwiXG4gIFt0YWJJbmRleF09XCJkaXNhYmxlZCgpID8gLTEgOiAwXCI+XG4gIDxuZy1jb250YWluZXIgKm5nVGVtcGxhdGVPdXRsZXQ9XCJjb250ZW50XCIgLz5cbjwvYT5cbn0gQGVsc2Uge1xuPGJ1dHRvbiBwYXJ0PVwiYnV0dG9uXCIgI2J1dHRvbiB0eXBlPVwiYnV0dG9uXCIgW2Rpc2FibGVkXT1cImRpc2FibGVkKCkgfHwgbnVsbFwiIFthdHRyLm5hbWVdPVwibmFtZSgpID8/IG51bGxcIlxuICBbYXR0ci52YWx1ZV09XCJ2YWx1ZSgpID8/IG51bGxcIj5cbiAgPG5nLWNvbnRhaW5lciAqbmdUZW1wbGF0ZU91dGxldD1cImNvbnRlbnRcIiAvPlxuPC9idXR0b24+XG59Il19