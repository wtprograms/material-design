import { ChangeDetectionStrategy, Component, inject, model, viewChild, ViewEncapsulation, } from '@angular/core';
import { MaterialDesignComponent } from '../material-design.component';
import { PopoverComponent } from '../popover/popover.component';
import { AttachableDirective } from '../../directives/attachable.directive';
import * as i0 from "@angular/core";
import * as i1 from "../../directives/attachable.directive";
export class MenuComponent extends MaterialDesignComponent {
    placement = model('bottom-start');
    trigger = model('click');
    offset = model(8);
    popover = viewChild('popover');
    attachableDirective = inject(AttachableDirective);
    useContainerWidth = model(false);
    constructor() {
        super();
        this.attachableDirective.events.set([
            'click',
            'pointerdown',
            'pointerenter',
            'pointerleave',
            'contextmenu',
        ]);
    }
    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.9", ngImport: i0, type: MenuComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.2.0", version: "18.2.9", type: MenuComponent, isStandalone: true, selector: "md-menu", inputs: { placement: { classPropertyName: "placement", publicName: "placement", isSignal: true, isRequired: false, transformFunction: null }, trigger: { classPropertyName: "trigger", publicName: "trigger", isSignal: true, isRequired: false, transformFunction: null }, offset: { classPropertyName: "offset", publicName: "offset", isSignal: true, isRequired: false, transformFunction: null }, useContainerWidth: { classPropertyName: "useContainerWidth", publicName: "useContainerWidth", isSignal: true, isRequired: false, transformFunction: null } }, outputs: { placement: "placementChange", trigger: "triggerChange", offset: "offsetChange", useContainerWidth: "useContainerWidthChange" }, viewQueries: [{ propertyName: "popover", first: true, predicate: ["popover"], descendants: true, isSignal: true }], usesInheritance: true, hostDirectives: [{ directive: i1.AttachableDirective, inputs: ["target", "target"] }], ngImport: i0, template: "<md-popover #popover part=\"popover\" [target]=\"attachableDirective.target()\" [offset]=\"offset()\"\n  [placement]=\"placement()\" [trigger]=\"trigger()\" [useContainerWidth]=\"useContainerWidth()\">\n  <slot></slot>\n</md-popover>", styles: [":host{position:absolute;display:inline-flex;flex-direction:column}:host md-popover{min-width:112px;max-width:280px}:host md-popover::part(body){padding-top:8px;padding-bottom:8px}:host ::slotted(md-divider){border-color:var(--md-sys-color-outline-variant)}\n"], dependencies: [{ kind: "component", type: PopoverComponent, selector: "md-popover", inputs: ["trigger", "flip", "shift", "offset", "delay", "placement", "strategy", "native", "open", "manualClose", "useContainerWidth"], outputs: ["triggerChange", "flipChange", "shiftChange", "offsetChange", "delayChange", "placementChange", "strategyChange", "nativeChange", "openChange", "manualCloseChange", "useContainerWidthChange", "stateChange"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.ShadowDom });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.9", ngImport: i0, type: MenuComponent, decorators: [{
            type: Component,
            args: [{ selector: 'md-menu', standalone: true, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.ShadowDom, imports: [PopoverComponent], hostDirectives: [
                        {
                            directive: AttachableDirective,
                            inputs: ['target'],
                        },
                    ], host: {}, template: "<md-popover #popover part=\"popover\" [target]=\"attachableDirective.target()\" [offset]=\"offset()\"\n  [placement]=\"placement()\" [trigger]=\"trigger()\" [useContainerWidth]=\"useContainerWidth()\">\n  <slot></slot>\n</md-popover>", styles: [":host{position:absolute;display:inline-flex;flex-direction:column}:host md-popover{min-width:112px;max-width:280px}:host md-popover::part(body){padding-top:8px;padding-bottom:8px}:host ::slotted(md-divider){border-color:var(--md-sys-color-outline-variant)}\n"] }]
        }], ctorParameters: () => [] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWVudS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy93dHByb2dyYW1zL21hdGVyaWFsLWRlc2lnbi9zcmMvbGliL2NvbXBvbmVudHMvbWVudS9tZW51LmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3d0cHJvZ3JhbXMvbWF0ZXJpYWwtZGVzaWduL3NyYy9saWIvY29tcG9uZW50cy9tZW51L21lbnUuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUNMLHVCQUF1QixFQUN2QixTQUFTLEVBQ1QsTUFBTSxFQUNOLEtBQUssRUFDTCxTQUFTLEVBQ1QsaUJBQWlCLEdBQ2xCLE1BQU0sZUFBZSxDQUFDO0FBQ3ZCLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLDhCQUE4QixDQUFDO0FBQ3ZFLE9BQU8sRUFBRSxnQkFBZ0IsRUFBa0IsTUFBTSw4QkFBOEIsQ0FBQztBQUVoRixPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSx1Q0FBdUMsQ0FBQzs7O0FBa0I1RSxNQUFNLE9BQU8sYUFBYyxTQUFRLHVCQUF1QjtJQUMvQyxTQUFTLEdBQUcsS0FBSyxDQUFZLGNBQWMsQ0FBQyxDQUFDO0lBQzdDLE9BQU8sR0FBRyxLQUFLLENBQWlCLE9BQU8sQ0FBQyxDQUFDO0lBQ3pDLE1BQU0sR0FBRyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDbEIsT0FBTyxHQUFHLFNBQVMsQ0FBbUIsU0FBUyxDQUFDLENBQUM7SUFDakQsbUJBQW1CLEdBQUcsTUFBTSxDQUFDLG1CQUFtQixDQUFDLENBQUM7SUFDbEQsaUJBQWlCLEdBQUcsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBRTFDO1FBQ0UsS0FBSyxFQUFFLENBQUM7UUFDUixJQUFJLENBQUMsbUJBQW1CLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQztZQUNsQyxPQUFPO1lBQ1AsYUFBYTtZQUNiLGNBQWM7WUFDZCxjQUFjO1lBQ2QsYUFBYTtTQUNkLENBQUMsQ0FBQztJQUNMLENBQUM7dUdBakJVLGFBQWE7MkZBQWIsYUFBYSxxOUJDN0IxQiwyT0FHYSw0VERpQkQsZ0JBQWdCOzsyRkFTZixhQUFhO2tCQWhCekIsU0FBUzsrQkFDRSxTQUFTLGNBR1AsSUFBSSxtQkFDQyx1QkFBdUIsQ0FBQyxNQUFNLGlCQUNoQyxpQkFBaUIsQ0FBQyxTQUFTLFdBQ2pDLENBQUMsZ0JBQWdCLENBQUMsa0JBQ1g7d0JBQ2Q7NEJBQ0UsU0FBUyxFQUFFLG1CQUFtQjs0QkFDOUIsTUFBTSxFQUFFLENBQUMsUUFBUSxDQUFDO3lCQUNuQjtxQkFDRixRQUNLLEVBQUUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSxcbiAgQ29tcG9uZW50LFxuICBpbmplY3QsXG4gIG1vZGVsLFxuICB2aWV3Q2hpbGQsXG4gIFZpZXdFbmNhcHN1bGF0aW9uLFxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE1hdGVyaWFsRGVzaWduQ29tcG9uZW50IH0gZnJvbSAnLi4vbWF0ZXJpYWwtZGVzaWduLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBQb3BvdmVyQ29tcG9uZW50LCBQb3BvdmVyVHJpZ2dlciB9IGZyb20gJy4uL3BvcG92ZXIvcG9wb3Zlci5jb21wb25lbnQnO1xuaW1wb3J0IHsgUGxhY2VtZW50IH0gZnJvbSAnQGZsb2F0aW5nLXVpL2RvbSc7XG5pbXBvcnQgeyBBdHRhY2hhYmxlRGlyZWN0aXZlIH0gZnJvbSAnLi4vLi4vZGlyZWN0aXZlcy9hdHRhY2hhYmxlLmRpcmVjdGl2ZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ21kLW1lbnUnLFxuICB0ZW1wbGF0ZVVybDogJy4vbWVudS5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsOiAnLi9tZW51LmNvbXBvbmVudC5zY3NzJyxcbiAgc3RhbmRhbG9uZTogdHJ1ZSxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG4gIGVuY2Fwc3VsYXRpb246IFZpZXdFbmNhcHN1bGF0aW9uLlNoYWRvd0RvbSxcbiAgaW1wb3J0czogW1BvcG92ZXJDb21wb25lbnRdLFxuICBob3N0RGlyZWN0aXZlczogW1xuICAgIHtcbiAgICAgIGRpcmVjdGl2ZTogQXR0YWNoYWJsZURpcmVjdGl2ZSxcbiAgICAgIGlucHV0czogWyd0YXJnZXQnXSxcbiAgICB9LFxuICBdLFxuICBob3N0OiB7fSxcbn0pXG5leHBvcnQgY2xhc3MgTWVudUNvbXBvbmVudCBleHRlbmRzIE1hdGVyaWFsRGVzaWduQ29tcG9uZW50IHtcbiAgcmVhZG9ubHkgcGxhY2VtZW50ID0gbW9kZWw8UGxhY2VtZW50PignYm90dG9tLXN0YXJ0Jyk7XG4gIHJlYWRvbmx5IHRyaWdnZXIgPSBtb2RlbDxQb3BvdmVyVHJpZ2dlcj4oJ2NsaWNrJyk7XG4gIHJlYWRvbmx5IG9mZnNldCA9IG1vZGVsKDgpO1xuICByZWFkb25seSBwb3BvdmVyID0gdmlld0NoaWxkPFBvcG92ZXJDb21wb25lbnQ+KCdwb3BvdmVyJyk7XG4gIHJlYWRvbmx5IGF0dGFjaGFibGVEaXJlY3RpdmUgPSBpbmplY3QoQXR0YWNoYWJsZURpcmVjdGl2ZSk7XG4gIHJlYWRvbmx5IHVzZUNvbnRhaW5lcldpZHRoID0gbW9kZWwoZmFsc2UpO1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5hdHRhY2hhYmxlRGlyZWN0aXZlLmV2ZW50cy5zZXQoW1xuICAgICAgJ2NsaWNrJyxcbiAgICAgICdwb2ludGVyZG93bicsXG4gICAgICAncG9pbnRlcmVudGVyJyxcbiAgICAgICdwb2ludGVybGVhdmUnLFxuICAgICAgJ2NvbnRleHRtZW51JyxcbiAgICBdKTtcbiAgfVxufVxuIiwiPG1kLXBvcG92ZXIgI3BvcG92ZXIgcGFydD1cInBvcG92ZXJcIiBbdGFyZ2V0XT1cImF0dGFjaGFibGVEaXJlY3RpdmUudGFyZ2V0KClcIiBbb2Zmc2V0XT1cIm9mZnNldCgpXCJcbiAgW3BsYWNlbWVudF09XCJwbGFjZW1lbnQoKVwiIFt0cmlnZ2VyXT1cInRyaWdnZXIoKVwiIFt1c2VDb250YWluZXJXaWR0aF09XCJ1c2VDb250YWluZXJXaWR0aCgpXCI+XG4gIDxzbG90Pjwvc2xvdD5cbjwvbWQtcG9wb3Zlcj4iXX0=