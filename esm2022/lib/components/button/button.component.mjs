import { ChangeDetectionStrategy, Component, computed, model, viewChild, ViewEncapsulation, } from '@angular/core';
import { MaterialDesignComponent } from '../material-design.component';
import { ForwardFocusDirective } from '../../directives/forward-focus.directive';
import { ProgressIndicatorComponent } from '../progress-indicator/progress-indicator.component';
import { TouchAreaComponent } from '../touch-area/touch-area.component';
import { RippleComponent } from '../ripple/ripple.component';
import { CommonModule } from '@angular/common';
import { ParentActivationDirective } from '../../directives/parent-activation.directive';
import { attachTarget } from '../../directives/attachable.directive';
import { ElevationComponent } from '../elevation/elevation.component';
import { FocusRingComponent } from '../focus-ring/focus-ring.component';
import { SlotDirective } from '../../directives/slot.directive';
import * as i0 from "@angular/core";
import * as i1 from "../../directives/parent-activation.directive";
import * as i2 from "../../directives/forward-focus.directive";
import * as i3 from "@angular/common";
export class ButtonComponent extends MaterialDesignComponent {
    variant = model('filled');
    disabled = model(false);
    type = model('button');
    href = model();
    anchorTarget = model();
    name = model();
    value = model();
    progressIndeterminate = model(false);
    progressValue = model(0);
    progressMax = model(0);
    button = viewChild('button');
    leadingSlot = this.slotDirective('leading');
    trailingSlot = this.slotDirective('trailing');
    hasElevation = computed(() => (this.variant() === 'elevated' ||
        this.variant() === 'filled' ||
        this.variant() === 'tonal') &&
        !this.progressIndeterminate() &&
        !this.progressValue());
    elevationLevel = computed(() => !this.disabled() && this.variant() === 'elevated' ? 1 : 0);
    constructor() {
        super();
        attachTarget(ForwardFocusDirective, this.button);
        attachTarget(ParentActivationDirective, this.button);
    }
    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.9", ngImport: i0, type: ButtonComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "18.2.9", type: ButtonComponent, isStandalone: true, selector: "md-button", inputs: { variant: { classPropertyName: "variant", publicName: "variant", isSignal: true, isRequired: false, transformFunction: null }, disabled: { classPropertyName: "disabled", publicName: "disabled", isSignal: true, isRequired: false, transformFunction: null }, type: { classPropertyName: "type", publicName: "type", isSignal: true, isRequired: false, transformFunction: null }, href: { classPropertyName: "href", publicName: "href", isSignal: true, isRequired: false, transformFunction: null }, anchorTarget: { classPropertyName: "anchorTarget", publicName: "anchorTarget", isSignal: true, isRequired: false, transformFunction: null }, name: { classPropertyName: "name", publicName: "name", isSignal: true, isRequired: false, transformFunction: null }, value: { classPropertyName: "value", publicName: "value", isSignal: true, isRequired: false, transformFunction: null }, progressIndeterminate: { classPropertyName: "progressIndeterminate", publicName: "progressIndeterminate", isSignal: true, isRequired: false, transformFunction: null }, progressValue: { classPropertyName: "progressValue", publicName: "progressValue", isSignal: true, isRequired: false, transformFunction: null }, progressMax: { classPropertyName: "progressMax", publicName: "progressMax", isSignal: true, isRequired: false, transformFunction: null } }, outputs: { variant: "variantChange", disabled: "disabledChange", type: "typeChange", href: "hrefChange", anchorTarget: "anchorTargetChange", name: "nameChange", value: "valueChange", progressIndeterminate: "progressIndeterminateChange", progressValue: "progressValueChange", progressMax: "progressMaxChange" }, host: { properties: { "attr.variant": "variant()", "attr.disabled": "disabled() || null", "attr.busy": "progressIndeterminate() || !!progressValue() || null", "attr.leading": "leadingSlot()?.any() || null", "attr.trailing": "trailingSlot()?.any() || null" } }, viewQueries: [{ propertyName: "button", first: true, predicate: ["button"], descendants: true, isSignal: true }], usesInheritance: true, hostDirectives: [{ directive: i1.ParentActivationDirective }, { directive: i2.ForwardFocusDirective }], ngImport: i0, template: "<ng-template #content>\n  <md-touch-area />\n  <slot name=\"leading\"></slot>\n  <slot></slot>\n  <slot name=\"trailing\"></slot>\n</ng-template>\n\n@if (hasElevation()) {\n<md-elevation [target]=\"button()\" [level]=\"elevationLevel()\" />\n}\n<md-focus-ring part=\"focus-ring\" [target]=\"button()\" />\n<md-ripple part=\"ripple\" [target]=\"button()\" />\n@if (href()) {\n<a part=\"button\" #button [attr.href]=\"href() ?? null\" [attr.target]=\"anchorTarget() ?? null\"\n  [tabIndex]=\"disabled() ? -1 : 0\">\n  <ng-container *ngTemplateOutlet=\"content\" />\n</a>\n} @else {\n<button part=\"button\" #button [type]=\"type()\" [disabled]=\"disabled() || null\" [attr.name]=\"name() ?? null\"\n  [attr.value]=\"value() ?? null\">\n  <ng-container *ngTemplateOutlet=\"content\" />\n</button>\n}\n\n@if (!disabled() && (progressValue() || progressIndeterminate())) {\n<div class=\"progress\">\n  <md-progress-indicator [size]=\"28\" [value]=\"progressValue()\" [indeterminate]=\"progressIndeterminate()\" />\n</div>\n}", styles: [":host{--md-comp-button-icon-size: 18;--_color: currentColor;position:relative;display:inline-flex;border-radius:var(--md-sys-shape-full);height:40px;cursor:pointer;transition-property:background-color,color,border-color;transition-duration:var(--md-sys-motion-duration-short-4);transition-timing-function:var(--md-sys-motion-easing-standard);flex-shrink:0;place-content:center;place-items:center;gap:8px;font-size:var(--md-sys-typescale-label-large-size);font-weight:var(--md-sys-typescale-label-large-weight);font-family:var(--md-sys-typescale-label-large-font)}:host button,:host a{background-color:transparent;display:inherit;font:inherit;color:inherit;padding:0;margin:0;gap:inherit;text-decoration:none;border-radius:inherit;appearance:none;border:0;outline:none;cursor:pointer;align-items:center;transition-property:opacity;transition-duration:var(--md-sys-motion-duration-short-4);transition-timing-function:var(--md-sys-motion-easing-standard)}:host ::slotted(md-icon){--md-comp-icon-size: var(--md-comp-button-icon-size)}:host md-ripple{--md-comp-ripple-color: var(--_color)}:host .progress{position:absolute;display:inline-flex;align-self:center;justify-content:center;inset:0}:host md-progress-indicator{--md-comp-progress-indicator-color: var(--_color)}:host .leading,:host .trailing{display:none}:host([variant=elevated]){background-color:var(--md-sys-color-surface-container-low);color:var(--md-sys-color-primary)}:host([variant=filled]){background-color:var(--md-sys-color-primary);color:var(--md-sys-color-primary-on)}:host([variant=tonal]){background-color:var(--md-sys-color-secondary-container);color:var(--md-sys-color-secondary-container-on)}:host([variant=outlined]){border:1px solid var(--md-sys-color-outline);color:var(--md-sys-color-primary)}:host([variant=text]){color:var(--md-sys-color-primary)}:host([variant=plain]){border-radius:0;color:var(--md-sys-color-surface-variant-on)}:host([variant=elevated]){padding-inline:24px}:host([variant=elevated][leading=true]){padding-inline-start:16px}:host([variant=elevated][trailing=true]){padding-inline-end:16px}:host([variant=filled]){padding-inline:24px}:host([variant=filled][leading=true]){padding-inline-start:16px}:host([variant=filled][trailing=true]){padding-inline-end:16px}:host([variant=tonal]){padding-inline:24px}:host([variant=tonal][leading=true]){padding-inline-start:16px}:host([variant=tonal][trailing=true]){padding-inline-end:16px}:host([variant=outlined]){padding-inline:24px}:host([variant=outlined][leading=true]){padding-inline-start:16px}:host([variant=outlined][trailing=true]){padding-inline-end:16px}:host([variant=text]){padding-inline:16px}:host([variant=text][leading=true]){padding-inline-start:12px}:host([variant=text][trailing=true]){padding-inline-end:12px}:host([busy=true]:not([disabled=true])){pointer-events:none}:host([busy=true]:not([disabled=true])) a,:host([busy=true]:not([disabled=true])) button{opacity:0}:host([disabled=true]){pointer-events:none;cursor:default;color:color-mix(in oklab,transparent,var(--md-sys-color-surface-on) calc(var(--md-sys-disabled-color) * 100%))}\n"], dependencies: [{ kind: "component", type: ProgressIndicatorComponent, selector: "md-progress-indicator", inputs: ["variant", "value", "max", "indeterminate", "fourColor", "size", "width", "buffer", "circleSize"], outputs: ["variantChange", "valueChange", "maxChange", "indeterminateChange", "fourColorChange", "sizeChange", "widthChange", "bufferChange", "circleSizeChange"] }, { kind: "component", type: TouchAreaComponent, selector: "md-touch-area" }, { kind: "component", type: ElevationComponent, selector: "md-elevation", inputs: ["level", "hoverable", "interactive", "dragging"], outputs: ["levelChange", "hoverableChange", "interactiveChange", "draggingChange"] }, { kind: "component", type: RippleComponent, selector: "md-ripple, [mdRipple]", inputs: ["hoverable", "interactive"], outputs: ["hoverableChange", "interactiveChange"] }, { kind: "component", type: FocusRingComponent, selector: "md-focus-ring", inputs: ["focusVisible"], outputs: ["focusVisibleChange"] }, { kind: "ngmodule", type: CommonModule }, { kind: "directive", type: i3.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }, { kind: "directive", type: SlotDirective, selector: "slot", inputs: ["name", "slot"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.ShadowDom });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.9", ngImport: i0, type: ButtonComponent, decorators: [{
            type: Component,
            args: [{ selector: 'md-button', changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.ShadowDom, standalone: true, imports: [
                        ProgressIndicatorComponent,
                        TouchAreaComponent,
                        ElevationComponent,
                        RippleComponent,
                        FocusRingComponent,
                        CommonModule,
                        SlotDirective,
                    ], hostDirectives: [ParentActivationDirective, ForwardFocusDirective], host: {
                        '[attr.variant]': 'variant()',
                        '[attr.disabled]': 'disabled() || null',
                        '[attr.busy]': 'progressIndeterminate() || !!progressValue() || null',
                        '[attr.leading]': `leadingSlot()?.any() || null`,
                        '[attr.trailing]': `trailingSlot()?.any() || null`,
                    }, template: "<ng-template #content>\n  <md-touch-area />\n  <slot name=\"leading\"></slot>\n  <slot></slot>\n  <slot name=\"trailing\"></slot>\n</ng-template>\n\n@if (hasElevation()) {\n<md-elevation [target]=\"button()\" [level]=\"elevationLevel()\" />\n}\n<md-focus-ring part=\"focus-ring\" [target]=\"button()\" />\n<md-ripple part=\"ripple\" [target]=\"button()\" />\n@if (href()) {\n<a part=\"button\" #button [attr.href]=\"href() ?? null\" [attr.target]=\"anchorTarget() ?? null\"\n  [tabIndex]=\"disabled() ? -1 : 0\">\n  <ng-container *ngTemplateOutlet=\"content\" />\n</a>\n} @else {\n<button part=\"button\" #button [type]=\"type()\" [disabled]=\"disabled() || null\" [attr.name]=\"name() ?? null\"\n  [attr.value]=\"value() ?? null\">\n  <ng-container *ngTemplateOutlet=\"content\" />\n</button>\n}\n\n@if (!disabled() && (progressValue() || progressIndeterminate())) {\n<div class=\"progress\">\n  <md-progress-indicator [size]=\"28\" [value]=\"progressValue()\" [indeterminate]=\"progressIndeterminate()\" />\n</div>\n}", styles: [":host{--md-comp-button-icon-size: 18;--_color: currentColor;position:relative;display:inline-flex;border-radius:var(--md-sys-shape-full);height:40px;cursor:pointer;transition-property:background-color,color,border-color;transition-duration:var(--md-sys-motion-duration-short-4);transition-timing-function:var(--md-sys-motion-easing-standard);flex-shrink:0;place-content:center;place-items:center;gap:8px;font-size:var(--md-sys-typescale-label-large-size);font-weight:var(--md-sys-typescale-label-large-weight);font-family:var(--md-sys-typescale-label-large-font)}:host button,:host a{background-color:transparent;display:inherit;font:inherit;color:inherit;padding:0;margin:0;gap:inherit;text-decoration:none;border-radius:inherit;appearance:none;border:0;outline:none;cursor:pointer;align-items:center;transition-property:opacity;transition-duration:var(--md-sys-motion-duration-short-4);transition-timing-function:var(--md-sys-motion-easing-standard)}:host ::slotted(md-icon){--md-comp-icon-size: var(--md-comp-button-icon-size)}:host md-ripple{--md-comp-ripple-color: var(--_color)}:host .progress{position:absolute;display:inline-flex;align-self:center;justify-content:center;inset:0}:host md-progress-indicator{--md-comp-progress-indicator-color: var(--_color)}:host .leading,:host .trailing{display:none}:host([variant=elevated]){background-color:var(--md-sys-color-surface-container-low);color:var(--md-sys-color-primary)}:host([variant=filled]){background-color:var(--md-sys-color-primary);color:var(--md-sys-color-primary-on)}:host([variant=tonal]){background-color:var(--md-sys-color-secondary-container);color:var(--md-sys-color-secondary-container-on)}:host([variant=outlined]){border:1px solid var(--md-sys-color-outline);color:var(--md-sys-color-primary)}:host([variant=text]){color:var(--md-sys-color-primary)}:host([variant=plain]){border-radius:0;color:var(--md-sys-color-surface-variant-on)}:host([variant=elevated]){padding-inline:24px}:host([variant=elevated][leading=true]){padding-inline-start:16px}:host([variant=elevated][trailing=true]){padding-inline-end:16px}:host([variant=filled]){padding-inline:24px}:host([variant=filled][leading=true]){padding-inline-start:16px}:host([variant=filled][trailing=true]){padding-inline-end:16px}:host([variant=tonal]){padding-inline:24px}:host([variant=tonal][leading=true]){padding-inline-start:16px}:host([variant=tonal][trailing=true]){padding-inline-end:16px}:host([variant=outlined]){padding-inline:24px}:host([variant=outlined][leading=true]){padding-inline-start:16px}:host([variant=outlined][trailing=true]){padding-inline-end:16px}:host([variant=text]){padding-inline:16px}:host([variant=text][leading=true]){padding-inline-start:12px}:host([variant=text][trailing=true]){padding-inline-end:12px}:host([busy=true]:not([disabled=true])){pointer-events:none}:host([busy=true]:not([disabled=true])) a,:host([busy=true]:not([disabled=true])) button{opacity:0}:host([disabled=true]){pointer-events:none;cursor:default;color:color-mix(in oklab,transparent,var(--md-sys-color-surface-on) calc(var(--md-sys-disabled-color) * 100%))}\n"] }]
        }], ctorParameters: () => [] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnV0dG9uLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3d0cHJvZ3JhbXMvbWF0ZXJpYWwtZGVzaWduL3NyYy9saWIvY29tcG9uZW50cy9idXR0b24vYnV0dG9uLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3d0cHJvZ3JhbXMvbWF0ZXJpYWwtZGVzaWduL3NyYy9saWIvY29tcG9uZW50cy9idXR0b24vYnV0dG9uLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFDTCx1QkFBdUIsRUFDdkIsU0FBUyxFQUNULFFBQVEsRUFFUixLQUFLLEVBQ0wsU0FBUyxFQUNULGlCQUFpQixHQUNsQixNQUFNLGVBQWUsQ0FBQztBQUN2QixPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQztBQUN2RSxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSwwQ0FBMEMsQ0FBQztBQUNqRixPQUFPLEVBQUUsMEJBQTBCLEVBQUUsTUFBTSxvREFBb0QsQ0FBQztBQUNoRyxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxvQ0FBb0MsQ0FBQztBQUN4RSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFDN0QsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSx5QkFBeUIsRUFBRSxNQUFNLDhDQUE4QyxDQUFDO0FBRXpGLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSx1Q0FBdUMsQ0FBQztBQUNyRSxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxrQ0FBa0MsQ0FBQztBQUN0RSxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxvQ0FBb0MsQ0FBQztBQUN4RSxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0saUNBQWlDLENBQUM7Ozs7O0FBbUNoRSxNQUFNLE9BQU8sZUFBZ0IsU0FBUSx1QkFBdUI7SUFDakQsT0FBTyxHQUFHLEtBQUssQ0FBZ0IsUUFBUSxDQUFDLENBQUM7SUFDekMsUUFBUSxHQUFHLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUN4QixJQUFJLEdBQUcsS0FBSyxDQUFvQixRQUFRLENBQUMsQ0FBQztJQUMxQyxJQUFJLEdBQUcsS0FBSyxFQUFVLENBQUM7SUFDdkIsWUFBWSxHQUFHLEtBQUssRUFBVSxDQUFDO0lBQy9CLElBQUksR0FBRyxLQUFLLEVBQVUsQ0FBQztJQUN2QixLQUFLLEdBQUcsS0FBSyxFQUFVLENBQUM7SUFDeEIscUJBQXFCLEdBQUcsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ3JDLGFBQWEsR0FBRyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDekIsV0FBVyxHQUFHLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUV2QixNQUFNLEdBQ2IsU0FBUyxDQUFvRCxRQUFRLENBQUMsQ0FBQztJQUVoRSxXQUFXLEdBQUcsSUFBSSxDQUFDLGFBQWEsQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUM1QyxZQUFZLEdBQUcsSUFBSSxDQUFDLGFBQWEsQ0FBQyxVQUFVLENBQUMsQ0FBQztJQUU5QyxZQUFZLEdBQUcsUUFBUSxDQUM5QixHQUFHLEVBQUUsQ0FDSCxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsS0FBSyxVQUFVO1FBQzVCLElBQUksQ0FBQyxPQUFPLEVBQUUsS0FBSyxRQUFRO1FBQzNCLElBQUksQ0FBQyxPQUFPLEVBQUUsS0FBSyxPQUFPLENBQUM7UUFDN0IsQ0FBQyxJQUFJLENBQUMscUJBQXFCLEVBQUU7UUFDN0IsQ0FBQyxJQUFJLENBQUMsYUFBYSxFQUFFLENBQ3hCLENBQUM7SUFDTyxjQUFjLEdBQUcsUUFBUSxDQUFDLEdBQUcsRUFBRSxDQUN0QyxDQUFDLElBQUksQ0FBQyxRQUFRLEVBQUUsSUFBSSxJQUFJLENBQUMsT0FBTyxFQUFFLEtBQUssVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FDMUQsQ0FBQztJQUVGO1FBQ0UsS0FBSyxFQUFFLENBQUM7UUFDUixZQUFZLENBQUMscUJBQXFCLEVBQUUsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQ2pELFlBQVksQ0FBQyx5QkFBeUIsRUFBRSxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDdkQsQ0FBQzt1R0FsQ1UsZUFBZTsyRkFBZixlQUFlLG1xRUN2RDVCLDYvQkE0QkMsa2xHRFVHLDBCQUEwQixpVkFDMUIsa0JBQWtCLDBEQUNsQixrQkFBa0Isd01BQ2xCLGVBQWUsMkpBQ2Ysa0JBQWtCLG9IQUNsQixZQUFZLHNNQUNaLGFBQWE7OzJGQVdKLGVBQWU7a0JBekIzQixTQUFTOytCQUNFLFdBQVcsbUJBR0osdUJBQXVCLENBQUMsTUFBTSxpQkFDaEMsaUJBQWlCLENBQUMsU0FBUyxjQUM5QixJQUFJLFdBQ1A7d0JBQ1AsMEJBQTBCO3dCQUMxQixrQkFBa0I7d0JBQ2xCLGtCQUFrQjt3QkFDbEIsZUFBZTt3QkFDZixrQkFBa0I7d0JBQ2xCLFlBQVk7d0JBQ1osYUFBYTtxQkFDZCxrQkFDZSxDQUFDLHlCQUF5QixFQUFFLHFCQUFxQixDQUFDLFFBQzVEO3dCQUNKLGdCQUFnQixFQUFFLFdBQVc7d0JBQzdCLGlCQUFpQixFQUFFLG9CQUFvQjt3QkFDdkMsYUFBYSxFQUFFLHNEQUFzRDt3QkFDckUsZ0JBQWdCLEVBQUUsOEJBQThCO3dCQUNoRCxpQkFBaUIsRUFBRSwrQkFBK0I7cUJBQ25EIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksXG4gIENvbXBvbmVudCxcbiAgY29tcHV0ZWQsXG4gIEVsZW1lbnRSZWYsXG4gIG1vZGVsLFxuICB2aWV3Q2hpbGQsXG4gIFZpZXdFbmNhcHN1bGF0aW9uLFxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE1hdGVyaWFsRGVzaWduQ29tcG9uZW50IH0gZnJvbSAnLi4vbWF0ZXJpYWwtZGVzaWduLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBGb3J3YXJkRm9jdXNEaXJlY3RpdmUgfSBmcm9tICcuLi8uLi9kaXJlY3RpdmVzL2ZvcndhcmQtZm9jdXMuZGlyZWN0aXZlJztcbmltcG9ydCB7IFByb2dyZXNzSW5kaWNhdG9yQ29tcG9uZW50IH0gZnJvbSAnLi4vcHJvZ3Jlc3MtaW5kaWNhdG9yL3Byb2dyZXNzLWluZGljYXRvci5jb21wb25lbnQnO1xuaW1wb3J0IHsgVG91Y2hBcmVhQ29tcG9uZW50IH0gZnJvbSAnLi4vdG91Y2gtYXJlYS90b3VjaC1hcmVhLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBSaXBwbGVDb21wb25lbnQgfSBmcm9tICcuLi9yaXBwbGUvcmlwcGxlLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgUGFyZW50QWN0aXZhdGlvbkRpcmVjdGl2ZSB9IGZyb20gJy4uLy4uL2RpcmVjdGl2ZXMvcGFyZW50LWFjdGl2YXRpb24uZGlyZWN0aXZlJztcbmltcG9ydCB7IEZvcm1TdWJtaXR0ZXJUeXBlIH0gZnJvbSAnLi4vLi4vY29tbW9uL2Zvcm1zL2Zvcm0tc3VibWl0dGVkLXR5cGUnO1xuaW1wb3J0IHsgYXR0YWNoVGFyZ2V0IH0gZnJvbSAnLi4vLi4vZGlyZWN0aXZlcy9hdHRhY2hhYmxlLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBFbGV2YXRpb25Db21wb25lbnQgfSBmcm9tICcuLi9lbGV2YXRpb24vZWxldmF0aW9uLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBGb2N1c1JpbmdDb21wb25lbnQgfSBmcm9tICcuLi9mb2N1cy1yaW5nL2ZvY3VzLXJpbmcuY29tcG9uZW50JztcbmltcG9ydCB7IFNsb3REaXJlY3RpdmUgfSBmcm9tICcuLi8uLi9kaXJlY3RpdmVzL3Nsb3QuZGlyZWN0aXZlJztcblxuZXhwb3J0IHR5cGUgQnV0dG9uVmFyaWFudCA9XG4gIHwgJ2VsZXZhdGVkJ1xuICB8ICdmaWxsZWQnXG4gIHwgJ3RvbmFsJ1xuICB8ICdvdXRsaW5lZCdcbiAgfCAndGV4dCdcbiAgfCAncGxhaW4nO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdtZC1idXR0b24nLFxuICB0ZW1wbGF0ZVVybDogJy4vYnV0dG9uLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmw6ICcuL2J1dHRvbi5jb21wb25lbnQuc2NzcycsXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxuICBlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbi5TaGFkb3dEb20sXG4gIHN0YW5kYWxvbmU6IHRydWUsXG4gIGltcG9ydHM6IFtcbiAgICBQcm9ncmVzc0luZGljYXRvckNvbXBvbmVudCxcbiAgICBUb3VjaEFyZWFDb21wb25lbnQsXG4gICAgRWxldmF0aW9uQ29tcG9uZW50LFxuICAgIFJpcHBsZUNvbXBvbmVudCxcbiAgICBGb2N1c1JpbmdDb21wb25lbnQsXG4gICAgQ29tbW9uTW9kdWxlLFxuICAgIFNsb3REaXJlY3RpdmUsXG4gIF0sXG4gIGhvc3REaXJlY3RpdmVzOiBbUGFyZW50QWN0aXZhdGlvbkRpcmVjdGl2ZSwgRm9yd2FyZEZvY3VzRGlyZWN0aXZlXSxcbiAgaG9zdDoge1xuICAgICdbYXR0ci52YXJpYW50XSc6ICd2YXJpYW50KCknLFxuICAgICdbYXR0ci5kaXNhYmxlZF0nOiAnZGlzYWJsZWQoKSB8fCBudWxsJyxcbiAgICAnW2F0dHIuYnVzeV0nOiAncHJvZ3Jlc3NJbmRldGVybWluYXRlKCkgfHwgISFwcm9ncmVzc1ZhbHVlKCkgfHwgbnVsbCcsXG4gICAgJ1thdHRyLmxlYWRpbmddJzogYGxlYWRpbmdTbG90KCk/LmFueSgpIHx8IG51bGxgLFxuICAgICdbYXR0ci50cmFpbGluZ10nOiBgdHJhaWxpbmdTbG90KCk/LmFueSgpIHx8IG51bGxgLFxuICB9LFxufSlcbmV4cG9ydCBjbGFzcyBCdXR0b25Db21wb25lbnQgZXh0ZW5kcyBNYXRlcmlhbERlc2lnbkNvbXBvbmVudCB7XG4gIHJlYWRvbmx5IHZhcmlhbnQgPSBtb2RlbDxCdXR0b25WYXJpYW50PignZmlsbGVkJyk7XG4gIHJlYWRvbmx5IGRpc2FibGVkID0gbW9kZWwoZmFsc2UpO1xuICByZWFkb25seSB0eXBlID0gbW9kZWw8Rm9ybVN1Ym1pdHRlclR5cGU+KCdidXR0b24nKTtcbiAgcmVhZG9ubHkgaHJlZiA9IG1vZGVsPHN0cmluZz4oKTtcbiAgcmVhZG9ubHkgYW5jaG9yVGFyZ2V0ID0gbW9kZWw8c3RyaW5nPigpO1xuICByZWFkb25seSBuYW1lID0gbW9kZWw8c3RyaW5nPigpO1xuICByZWFkb25seSB2YWx1ZSA9IG1vZGVsPHN0cmluZz4oKTtcbiAgcmVhZG9ubHkgcHJvZ3Jlc3NJbmRldGVybWluYXRlID0gbW9kZWwoZmFsc2UpO1xuICByZWFkb25seSBwcm9ncmVzc1ZhbHVlID0gbW9kZWwoMCk7XG4gIHJlYWRvbmx5IHByb2dyZXNzTWF4ID0gbW9kZWwoMCk7XG5cbiAgcmVhZG9ubHkgYnV0dG9uID1cbiAgICB2aWV3Q2hpbGQ8RWxlbWVudFJlZjxIVE1MQnV0dG9uRWxlbWVudCB8IEhUTUxBbmNob3JFbGVtZW50Pj4oJ2J1dHRvbicpO1xuXG4gIHJlYWRvbmx5IGxlYWRpbmdTbG90ID0gdGhpcy5zbG90RGlyZWN0aXZlKCdsZWFkaW5nJyk7XG4gIHJlYWRvbmx5IHRyYWlsaW5nU2xvdCA9IHRoaXMuc2xvdERpcmVjdGl2ZSgndHJhaWxpbmcnKTtcblxuICByZWFkb25seSBoYXNFbGV2YXRpb24gPSBjb21wdXRlZChcbiAgICAoKSA9PlxuICAgICAgKHRoaXMudmFyaWFudCgpID09PSAnZWxldmF0ZWQnIHx8XG4gICAgICAgIHRoaXMudmFyaWFudCgpID09PSAnZmlsbGVkJyB8fFxuICAgICAgICB0aGlzLnZhcmlhbnQoKSA9PT0gJ3RvbmFsJykgJiZcbiAgICAgICF0aGlzLnByb2dyZXNzSW5kZXRlcm1pbmF0ZSgpICYmXG4gICAgICAhdGhpcy5wcm9ncmVzc1ZhbHVlKClcbiAgKTtcbiAgcmVhZG9ubHkgZWxldmF0aW9uTGV2ZWwgPSBjb21wdXRlZCgoKSA9PlxuICAgICF0aGlzLmRpc2FibGVkKCkgJiYgdGhpcy52YXJpYW50KCkgPT09ICdlbGV2YXRlZCcgPyAxIDogMFxuICApO1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHN1cGVyKCk7XG4gICAgYXR0YWNoVGFyZ2V0KEZvcndhcmRGb2N1c0RpcmVjdGl2ZSwgdGhpcy5idXR0b24pO1xuICAgIGF0dGFjaFRhcmdldChQYXJlbnRBY3RpdmF0aW9uRGlyZWN0aXZlLCB0aGlzLmJ1dHRvbik7XG4gIH1cbn1cbiIsIjxuZy10ZW1wbGF0ZSAjY29udGVudD5cbiAgPG1kLXRvdWNoLWFyZWEgLz5cbiAgPHNsb3QgbmFtZT1cImxlYWRpbmdcIj48L3Nsb3Q+XG4gIDxzbG90Pjwvc2xvdD5cbiAgPHNsb3QgbmFtZT1cInRyYWlsaW5nXCI+PC9zbG90PlxuPC9uZy10ZW1wbGF0ZT5cblxuQGlmIChoYXNFbGV2YXRpb24oKSkge1xuPG1kLWVsZXZhdGlvbiBbdGFyZ2V0XT1cImJ1dHRvbigpXCIgW2xldmVsXT1cImVsZXZhdGlvbkxldmVsKClcIiAvPlxufVxuPG1kLWZvY3VzLXJpbmcgcGFydD1cImZvY3VzLXJpbmdcIiBbdGFyZ2V0XT1cImJ1dHRvbigpXCIgLz5cbjxtZC1yaXBwbGUgcGFydD1cInJpcHBsZVwiIFt0YXJnZXRdPVwiYnV0dG9uKClcIiAvPlxuQGlmIChocmVmKCkpIHtcbjxhIHBhcnQ9XCJidXR0b25cIiAjYnV0dG9uIFthdHRyLmhyZWZdPVwiaHJlZigpID8/IG51bGxcIiBbYXR0ci50YXJnZXRdPVwiYW5jaG9yVGFyZ2V0KCkgPz8gbnVsbFwiXG4gIFt0YWJJbmRleF09XCJkaXNhYmxlZCgpID8gLTEgOiAwXCI+XG4gIDxuZy1jb250YWluZXIgKm5nVGVtcGxhdGVPdXRsZXQ9XCJjb250ZW50XCIgLz5cbjwvYT5cbn0gQGVsc2Uge1xuPGJ1dHRvbiBwYXJ0PVwiYnV0dG9uXCIgI2J1dHRvbiBbdHlwZV09XCJ0eXBlKClcIiBbZGlzYWJsZWRdPVwiZGlzYWJsZWQoKSB8fCBudWxsXCIgW2F0dHIubmFtZV09XCJuYW1lKCkgPz8gbnVsbFwiXG4gIFthdHRyLnZhbHVlXT1cInZhbHVlKCkgPz8gbnVsbFwiPlxuICA8bmctY29udGFpbmVyICpuZ1RlbXBsYXRlT3V0bGV0PVwiY29udGVudFwiIC8+XG48L2J1dHRvbj5cbn1cblxuQGlmICghZGlzYWJsZWQoKSAmJiAocHJvZ3Jlc3NWYWx1ZSgpIHx8IHByb2dyZXNzSW5kZXRlcm1pbmF0ZSgpKSkge1xuPGRpdiBjbGFzcz1cInByb2dyZXNzXCI+XG4gIDxtZC1wcm9ncmVzcy1pbmRpY2F0b3IgW3NpemVdPVwiMjhcIiBbdmFsdWVdPVwicHJvZ3Jlc3NWYWx1ZSgpXCIgW2luZGV0ZXJtaW5hdGVdPVwicHJvZ3Jlc3NJbmRldGVybWluYXRlKClcIiAvPlxuPC9kaXY+XG59Il19