import { CommonModule } from '@angular/common';
import { Component, ChangeDetectionStrategy, ViewEncapsulation, model, viewChild, inject, computed, } from '@angular/core';
import { BadgeComponent } from '../badge/badge.component';
import { FocusRingComponent } from '../focus-ring/focus-ring.component';
import { IconComponent } from '../icon/icon.component';
import { MaterialDesignComponent } from '../material-design.component';
import { NavigationComponent, } from '../navigation/navigation.component';
import { RippleComponent } from '../ripple/ripple.component';
import { TouchAreaComponent } from '../touch-area/touch-area.component';
import { SlotDirective } from '../../directives/slot.directive';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
export class NavigationItemComponent extends MaterialDesignComponent {
    selected = model(false);
    custom = model(false);
    layout = model('bar');
    disabled = model(false);
    type = model('button');
    href = model();
    anchorTarget = model();
    name = model();
    value = model();
    progressIndeterminate = model(false);
    progressValue = model(0);
    progressMax = model(0);
    badgeDot = model(false);
    badgeNumber = model();
    labelSlot = this.slotDirective('label');
    iconSlot = this.slotDirective();
    button = viewChild('button');
    _parent = inject(NavigationComponent, {
        optional: true,
        host: true,
    });
    parentLayout = computed(() => {
        if (!this._parent) {
            return this.layout();
        }
        return this._parent.layout();
    });
    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.9", ngImport: i0, type: NavigationItemComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "18.2.9", type: NavigationItemComponent, isStandalone: true, selector: "md-navigation-item", inputs: { selected: { classPropertyName: "selected", publicName: "selected", isSignal: true, isRequired: false, transformFunction: null }, custom: { classPropertyName: "custom", publicName: "custom", isSignal: true, isRequired: false, transformFunction: null }, layout: { classPropertyName: "layout", publicName: "layout", isSignal: true, isRequired: false, transformFunction: null }, disabled: { classPropertyName: "disabled", publicName: "disabled", isSignal: true, isRequired: false, transformFunction: null }, type: { classPropertyName: "type", publicName: "type", isSignal: true, isRequired: false, transformFunction: null }, href: { classPropertyName: "href", publicName: "href", isSignal: true, isRequired: false, transformFunction: null }, anchorTarget: { classPropertyName: "anchorTarget", publicName: "anchorTarget", isSignal: true, isRequired: false, transformFunction: null }, name: { classPropertyName: "name", publicName: "name", isSignal: true, isRequired: false, transformFunction: null }, value: { classPropertyName: "value", publicName: "value", isSignal: true, isRequired: false, transformFunction: null }, progressIndeterminate: { classPropertyName: "progressIndeterminate", publicName: "progressIndeterminate", isSignal: true, isRequired: false, transformFunction: null }, progressValue: { classPropertyName: "progressValue", publicName: "progressValue", isSignal: true, isRequired: false, transformFunction: null }, progressMax: { classPropertyName: "progressMax", publicName: "progressMax", isSignal: true, isRequired: false, transformFunction: null }, badgeDot: { classPropertyName: "badgeDot", publicName: "badgeDot", isSignal: true, isRequired: false, transformFunction: null }, badgeNumber: { classPropertyName: "badgeNumber", publicName: "badgeNumber", isSignal: true, isRequired: false, transformFunction: null } }, outputs: { selected: "selectedChange", custom: "customChange", layout: "layoutChange", disabled: "disabledChange", type: "typeChange", href: "hrefChange", anchorTarget: "anchorTargetChange", name: "nameChange", value: "valueChange", progressIndeterminate: "progressIndeterminateChange", progressValue: "progressValueChange", progressMax: "progressMaxChange", badgeDot: "badgeDotChange", badgeNumber: "badgeNumberChange" }, host: { properties: { "attr.selected": "selected() || null", "attr.layout": "parentLayout()", "attr.disabled": "disabled() || null", "attr.label": "labelSlot()?.any() || null", "attr.icon": "iconSlot()?.any() || null" } }, viewQueries: [{ propertyName: "button", first: true, predicate: ["button"], descendants: true, isSignal: true }], usesInheritance: true, ngImport: i0, template: "<ng-template #content>\n  <md-touch-area />\n  @if (parentLayout() === 'drawer') {\n  <md-focus-ring [target]=\"button()\" />\n  <md-ripple [target]=\"button()\" />\n  @if (custom()) {\n  <slot></slot>\n  } @else {\n  <md-icon part=\"icon\" [filled]=\"selected()\">\n    <slot></slot>\n  </md-icon>\n  }\n  } @else {\n  <div part=\"indicator\" class=\"indicator\">\n    <md-focus-ring [target]=\"button()\" />\n    <md-ripple [target]=\"button()\" />\n    @if (custom()) {\n    <slot></slot>\n    } @else {\n    @if (disabled()) {\n    <md-icon part=\"icon\" [filled]=\"selected()\">\n      <slot></slot>\n    </md-icon>\n    } @else {\n    <md-icon part=\"icon\" [filled]=\"selected()\" [badgeDot]=\"badgeDot()\" [badgeNumber]=\"badgeNumber()\">\n      <slot></slot>\n    </md-icon>\n    }\n    }\n  </div>\n  }\n  <span class=\"label\">\n    <slot name=\"label\"></slot>\n  </span>\n  @if (parentLayout() === 'drawer') {\n  @if (!disabled()) {\n  <md-badge [embedded]=\"true\" [dot]=\"badgeDot()\" [number]=\"badgeNumber()\" />\n  }\n  }\n</ng-template>\n\n@if (href()) {\n<a part=\"button\" #button [attr.href]=\"href() ?? null\" [attr.target]=\"anchorTarget() ?? null\"\n  [tabIndex]=\"disabled() ? -1 : 0\">\n  <ng-container *ngTemplateOutlet=\"content\" />\n</a>\n} @else {\n<button part=\"button\" #button [type]=\"type()\" [disabled]=\"disabled() || null\" [attr.name]=\"name() ?? null\"\n  [attr.value]=\"value() ?? null\">\n  <ng-container *ngTemplateOutlet=\"content\" />\n</button>\n}", styles: [":host{--_color: currentColor;position:relative;color:var(--md-sys-color-surface-variant-on);cursor:pointer;isolation:isolate;display:inline-flex;flex-direction:column;align-items:center;gap:4px;justify-content:center;transition-property:background-color,width,height,color;transition-duration:var(--md-sys-motion-duration-short-4);transition-timing-function:var(--md-sys-motion-easing-standard)}:host button,:host a{background-color:transparent;display:inherit;font:inherit;color:inherit;padding:0;margin:0;gap:inherit;text-decoration:none;border-radius:inherit;appearance:none;border:0;outline:none;cursor:pointer;align-items:center;transition-property:opacity;transition-duration:var(--md-sys-motion-duration-short-4);transition-timing-function:var(--md-sys-motion-easing-standard);flex-direction:inherit;align-items:inherit;justify-content:inherit}:host .label{display:none;text-wrap:nowrap;font-size:var(--md-sys-typescale-label-small-size);font-weight:var(--md-sys-typescale-label-small-weight);font-family:var(--md-sys-typescale-label-small-font)}:host .indicator{position:relative;border-radius:var(--md-sys-shape-full);width:64px;height:32px;display:inline-flex;justify-content:center;align-items:center;flex-shrink:0;z-index:-1;transition-property:background-color,width,height,color;transition-duration:var(--md-sys-motion-duration-short-4);transition-timing-function:var(--md-sys-motion-easing-standard)}:host md-ripple{--md-comp-ripple-color: var(--_color)}:host md-icon{display:none}:host([icon=true]) md-icon{display:inline-flex}:host([label=true]) .label{display:inline-flex}:host([selected=true]){pointer-events:none}:host([selected=true]) md-icon,:host([selected=true]) ::slotted(md-icon){--md-comp-icon-filled: 1}:host([selected=true][layout=drawer]){background-color:var(--md-sys-color-secondary-container);color:var(--md-sys-color-secondary-container-on)}:host([selected=true]:not([layout=drawer])) .indicator{background-color:var(--md-sys-color-secondary-container);color:var(--md-sys-color-secondary-container-on)}:host([layout=rail]) md-ripple,:host([layout=bar]) md-ripple{--md-comp-ripple-transform-default: scaleX(0);--md-comp-ripple-transform-hover: scaleX(1)}:host([layout=rail]) .indicator{width:56px}:host([layout=drawer]){flex-direction:row;justify-content:flex-start;height:56px;padding-inline:16px 16px;border-radius:var(--md-sys-shape-full)}:host([layout=drawer]) .label{font-size:var(--md-sys-typescale-label-large-size);font-weight:var(--md-sys-typescale-label-large-weight);font-family:var(--md-sys-typescale-label-large-font)}:host([layout=drawer]) a,:host([layout=drawer]) button{gap:12px;width:100%}:host([layout=drawer]) md-badge{margin-inline-start:auto}:host(:not([layout=drawer])[disabled=true][selected=true]) .indicator{background-color:color-mix(in oklab,transparent,var(--md-sys-color-surface-on) calc(var(--md-sys-disabled-background-color) * 100%))}:host([layout=drawer][disabled=true][selected=true]){background-color:color-mix(in oklab,transparent,var(--md-sys-color-surface-on) calc(var(--md-sys-disabled-background-color) * 100%))}:host([disabled=true]){pointer-events:none;cursor:default;color:color-mix(in oklab,transparent,var(--md-sys-color-surface-on) calc(var(--md-sys-disabled-color) * 100%))}\n"], dependencies: [{ kind: "component", type: IconComponent, selector: "md-icon", inputs: ["filled", "size", "badgeDot", "badgeNumber", "slot"], outputs: ["filledChange", "sizeChange", "badgeDotChange", "badgeNumberChange", "slotChange"] }, { kind: "component", type: TouchAreaComponent, selector: "md-touch-area" }, { kind: "component", type: FocusRingComponent, selector: "md-focus-ring", inputs: ["focusVisible"], outputs: ["focusVisibleChange"] }, { kind: "component", type: RippleComponent, selector: "md-ripple, [mdRipple]", inputs: ["hoverable", "interactive"], outputs: ["hoverableChange", "interactiveChange"] }, { kind: "ngmodule", type: CommonModule }, { kind: "directive", type: i1.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }, { kind: "component", type: BadgeComponent, selector: "md-badge", inputs: ["dot", "number", "embedded"], outputs: ["dotChange", "numberChange", "embeddedChange"] }, { kind: "directive", type: SlotDirective, selector: "slot", inputs: ["name", "slot"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.ShadowDom });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.9", ngImport: i0, type: NavigationItemComponent, decorators: [{
            type: Component,
            args: [{ selector: 'md-navigation-item', standalone: true, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.ShadowDom, imports: [
                        IconComponent,
                        TouchAreaComponent,
                        FocusRingComponent,
                        RippleComponent,
                        CommonModule,
                        BadgeComponent,
                        SlotDirective,
                    ], hostDirectives: [], host: {
                        '[attr.selected]': 'selected() || null',
                        '[attr.layout]': 'parentLayout()',
                        '[attr.disabled]': 'disabled() || null',
                        '[attr.label]': `labelSlot()?.any() || null`,
                        '[attr.icon]': `iconSlot()?.any() || null`,
                    }, template: "<ng-template #content>\n  <md-touch-area />\n  @if (parentLayout() === 'drawer') {\n  <md-focus-ring [target]=\"button()\" />\n  <md-ripple [target]=\"button()\" />\n  @if (custom()) {\n  <slot></slot>\n  } @else {\n  <md-icon part=\"icon\" [filled]=\"selected()\">\n    <slot></slot>\n  </md-icon>\n  }\n  } @else {\n  <div part=\"indicator\" class=\"indicator\">\n    <md-focus-ring [target]=\"button()\" />\n    <md-ripple [target]=\"button()\" />\n    @if (custom()) {\n    <slot></slot>\n    } @else {\n    @if (disabled()) {\n    <md-icon part=\"icon\" [filled]=\"selected()\">\n      <slot></slot>\n    </md-icon>\n    } @else {\n    <md-icon part=\"icon\" [filled]=\"selected()\" [badgeDot]=\"badgeDot()\" [badgeNumber]=\"badgeNumber()\">\n      <slot></slot>\n    </md-icon>\n    }\n    }\n  </div>\n  }\n  <span class=\"label\">\n    <slot name=\"label\"></slot>\n  </span>\n  @if (parentLayout() === 'drawer') {\n  @if (!disabled()) {\n  <md-badge [embedded]=\"true\" [dot]=\"badgeDot()\" [number]=\"badgeNumber()\" />\n  }\n  }\n</ng-template>\n\n@if (href()) {\n<a part=\"button\" #button [attr.href]=\"href() ?? null\" [attr.target]=\"anchorTarget() ?? null\"\n  [tabIndex]=\"disabled() ? -1 : 0\">\n  <ng-container *ngTemplateOutlet=\"content\" />\n</a>\n} @else {\n<button part=\"button\" #button [type]=\"type()\" [disabled]=\"disabled() || null\" [attr.name]=\"name() ?? null\"\n  [attr.value]=\"value() ?? null\">\n  <ng-container *ngTemplateOutlet=\"content\" />\n</button>\n}", styles: [":host{--_color: currentColor;position:relative;color:var(--md-sys-color-surface-variant-on);cursor:pointer;isolation:isolate;display:inline-flex;flex-direction:column;align-items:center;gap:4px;justify-content:center;transition-property:background-color,width,height,color;transition-duration:var(--md-sys-motion-duration-short-4);transition-timing-function:var(--md-sys-motion-easing-standard)}:host button,:host a{background-color:transparent;display:inherit;font:inherit;color:inherit;padding:0;margin:0;gap:inherit;text-decoration:none;border-radius:inherit;appearance:none;border:0;outline:none;cursor:pointer;align-items:center;transition-property:opacity;transition-duration:var(--md-sys-motion-duration-short-4);transition-timing-function:var(--md-sys-motion-easing-standard);flex-direction:inherit;align-items:inherit;justify-content:inherit}:host .label{display:none;text-wrap:nowrap;font-size:var(--md-sys-typescale-label-small-size);font-weight:var(--md-sys-typescale-label-small-weight);font-family:var(--md-sys-typescale-label-small-font)}:host .indicator{position:relative;border-radius:var(--md-sys-shape-full);width:64px;height:32px;display:inline-flex;justify-content:center;align-items:center;flex-shrink:0;z-index:-1;transition-property:background-color,width,height,color;transition-duration:var(--md-sys-motion-duration-short-4);transition-timing-function:var(--md-sys-motion-easing-standard)}:host md-ripple{--md-comp-ripple-color: var(--_color)}:host md-icon{display:none}:host([icon=true]) md-icon{display:inline-flex}:host([label=true]) .label{display:inline-flex}:host([selected=true]){pointer-events:none}:host([selected=true]) md-icon,:host([selected=true]) ::slotted(md-icon){--md-comp-icon-filled: 1}:host([selected=true][layout=drawer]){background-color:var(--md-sys-color-secondary-container);color:var(--md-sys-color-secondary-container-on)}:host([selected=true]:not([layout=drawer])) .indicator{background-color:var(--md-sys-color-secondary-container);color:var(--md-sys-color-secondary-container-on)}:host([layout=rail]) md-ripple,:host([layout=bar]) md-ripple{--md-comp-ripple-transform-default: scaleX(0);--md-comp-ripple-transform-hover: scaleX(1)}:host([layout=rail]) .indicator{width:56px}:host([layout=drawer]){flex-direction:row;justify-content:flex-start;height:56px;padding-inline:16px 16px;border-radius:var(--md-sys-shape-full)}:host([layout=drawer]) .label{font-size:var(--md-sys-typescale-label-large-size);font-weight:var(--md-sys-typescale-label-large-weight);font-family:var(--md-sys-typescale-label-large-font)}:host([layout=drawer]) a,:host([layout=drawer]) button{gap:12px;width:100%}:host([layout=drawer]) md-badge{margin-inline-start:auto}:host(:not([layout=drawer])[disabled=true][selected=true]) .indicator{background-color:color-mix(in oklab,transparent,var(--md-sys-color-surface-on) calc(var(--md-sys-disabled-background-color) * 100%))}:host([layout=drawer][disabled=true][selected=true]){background-color:color-mix(in oklab,transparent,var(--md-sys-color-surface-on) calc(var(--md-sys-disabled-background-color) * 100%))}:host([disabled=true]){pointer-events:none;cursor:default;color:color-mix(in oklab,transparent,var(--md-sys-color-surface-on) calc(var(--md-sys-disabled-color) * 100%))}\n"] }]
        }] });
//# sourceMappingURL=data:application/json;base64,