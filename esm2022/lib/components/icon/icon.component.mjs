import { ChangeDetectionStrategy, Component, model, ViewEncapsulation, } from '@angular/core';
import { MaterialDesignComponent } from '../material-design.component';
import { BadgeComponent } from '../badge/badge.component';
import * as i0 from "@angular/core";
export class IconComponent extends MaterialDesignComponent {
    filled = model(false);
    size = model();
    badgeDot = model(false);
    badgeNumber = model();
    slot = model();
    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.9", ngImport: i0, type: IconComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "18.2.9", type: IconComponent, isStandalone: true, selector: "md-icon", inputs: { filled: { classPropertyName: "filled", publicName: "filled", isSignal: true, isRequired: false, transformFunction: null }, size: { classPropertyName: "size", publicName: "size", isSignal: true, isRequired: false, transformFunction: null }, badgeDot: { classPropertyName: "badgeDot", publicName: "badgeDot", isSignal: true, isRequired: false, transformFunction: null }, badgeNumber: { classPropertyName: "badgeNumber", publicName: "badgeNumber", isSignal: true, isRequired: false, transformFunction: null }, slot: { classPropertyName: "slot", publicName: "slot", isSignal: true, isRequired: false, transformFunction: null } }, outputs: { filled: "filledChange", size: "sizeChange", badgeDot: "badgeDotChange", badgeNumber: "badgeNumberChange", slot: "slotChange" }, host: { properties: { "style.--md-comp-icon-filled": "filled() ? 1 : null", "style.--md-comp-icon-size": "size() ?? null" } }, usesInheritance: true, ngImport: i0, template: "<slot></slot>\n@if (badgeDot() || badgeNumber()) {\n<md-badge [dot]=\"badgeDot()\" [number]=\"badgeNumber()\" />\n}", styles: [":host{--md-comp-icon-filled: 0;--md-comp-icon-weight: var(--md-ref-typeface-weight-regular);--md-comp-icon-size: 24;--_size-px: calc(var(--md-comp-icon-size) * 1px);position:relative;font-size:var(--_size-px);width:var(--_size-px);max-width:var(--_size-px);height:var(--_size-px);color:inherit;display:inline-flex;font-style:normal;place-items:center;place-content:center;vertical-align:middle;line-height:1;letter-spacing:normal;text-transform:none;-webkit-user-select:none;user-select:none;white-space:nowrap;word-wrap:normal;flex-shrink:0;-webkit-font-smoothing:antialiased;text-rendering:optimizeLegibility;-moz-osx-font-smoothing:grayscale;font-family:var(--md-ref-typeface-font-icon);font-weight:var(--md-comp-icon-weight);font-variation-settings:\"FILL\" var(--md-comp-icon-filled),\"wght\" var(--md-comp-icon-weight),\"GRAD\" 0,\"opsz\" clamp(20,var(--md-comp-icon-size),48);transition-property:font-variation-settings;transition-duration:var(--md-sys-motion-duration-short-4);transition-timing-function:var(--md-sys-motion-easing-standard)}:host md-badge{transform:scale(calc(var(--md-comp-icon-size) / 24))}\n"], dependencies: [{ kind: "component", type: BadgeComponent, selector: "md-badge", inputs: ["dot", "number", "embedded"], outputs: ["dotChange", "numberChange", "embeddedChange"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.ShadowDom });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.9", ngImport: i0, type: IconComponent, decorators: [{
            type: Component,
            args: [{ selector: 'md-icon', changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.ShadowDom, standalone: true, imports: [BadgeComponent], host: {
                        '[style.--md-comp-icon-filled]': 'filled() ? 1 : null',
                        '[style.--md-comp-icon-size]': 'size() ?? null',
                    }, template: "<slot></slot>\n@if (badgeDot() || badgeNumber()) {\n<md-badge [dot]=\"badgeDot()\" [number]=\"badgeNumber()\" />\n}", styles: [":host{--md-comp-icon-filled: 0;--md-comp-icon-weight: var(--md-ref-typeface-weight-regular);--md-comp-icon-size: 24;--_size-px: calc(var(--md-comp-icon-size) * 1px);position:relative;font-size:var(--_size-px);width:var(--_size-px);max-width:var(--_size-px);height:var(--_size-px);color:inherit;display:inline-flex;font-style:normal;place-items:center;place-content:center;vertical-align:middle;line-height:1;letter-spacing:normal;text-transform:none;-webkit-user-select:none;user-select:none;white-space:nowrap;word-wrap:normal;flex-shrink:0;-webkit-font-smoothing:antialiased;text-rendering:optimizeLegibility;-moz-osx-font-smoothing:grayscale;font-family:var(--md-ref-typeface-font-icon);font-weight:var(--md-comp-icon-weight);font-variation-settings:\"FILL\" var(--md-comp-icon-filled),\"wght\" var(--md-comp-icon-weight),\"GRAD\" 0,\"opsz\" clamp(20,var(--md-comp-icon-size),48);transition-property:font-variation-settings;transition-duration:var(--md-sys-motion-duration-short-4);transition-timing-function:var(--md-sys-motion-easing-standard)}:host md-badge{transform:scale(calc(var(--md-comp-icon-size) / 24))}\n"] }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaWNvbi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy93dHByb2dyYW1zL21hdGVyaWFsLWRlc2lnbi9zcmMvbGliL2NvbXBvbmVudHMvaWNvbi9pY29uLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3d0cHJvZ3JhbXMvbWF0ZXJpYWwtZGVzaWduL3NyYy9saWIvY29tcG9uZW50cy9pY29uL2ljb24uY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUNMLHVCQUF1QixFQUN2QixTQUFTLEVBQ1QsS0FBSyxFQUNMLGlCQUFpQixHQUNsQixNQUFNLGVBQWUsQ0FBQztBQUN2QixPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQztBQUN2RSxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sMEJBQTBCLENBQUM7O0FBZTFELE1BQU0sT0FBTyxhQUFjLFNBQVEsdUJBQXVCO0lBQy9DLE1BQU0sR0FBRyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDdEIsSUFBSSxHQUFHLEtBQUssRUFBVSxDQUFDO0lBQ3ZCLFFBQVEsR0FBRyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDeEIsV0FBVyxHQUFHLEtBQUssRUFBVSxDQUFDO0lBQzlCLElBQUksR0FBRyxLQUFLLEVBQVUsQ0FBQzt1R0FMckIsYUFBYTsyRkFBYixhQUFhLGcrQkN0QjFCLHFIQUdDLHlwQ0RhVyxjQUFjOzsyRkFNYixhQUFhO2tCQWJ6QixTQUFTOytCQUNFLFNBQVMsbUJBR0YsdUJBQXVCLENBQUMsTUFBTSxpQkFDaEMsaUJBQWlCLENBQUMsU0FBUyxjQUM5QixJQUFJLFdBQ1AsQ0FBQyxjQUFjLENBQUMsUUFDbkI7d0JBQ0osK0JBQStCLEVBQUUscUJBQXFCO3dCQUN0RCw2QkFBNkIsRUFBRSxnQkFBZ0I7cUJBQ2hEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksXG4gIENvbXBvbmVudCxcbiAgbW9kZWwsXG4gIFZpZXdFbmNhcHN1bGF0aW9uLFxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE1hdGVyaWFsRGVzaWduQ29tcG9uZW50IH0gZnJvbSAnLi4vbWF0ZXJpYWwtZGVzaWduLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBCYWRnZUNvbXBvbmVudCB9IGZyb20gJy4uL2JhZGdlL2JhZGdlLmNvbXBvbmVudCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ21kLWljb24nLFxuICB0ZW1wbGF0ZVVybDogJy4vaWNvbi5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsOiAnLi9pY29uLmNvbXBvbmVudC5zY3NzJyxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG4gIGVuY2Fwc3VsYXRpb246IFZpZXdFbmNhcHN1bGF0aW9uLlNoYWRvd0RvbSxcbiAgc3RhbmRhbG9uZTogdHJ1ZSxcbiAgaW1wb3J0czogW0JhZGdlQ29tcG9uZW50XSxcbiAgaG9zdDoge1xuICAgICdbc3R5bGUuLS1tZC1jb21wLWljb24tZmlsbGVkXSc6ICdmaWxsZWQoKSA/IDEgOiBudWxsJyxcbiAgICAnW3N0eWxlLi0tbWQtY29tcC1pY29uLXNpemVdJzogJ3NpemUoKSA/PyBudWxsJyxcbiAgfSxcbn0pXG5leHBvcnQgY2xhc3MgSWNvbkNvbXBvbmVudCBleHRlbmRzIE1hdGVyaWFsRGVzaWduQ29tcG9uZW50IHtcbiAgcmVhZG9ubHkgZmlsbGVkID0gbW9kZWwoZmFsc2UpO1xuICByZWFkb25seSBzaXplID0gbW9kZWw8bnVtYmVyPigpO1xuICByZWFkb25seSBiYWRnZURvdCA9IG1vZGVsKGZhbHNlKTtcbiAgcmVhZG9ubHkgYmFkZ2VOdW1iZXIgPSBtb2RlbDxudW1iZXI+KCk7XG4gIHJlYWRvbmx5IHNsb3QgPSBtb2RlbDxzdHJpbmc+KCk7XG59XG4iLCI8c2xvdD48L3Nsb3Q+XG5AaWYgKGJhZGdlRG90KCkgfHwgYmFkZ2VOdW1iZXIoKSkge1xuPG1kLWJhZGdlIFtkb3RdPVwiYmFkZ2VEb3QoKVwiIFtudW1iZXJdPVwiYmFkZ2VOdW1iZXIoKVwiIC8+XG59Il19