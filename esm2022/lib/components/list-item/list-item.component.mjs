import { CommonModule } from '@angular/common';
import { Component, ChangeDetectionStrategy, ViewEncapsulation, model, viewChild, inject, computed, HostListener, } from '@angular/core';
import { dispatchActivationClick } from '../../common/events/dispatch-activation-click';
import { ForwardFocusDirective } from '../../directives/forward-focus.directive';
import { ElevationComponent } from '../elevation/elevation.component';
import { RippleComponent } from '../ripple/ripple.component';
import { AvatarComponent } from '../avatar/avatar.component';
import { ButtonComponent } from '../button/button.component';
import { CheckComponent } from '../check/check.component';
import { DividerComponent } from '../divider/divider.component';
import { MaterialDesignComponent } from '../material-design.component';
import { ProgressIndicatorComponent } from '../progress-indicator/progress-indicator.component';
import { TouchAreaComponent } from '../touch-area/touch-area.component';
import { FocusRingComponent } from '../focus-ring/focus-ring.component';
import { DropdownComponent } from '../dropdown/dropdown.component';
import { SlotDirective } from '../../directives/slot.directive';
import { IconComponent } from '../icon/icon.component';
import * as i0 from "@angular/core";
import * as i1 from "../../directives/forward-focus.directive";
import * as i2 from "@angular/common";
export class ListItemComponent extends MaterialDesignComponent {
    dragging = model(false);
    top = model(false);
    large = model(false);
    selected = model(false);
    split = model(false);
    disabled = model(false);
    type = model(undefined);
    href = model();
    anchorTarget = model();
    name = model();
    value = model();
    progressIndeterminate = model(false);
    progressValue = model(0);
    progressMax = model(0);
    progressBuffer = model(0);
    leadingSlot = this.slotDirective('leading');
    trailingSlot = this.slotDirective('trailing');
    supportingTextSlot = this.slotDirective('supporting-text');
    button = viewChild('button');
    _dropdownField = inject(DropdownComponent, {
        optional: true,
    });
    interactive = computed(() => !!this.type() || !!this.href() || !!this._dropdownField);
    constructor() {
        super();
        this.setSlots([AvatarComponent, IconComponent], (x) => (x.hostElement.slot = 'leading'));
        this.setSlots(CheckComponent, (x) => (x.hostElement.slot = 'trailing'));
    }
    onClick() {
        if (this._dropdownField) {
            this._dropdownField.value.set(this.value());
        }
        this.hostElement.dispatchEvent(new Event('close-popover', { bubbles: true }));
        if (this.split() || (!this.type() && !this.href())) {
            return;
        }
        const allSlottedComponents = [
            ...(this.leadingSlot()?.componentsOf(AvatarComponent) || []),
            ...(this.trailingSlot()?.componentsOf(ButtonComponent, CheckComponent) || []),
        ];
        for (const component of allSlottedComponents) {
            dispatchActivationClick(component.hostElement);
        }
    }
    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.9", ngImport: i0, type: ListItemComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "18.2.9", type: ListItemComponent, isStandalone: true, selector: "md-list-item", inputs: { dragging: { classPropertyName: "dragging", publicName: "dragging", isSignal: true, isRequired: false, transformFunction: null }, top: { classPropertyName: "top", publicName: "top", isSignal: true, isRequired: false, transformFunction: null }, large: { classPropertyName: "large", publicName: "large", isSignal: true, isRequired: false, transformFunction: null }, selected: { classPropertyName: "selected", publicName: "selected", isSignal: true, isRequired: false, transformFunction: null }, split: { classPropertyName: "split", publicName: "split", isSignal: true, isRequired: false, transformFunction: null }, disabled: { classPropertyName: "disabled", publicName: "disabled", isSignal: true, isRequired: false, transformFunction: null }, type: { classPropertyName: "type", publicName: "type", isSignal: true, isRequired: false, transformFunction: null }, href: { classPropertyName: "href", publicName: "href", isSignal: true, isRequired: false, transformFunction: null }, anchorTarget: { classPropertyName: "anchorTarget", publicName: "anchorTarget", isSignal: true, isRequired: false, transformFunction: null }, name: { classPropertyName: "name", publicName: "name", isSignal: true, isRequired: false, transformFunction: null }, value: { classPropertyName: "value", publicName: "value", isSignal: true, isRequired: false, transformFunction: null }, progressIndeterminate: { classPropertyName: "progressIndeterminate", publicName: "progressIndeterminate", isSignal: true, isRequired: false, transformFunction: null }, progressValue: { classPropertyName: "progressValue", publicName: "progressValue", isSignal: true, isRequired: false, transformFunction: null }, progressMax: { classPropertyName: "progressMax", publicName: "progressMax", isSignal: true, isRequired: false, transformFunction: null }, progressBuffer: { classPropertyName: "progressBuffer", publicName: "progressBuffer", isSignal: true, isRequired: false, transformFunction: null } }, outputs: { dragging: "draggingChange", top: "topChange", large: "largeChange", selected: "selectedChange", split: "splitChange", disabled: "disabledChange", type: "typeChange", href: "hrefChange", anchorTarget: "anchorTargetChange", name: "nameChange", value: "valueChange", progressIndeterminate: "progressIndeterminateChange", progressValue: "progressValueChange", progressMax: "progressMaxChange", progressBuffer: "progressBufferChange" }, host: { listeners: { "click": "onClick()" }, properties: { "attr.leading": "leadingSlot()?.any() || null", "attr.trailing": "trailingSlot()?.any() || null", "attr.supportingText": "supportingTextSlot()?.any() || null", "attr.top": "top() || null", "attr.large": "large() || null", "attr.selected": "selected() || null", "attr.disabled": "disabled() || null", "attr.split": "split()", "attr.busy": "progressIndeterminate() || !!progressValue() || null", "attr.interactive": "interactive() || null" } }, viewQueries: [{ propertyName: "button", first: true, predicate: ["button"], descendants: true, isSignal: true }], usesInheritance: true, hostDirectives: [{ directive: i1.ForwardFocusDirective }], ngImport: i0, template: "<ng-template #content>\n  <div part=\"leading\" class=\"leading\">\n    <slot name=\"leading\"></slot>\n  </div>\n  <div part=\"content\" class=\"content\">\n    <slot></slot>\n    <span part=\"supporting-text\" class=\"supporting-text\">\n      <slot #supportingTextSlot name=\"supporting-text\"></slot>\n    </span>\n  </div>\n  @if (!split()) {\n  <div part=\"trailing\" class=\"trailing\">\n    <slot name=\"trailing\"></slot>\n  </div>\n  }\n</ng-template>\n\n<div class=\"body\">\n  <md-elevation part=\"elevation\" [target]=\"this\" [hoverable]=\"false\" [interactive]=\"false\" [dragging]=\"dragging()\" />\n  @if (interactive()) {\n  <md-focus-ring part=\"focus-ring\" [target]=\"button()\" />\n  <md-ripple part=\"ripple\" [target]=\"button()\" />\n  @if (href()) {\n  <a part=\"button\" #button [attr.href]=\"href() ?? null\" [attr.target]=\"anchorTarget() ?? null\"\n    [tabIndex]=\"disabled() ? -1 : 0\">\n    <md-touch-area />\n    <ng-container *ngTemplateOutlet=\"content\" />\n  </a>\n  } @else {\n  <button part=\"button\" #button [type]=\"type()\" [disabled]=\"disabled() || null\" [attr.name]=\"name() ?? null\"\n    [attr.value]=\"value() ?? null\">\n    <md-touch-area />\n    <ng-container *ngTemplateOutlet=\"content\" />\n  </button>\n  }\n  } @else {\n  <ng-container *ngTemplateOutlet=\"content\" />\n  }\n</div>\n\n@if (split()) {\n<div part=\"trailing\" class=\"trailing\">\n  <md-divider part=\"divider\" [vertical]=\"true\" />\n  <slot name=\"trailing\"></slot>\n</div>\n}\n\n@if (!disabled() && (progressValue() || progressIndeterminate())) {\n<md-progress-indicator part=\"progress-indicator\" variant=\"linear\" [value]=\"progressValue()\" [max]=\"progressMax()\"\n  [indeterminate]=\"progressIndeterminate()\" [buffer]=\"progressBuffer()\" />\n}", styles: [":host{--_color: currentColor;color:var(--md-sys-color-surface-on);display:inline-flex;min-height:56px;gap:16px;width:100%;position:relative;transition-property:color,background-color,opacity;transition-duration:var(--md-sys-motion-duration-short-4);transition-timing-function:var(--md-sys-motion-easing-standard)}:host .body{position:relative;display:inline-flex;padding-inline:16px;align-items:center;gap:16px;width:100%}:host img{max-width:56px;max-height:56px}:host .content{display:inline-flex;flex-direction:column;gap:4px;padding-top:8px;padding-bottom:8px;font-size:var(--md-sys-typescale-body-large-size);font-weight:var(--md-sys-typescale-body-large-weight);font-family:var(--md-sys-typescale-body-large-font)}:host .supporting-text{font-size:var(--md-sys-typescale-body-medium-size);font-weight:var(--md-sys-typescale-body-medium-weight);font-family:var(--md-sys-typescale-body-medium-font)}:host .leading,:host .supporting-text,:host .trailing{display:none;color:var(--md-sys-color-surface-variant-on)}:host .trailing{gap:16px;align-items:center;margin-inline-start:auto}:host button,:host a{background-color:transparent;display:inherit;font:inherit;color:inherit;padding:0;margin:0;gap:inherit;text-decoration:none;border-radius:inherit;appearance:none;border:0;outline:none;cursor:pointer;align-items:center;transition-property:opacity;transition-duration:var(--md-sys-motion-duration-short-4);transition-timing-function:var(--md-sys-motion-easing-standard);align-items:inherit;text-align:start;width:100%}:host ::slotted(md-icon){--md-comp-icon-size: 24}:host md-divider{align-self:stretch;color:var(--md-sys-color-outline-variant)}:host md-progress-indicator{position:absolute;inset:auto 0 0}:host md-ripple{--md-comp-ripple-color: var(--_color)}:host ::slotted(img){max-width:56px;max-height:56px}:host([selected=true]){background-color:var(--md-sys-color-secondary-container);color:var(--md-sys-color-secondary-container-on)}:host([selected=true]) ::slotted(md-icon){--md-comp-icon-filled: 1}:host([selected=true]) .leading,:host([selected=true]) .supporting-text,:host([selected=true]) .trailing{color:inherit}:host([selected=true][disabled=true]){background-color:color-mix(in oklab,transparent,var(--md-sys-color-surface-on) calc(var(--md-sys-disabled-background-color) * 100%))}:host([split=false]) ::slotted(md-avatar),:host([split=false]) ::slotted(md-button),:host([split=false]) ::slotted(md-check){pointer-events:none}:host([split=true]) .trailing{margin-inline-end:16px}:host([supportingText=true]) .supporting-text{display:inline-flex}:host([leading=true]) .leading{display:inline-flex}:host([trailing=true]) .trailing{display:inline-flex}:host([body=true]) .body{display:inline-flex}:host([top=true]) .body,:host([top=true]) .leading,:host([top=true]) .trailing{align-items:flex-start}:host([top=true]) .leading,:host([top=true]) .trailing,:host([top=true]) .content{margin-top:8px}:host([large=true]) .body{padding-inline-start:0;padding-top:12px;padding-bottom:12px}:host([large=true]) ::slotted(img){max-height:64px;max-width:revert}:host([disabled=true]){pointer-events:none;cursor:default;color:color-mix(in oklab,transparent,var(--md-sys-color-surface-on) calc(var(--md-sys-disabled-color) * 100%))}:host([disabled=true]) .leading,:host([disabled=true]) .supporting-text,:host([disabled=true]) .trailing{color:inherit}\n"], dependencies: [{ kind: "component", type: ProgressIndicatorComponent, selector: "md-progress-indicator", inputs: ["variant", "value", "max", "indeterminate", "fourColor", "size", "width", "buffer", "circleSize"], outputs: ["variantChange", "valueChange", "maxChange", "indeterminateChange", "fourColorChange", "sizeChange", "widthChange", "bufferChange", "circleSizeChange"] }, { kind: "component", type: TouchAreaComponent, selector: "md-touch-area" }, { kind: "component", type: RippleComponent, selector: "md-ripple, [mdRipple]", inputs: ["hoverable", "interactive"], outputs: ["hoverableChange", "interactiveChange"] }, { kind: "component", type: FocusRingComponent, selector: "md-focus-ring", inputs: ["focusVisible"], outputs: ["focusVisibleChange"] }, { kind: "component", type: ElevationComponent, selector: "md-elevation", inputs: ["level", "hoverable", "interactive", "dragging"], outputs: ["levelChange", "hoverableChange", "interactiveChange", "draggingChange"] }, { kind: "ngmodule", type: CommonModule }, { kind: "directive", type: i2.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }, { kind: "directive", type: SlotDirective, selector: "slot", inputs: ["name", "slot"] }, { kind: "component", type: DividerComponent, selector: "md-divider", inputs: ["vertical"], outputs: ["verticalChange"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.ShadowDom });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.9", ngImport: i0, type: ListItemComponent, decorators: [{
            type: Component,
            args: [{ selector: 'md-list-item', standalone: true, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.ShadowDom, imports: [
                        ProgressIndicatorComponent,
                        TouchAreaComponent,
                        RippleComponent,
                        FocusRingComponent,
                        ElevationComponent,
                        CommonModule,
                        SlotDirective,
                        DividerComponent,
                    ], hostDirectives: [ForwardFocusDirective], host: {
                        '[attr.leading]': `leadingSlot()?.any() || null`,
                        '[attr.trailing]': `trailingSlot()?.any() || null`,
                        '[attr.supportingText]': `supportingTextSlot()?.any() || null`,
                        '[attr.top]': 'top() || null',
                        '[attr.large]': 'large() || null',
                        '[attr.selected]': 'selected() || null',
                        '[attr.disabled]': 'disabled() || null',
                        '[attr.split]': 'split()',
                        '[attr.busy]': 'progressIndeterminate() || !!progressValue() || null',
                        '[attr.interactive]': 'interactive() || null',
                    }, template: "<ng-template #content>\n  <div part=\"leading\" class=\"leading\">\n    <slot name=\"leading\"></slot>\n  </div>\n  <div part=\"content\" class=\"content\">\n    <slot></slot>\n    <span part=\"supporting-text\" class=\"supporting-text\">\n      <slot #supportingTextSlot name=\"supporting-text\"></slot>\n    </span>\n  </div>\n  @if (!split()) {\n  <div part=\"trailing\" class=\"trailing\">\n    <slot name=\"trailing\"></slot>\n  </div>\n  }\n</ng-template>\n\n<div class=\"body\">\n  <md-elevation part=\"elevation\" [target]=\"this\" [hoverable]=\"false\" [interactive]=\"false\" [dragging]=\"dragging()\" />\n  @if (interactive()) {\n  <md-focus-ring part=\"focus-ring\" [target]=\"button()\" />\n  <md-ripple part=\"ripple\" [target]=\"button()\" />\n  @if (href()) {\n  <a part=\"button\" #button [attr.href]=\"href() ?? null\" [attr.target]=\"anchorTarget() ?? null\"\n    [tabIndex]=\"disabled() ? -1 : 0\">\n    <md-touch-area />\n    <ng-container *ngTemplateOutlet=\"content\" />\n  </a>\n  } @else {\n  <button part=\"button\" #button [type]=\"type()\" [disabled]=\"disabled() || null\" [attr.name]=\"name() ?? null\"\n    [attr.value]=\"value() ?? null\">\n    <md-touch-area />\n    <ng-container *ngTemplateOutlet=\"content\" />\n  </button>\n  }\n  } @else {\n  <ng-container *ngTemplateOutlet=\"content\" />\n  }\n</div>\n\n@if (split()) {\n<div part=\"trailing\" class=\"trailing\">\n  <md-divider part=\"divider\" [vertical]=\"true\" />\n  <slot name=\"trailing\"></slot>\n</div>\n}\n\n@if (!disabled() && (progressValue() || progressIndeterminate())) {\n<md-progress-indicator part=\"progress-indicator\" variant=\"linear\" [value]=\"progressValue()\" [max]=\"progressMax()\"\n  [indeterminate]=\"progressIndeterminate()\" [buffer]=\"progressBuffer()\" />\n}", styles: [":host{--_color: currentColor;color:var(--md-sys-color-surface-on);display:inline-flex;min-height:56px;gap:16px;width:100%;position:relative;transition-property:color,background-color,opacity;transition-duration:var(--md-sys-motion-duration-short-4);transition-timing-function:var(--md-sys-motion-easing-standard)}:host .body{position:relative;display:inline-flex;padding-inline:16px;align-items:center;gap:16px;width:100%}:host img{max-width:56px;max-height:56px}:host .content{display:inline-flex;flex-direction:column;gap:4px;padding-top:8px;padding-bottom:8px;font-size:var(--md-sys-typescale-body-large-size);font-weight:var(--md-sys-typescale-body-large-weight);font-family:var(--md-sys-typescale-body-large-font)}:host .supporting-text{font-size:var(--md-sys-typescale-body-medium-size);font-weight:var(--md-sys-typescale-body-medium-weight);font-family:var(--md-sys-typescale-body-medium-font)}:host .leading,:host .supporting-text,:host .trailing{display:none;color:var(--md-sys-color-surface-variant-on)}:host .trailing{gap:16px;align-items:center;margin-inline-start:auto}:host button,:host a{background-color:transparent;display:inherit;font:inherit;color:inherit;padding:0;margin:0;gap:inherit;text-decoration:none;border-radius:inherit;appearance:none;border:0;outline:none;cursor:pointer;align-items:center;transition-property:opacity;transition-duration:var(--md-sys-motion-duration-short-4);transition-timing-function:var(--md-sys-motion-easing-standard);align-items:inherit;text-align:start;width:100%}:host ::slotted(md-icon){--md-comp-icon-size: 24}:host md-divider{align-self:stretch;color:var(--md-sys-color-outline-variant)}:host md-progress-indicator{position:absolute;inset:auto 0 0}:host md-ripple{--md-comp-ripple-color: var(--_color)}:host ::slotted(img){max-width:56px;max-height:56px}:host([selected=true]){background-color:var(--md-sys-color-secondary-container);color:var(--md-sys-color-secondary-container-on)}:host([selected=true]) ::slotted(md-icon){--md-comp-icon-filled: 1}:host([selected=true]) .leading,:host([selected=true]) .supporting-text,:host([selected=true]) .trailing{color:inherit}:host([selected=true][disabled=true]){background-color:color-mix(in oklab,transparent,var(--md-sys-color-surface-on) calc(var(--md-sys-disabled-background-color) * 100%))}:host([split=false]) ::slotted(md-avatar),:host([split=false]) ::slotted(md-button),:host([split=false]) ::slotted(md-check){pointer-events:none}:host([split=true]) .trailing{margin-inline-end:16px}:host([supportingText=true]) .supporting-text{display:inline-flex}:host([leading=true]) .leading{display:inline-flex}:host([trailing=true]) .trailing{display:inline-flex}:host([body=true]) .body{display:inline-flex}:host([top=true]) .body,:host([top=true]) .leading,:host([top=true]) .trailing{align-items:flex-start}:host([top=true]) .leading,:host([top=true]) .trailing,:host([top=true]) .content{margin-top:8px}:host([large=true]) .body{padding-inline-start:0;padding-top:12px;padding-bottom:12px}:host([large=true]) ::slotted(img){max-height:64px;max-width:revert}:host([disabled=true]){pointer-events:none;cursor:default;color:color-mix(in oklab,transparent,var(--md-sys-color-surface-on) calc(var(--md-sys-disabled-color) * 100%))}:host([disabled=true]) .leading,:host([disabled=true]) .supporting-text,:host([disabled=true]) .trailing{color:inherit}\n"] }]
        }], ctorParameters: () => [], propDecorators: { onClick: [{
                type: HostListener,
                args: ['click']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlzdC1pdGVtLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3d0cHJvZ3JhbXMvbWF0ZXJpYWwtZGVzaWduL3NyYy9saWIvY29tcG9uZW50cy9saXN0LWl0ZW0vbGlzdC1pdGVtLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3d0cHJvZ3JhbXMvbWF0ZXJpYWwtZGVzaWduL3NyYy9saWIvY29tcG9uZW50cy9saXN0LWl0ZW0vbGlzdC1pdGVtLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQ0wsU0FBUyxFQUNULHVCQUF1QixFQUN2QixpQkFBaUIsRUFDakIsS0FBSyxFQUNMLFNBQVMsRUFFVCxNQUFNLEVBQ04sUUFBUSxFQUNSLFlBQVksR0FDYixNQUFNLGVBQWUsQ0FBQztBQUN2QixPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSwrQ0FBK0MsQ0FBQztBQUV4RixPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSwwQ0FBMEMsQ0FBQztBQUNqRixPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxrQ0FBa0MsQ0FBQztBQUN0RSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFDN0QsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBQzdELE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUM3RCxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDMUQsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sOEJBQThCLENBQUM7QUFDaEUsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sOEJBQThCLENBQUM7QUFDdkUsT0FBTyxFQUFFLDBCQUEwQixF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QUM5RCxZQUFZLEVBQUUsZUFBZTt3QkFDN0IsY0FBYyxFQUFFLGlCQUFpQjt3QkFDakMsaUJBQWlCLEVBQUUsb0JBQW9CO3dCQUN2QyxpQkFBaUIsRUFBRSxvQkFBb0I7d0JBQ3ZDLGNBQWMsRUFBRSxTQUFTO3dCQUN6QixhQUFhLEVBQUUsc0RBQXNEO3dCQUNyRSxvQkFBb0IsRUFBRSx1QkFBdUI7cUJBQzlDO3dEQTRDRCxPQUFPO3NCQUROLFlBQVk7dUJBQUMsT0FBTyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQge1xuICBDb21wb25lbnQsXG4gIENoYW5nZURldGVjdGlvblN0cmF0ZWd5LFxuICBWaWV3RW5jYXBzdWxhdGlvbixcbiAgbW9kZWwsXG4gIHZpZXdDaGlsZCxcbiAgRWxlbWVudFJlZixcbiAgaW5qZWN0LFxuICBjb21wdXRlZCxcbiAgSG9zdExpc3RlbmVyLFxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IGRpc3BhdGNoQWN0aXZhdGlvbkNsaWNrIH0gZnJvbSAnLi4vLi4vY29tbW9uL2V2ZW50cy9kaXNwYXRjaC1hY3RpdmF0aW9uLWNsaWNrJztcbmltcG9ydCB7IEZvcm1TdWJtaXR0ZXJUeXBlIH0gZnJvbSAnLi4vLi4vY29tbW9uL2Zvcm1zL2Zvcm0tc3VibWl0dGVkLXR5cGUnO1xuaW1wb3J0IHsgRm9yd2FyZEZvY3VzRGlyZWN0aXZlIH0gZnJvbSAnLi4vLi4vZGlyZWN0aXZlcy9mb3J3YXJkLWZvY3VzLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBFbGV2YXRpb25Db21wb25lbnQgfSBmcm9tICcuLi9lbGV2YXRpb24vZWxldmF0aW9uLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBSaXBwbGVDb21wb25lbnQgfSBmcm9tICcuLi9yaXBwbGUvcmlwcGxlLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBBdmF0YXJDb21wb25lbnQgfSBmcm9tICcuLi9hdmF0YXIvYXZhdGFyLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBCdXR0b25Db21wb25lbnQgfSBmcm9tICcuLi9idXR0b24vYnV0dG9uLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBDaGVja0NvbXBvbmVudCB9IGZyb20gJy4uL2NoZWNrL2NoZWNrLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBEaXZpZGVyQ29tcG9uZW50IH0gZnJvbSAnLi4vZGl2aWRlci9kaXZpZGVyLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBNYXRlcmlhbERlc2lnbkNvbXBvbmVudCB9IGZyb20gJy4uL21hdGVyaWFsLWRlc2lnbi5jb21wb25lbnQnO1xuaW1wb3J0IHsgUHJvZ3Jlc3NJbmRpY2F0b3JDb21wb25lbnQgfSBmcm9tICcuLi9wcm9ncmVzcy1pbmRpY2F0b3IvcHJvZ3Jlc3MtaW5kaWNhdG9yLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBUb3VjaEFyZWFDb21wb25lbnQgfSBmcm9tICcuLi90b3VjaC1hcmVhL3RvdWNoLWFyZWEuY29tcG9uZW50JztcbmltcG9ydCB7IEZvY3VzUmluZ0NvbXBvbmVudCB9IGZyb20gJy4uL2ZvY3VzLXJpbmcvZm9jdXMtcmluZy5jb21wb25lbnQnO1xuaW1wb3J0IHsgRHJvcGRvd25Db21wb25lbnQgfSBmcm9tICcuLi9kcm9wZG93bi9kcm9wZG93bi5jb21wb25lbnQnO1xuaW1wb3J0IHsgU2xvdERpcmVjdGl2ZSB9IGZyb20gJy4uLy4uL2RpcmVjdGl2ZXMvc2xvdC5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgSWNvbkNvbXBvbmVudCB9IGZyb20gJy4uL2ljb24vaWNvbi5jb21wb25lbnQnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdtZC1saXN0LWl0ZW0nLFxuICB0ZW1wbGF0ZVVybDogJy4vbGlzdC1pdGVtLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmw6ICcuL2xpc3QtaXRlbS5jb21wb25lbnQuc2NzcycsXG4gIHN0YW5kYWxvbmU6IHRydWUsXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxuICBlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbi5TaGFkb3dEb20sXG4gIGltcG9ydHM6IFtcbiAgICBQcm9ncmVzc0luZGljYXRvckNvbXBvbmVudCxcbiAgICBUb3VjaEFyZWFDb21wb25lbnQsXG4gICAgUmlwcGxlQ29tcG9uZW50LFxuICAgIEZvY3VzUmluZ0NvbXBvbmVudCxcbiAgICBFbGV2YXRpb25Db21wb25lbnQsXG4gICAgQ29tbW9uTW9kdWxlLFxuICAgIFNsb3REaXJlY3RpdmUsXG4gICAgRGl2aWRlckNvbXBvbmVudCxcbiAgXSxcbiAgaG9zdERpcmVjdGl2ZXM6IFtGb3J3YXJkRm9jdXNEaXJlY3RpdmVdLFxuICBob3N0OiB7XG4gICAgJ1thdHRyLmxlYWRpbmddJzogYGxlYWRpbmdTbG90KCk/LmFueSgpIHx8IG51bGxgLFxuICAgICdbYXR0ci50cmFpbGluZ10nOiBgdHJhaWxpbmdTbG90KCk/LmFueSgpIHx8IG51bGxgLFxuICAgICdbYXR0ci5zdXBwb3J0aW5nVGV4dF0nOiBgc3VwcG9ydGluZ1RleHRTbG90KCk/LmFueSgpIHx8IG51bGxgLFxuICAgICdbYXR0ci50b3BdJzogJ3RvcCgpIHx8IG51bGwnLFxuICAgICdbYXR0ci5sYXJnZV0nOiAnbGFyZ2UoKSB8fCBudWxsJyxcbiAgICAnW2F0dHIuc2VsZWN0ZWRdJzogJ3NlbGVjdGVkKCkgfHwgbnVsbCcsXG4gICAgJ1thdHRyLmRpc2FibGVkXSc6ICdkaXNhYmxlZCgpIHx8IG51bGwnLFxuICAgICdbYXR0ci5zcGxpdF0nOiAnc3BsaXQoKScsXG4gICAgJ1thdHRyLmJ1c3ldJzogJ3Byb2dyZXNzSW5kZXRlcm1pbmF0ZSgpIHx8ICEhcHJvZ3Jlc3NWYWx1ZSgpIHx8IG51bGwnLFxuICAgICdbYXR0ci5pbnRlcmFjdGl2ZV0nOiAnaW50ZXJhY3RpdmUoKSB8fCBudWxsJyxcbiAgfSxcbn0pXG5leHBvcnQgY2xhc3MgTGlzdEl0ZW1Db21wb25lbnQgZXh0ZW5kcyBNYXRlcmlhbERlc2lnbkNvbXBvbmVudCB7XG4gIHJlYWRvbmx5IGRyYWdnaW5nID0gbW9kZWwoZmFsc2UpO1xuICByZWFkb25seSB0b3AgPSBtb2RlbChmYWxzZSk7XG4gIHJlYWRvbmx5IGxhcmdlID0gbW9kZWwoZmFsc2UpO1xuICByZWFkb25seSBzZWxlY3RlZCA9IG1vZGVsKGZhbHNlKTtcbiAgcmVhZG9ubHkgc3BsaXQgPSBtb2RlbChmYWxzZSk7XG4gIHJlYWRvbmx5IGRpc2FibGVkID0gbW9kZWwoZmFsc2UpO1xuICByZWFkb25seSB0eXBlID0gbW9kZWw8Rm9ybVN1Ym1pdHRlclR5cGUgfCB1bmRlZmluZWQ+KHVuZGVmaW5lZCk7XG4gIHJlYWRvbmx5IGhyZWYgPSBtb2RlbDxzdHJpbmc+KCk7XG4gIHJlYWRvbmx5IGFuY2hvclRhcmdldCA9IG1vZGVsPHN0cmluZz4oKTtcbiAgcmVhZG9ubHkgbmFtZSA9IG1vZGVsPHN0cmluZz4oKTtcbiAgcmVhZG9ubHkgdmFsdWUgPSBtb2RlbDxzdHJpbmc+KCk7XG4gIHJlYWRvbmx5IHByb2dyZXNzSW5kZXRlcm1pbmF0ZSA9IG1vZGVsKGZhbHNlKTtcbiAgcmVhZG9ubHkgcHJvZ3Jlc3NWYWx1ZSA9IG1vZGVsKDApO1xuICByZWFkb25seSBwcm9ncmVzc01heCA9IG1vZGVsKDApO1xuICByZWFkb25seSBwcm9ncmVzc0J1ZmZlciA9IG1vZGVsKDApO1xuXG4gIHJlYWRvbmx5IGxlYWRpbmdTbG90ID0gdGhpcy5zbG90RGlyZWN0aXZlKCdsZWFkaW5nJyk7XG4gIHJlYWRvbmx5IHRyYWlsaW5nU2xvdCA9IHRoaXMuc2xvdERpcmVjdGl2ZSgndHJhaWxpbmcnKTtcbiAgcmVhZG9ubHkgc3VwcG9ydGluZ1RleHRTbG90ID0gdGhpcy5zbG90RGlyZWN0aXZlKCdzdXBwb3J0aW5nLXRleHQnKTtcblxuICByZWFkb25seSBidXR0b24gPVxuICAgIHZpZXdDaGlsZDxFbGVtZW50UmVmPEhUTUxCdXR0b25FbGVtZW50IHwgSFRNTEFuY2hvckVsZW1lbnQ+PignYnV0dG9uJyk7XG5cbiAgcHJpdmF0ZSByZWFkb25seSBfZHJvcGRvd25GaWVsZCA9IGluamVjdChEcm9wZG93bkNvbXBvbmVudCwge1xuICAgIG9wdGlvbmFsOiB0cnVlLFxuICB9KTtcblxuICByZWFkb25seSBpbnRlcmFjdGl2ZSA9IGNvbXB1dGVkKFxuICAgICgpID0+ICEhdGhpcy50eXBlKCkgfHwgISF0aGlzLmhyZWYoKSB8fCAhIXRoaXMuX2Ryb3Bkb3duRmllbGRcbiAgKTtcblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMuc2V0U2xvdHM8QXZhdGFyQ29tcG9uZW50IHwgSWNvbkNvbXBvbmVudD4oXG4gICAgICBbQXZhdGFyQ29tcG9uZW50LCBJY29uQ29tcG9uZW50XSxcbiAgICAgICh4KSA9PiAoeC5ob3N0RWxlbWVudC5zbG90ID0gJ2xlYWRpbmcnKVxuICAgICk7XG4gICAgdGhpcy5zZXRTbG90cyhDaGVja0NvbXBvbmVudCwgKHgpID0+ICh4Lmhvc3RFbGVtZW50LnNsb3QgPSAndHJhaWxpbmcnKSk7XG4gIH1cblxuICBASG9zdExpc3RlbmVyKCdjbGljaycpXG4gIG9uQ2xpY2soKSB7XG4gICAgaWYgKHRoaXMuX2Ryb3Bkb3duRmllbGQpIHtcbiAgICAgIHRoaXMuX2Ryb3Bkb3duRmllbGQudmFsdWUuc2V0KHRoaXMudmFsdWUoKSk7XG4gICAgfVxuICAgIHRoaXMuaG9zdEVsZW1lbnQuZGlzcGF0Y2hFdmVudChcbiAgICAgIG5ldyBFdmVudCgnY2xvc2UtcG9wb3ZlcicsIHsgYnViYmxlczogdHJ1ZSB9KVxuICAgICk7XG4gICAgaWYgKHRoaXMuc3BsaXQoKSB8fCAoIXRoaXMudHlwZSgpICYmICF0aGlzLmhyZWYoKSkpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgY29uc3QgYWxsU2xvdHRlZENvbXBvbmVudHMgPSBbXG4gICAgICAuLi4odGhpcy5sZWFkaW5nU2xvdCgpPy5jb21wb25lbnRzT2YoQXZhdGFyQ29tcG9uZW50KSB8fCBbXSksXG4gICAgICAuLi4odGhpcy50cmFpbGluZ1Nsb3QoKT8uY29tcG9uZW50c09mPEJ1dHRvbkNvbXBvbmVudCB8IENoZWNrQ29tcG9uZW50PihcbiAgICAgICAgQnV0dG9uQ29tcG9uZW50LFxuICAgICAgICBDaGVja0NvbXBvbmVudFxuICAgICAgKSB8fCBbXSksXG4gICAgXTtcbiAgICBmb3IgKGNvbnN0IGNvbXBvbmVudCBvZiBhbGxTbG90dGVkQ29tcG9uZW50cykge1xuICAgICAgZGlzcGF0Y2hBY3RpdmF0aW9uQ2xpY2soY29tcG9uZW50Lmhvc3RFbGVtZW50KTtcbiAgICB9XG4gIH1cbn1cbiIsIjxuZy10ZW1wbGF0ZSAjY29udGVudD5cbiAgPGRpdiBwYXJ0PVwibGVhZGluZ1wiIGNsYXNzPVwibGVhZGluZ1wiPlxuICAgIDxzbG90IG5hbWU9XCJsZWFkaW5nXCI+PC9zbG90PlxuICA8L2Rpdj5cbiAgPGRpdiBwYXJ0PVwiY29udGVudFwiIGNsYXNzPVwiY29udGVudFwiPlxuICAgIDxzbG90Pjwvc2xvdD5cbiAgICA8c3BhbiBwYXJ0PVwic3VwcG9ydGluZy10ZXh0XCIgY2xhc3M9XCJzdXBwb3J0aW5nLXRleHRcIj5cbiAgICAgIDxzbG90ICNzdXBwb3J0aW5nVGV4dFNsb3QgbmFtZT1cInN1cHBvcnRpbmctdGV4dFwiPjwvc2xvdD5cbiAgICA8L3NwYW4+XG4gIDwvZGl2PlxuICBAaWYgKCFzcGxpdCgpKSB7XG4gIDxkaXYgcGFydD1cInRyYWlsaW5nXCIgY2xhc3M9XCJ0cmFpbGluZ1wiPlxuICAgIDxzbG90IG5hbWU9XCJ0cmFpbGluZ1wiPjwvc2xvdD5cbiAgPC9kaXY+XG4gIH1cbjwvbmctdGVtcGxhdGU+XG5cbjxkaXYgY2xhc3M9XCJib2R5XCI+XG4gIDxtZC1lbGV2YXRpb24gcGFydD1cImVsZXZhdGlvblwiIFt0YXJnZXRdPVwidGhpc1wiIFtob3ZlcmFibGVdPVwiZmFsc2VcIiBbaW50ZXJhY3RpdmVdPVwiZmFsc2VcIiBbZHJhZ2dpbmddPVwiZHJhZ2dpbmcoKVwiIC8+XG4gIEBpZiAoaW50ZXJhY3RpdmUoKSkge1xuICA8bWQtZm9jdXMtcmluZyBwYXJ0PVwiZm9jdXMtcmluZ1wiIFt0YXJnZXRdPVwiYnV0dG9uKClcIiAvPlxuICA8bWQtcmlwcGxlIHBhcnQ9XCJyaXBwbGVcIiBbdGFyZ2V0XT1cImJ1dHRvbigpXCIgLz5cbiAgQGlmIChocmVmKCkpIHtcbiAgPGEgcGFydD1cImJ1dHRvblwiICNidXR0b24gW2F0dHIuaHJlZl09XCJocmVmKCkgPz8gbnVsbFwiIFthdHRyLnRhcmdldF09XCJhbmNob3JUYXJnZXQoKSA/PyBudWxsXCJcbiAgICBbdGFiSW5kZXhdPVwiZGlzYWJsZWQoKSA/IC0xIDogMFwiPlxuICAgIDxtZC10b3VjaC1hcmVhIC8+XG4gICAgPG5nLWNvbnRhaW5lciAqbmdUZW1wbGF0ZU91dGxldD1cImNvbnRlbnRcIiAvPlxuICA8L2E+XG4gIH0gQGVsc2Uge1xuICA8YnV0dG9uIHBhcnQ9XCJidXR0b25cIiAjYnV0dG9uIFt0eXBlXT1cInR5cGUoKVwiIFtkaXNhYmxlZF09XCJkaXNhYmxlZCgpIHx8IG51bGxcIiBbYXR0ci5uYW1lXT1cIm5hbWUoKSA/PyBudWxsXCJcbiAgICBbYXR0ci52YWx1ZV09XCJ2YWx1ZSgpID8/IG51bGxcIj5cbiAgICA8bWQtdG91Y2gtYXJlYSAvPlxuICAgIDxuZy1jb250YWluZXIgKm5nVGVtcGxhdGVPdXRsZXQ9XCJjb250ZW50XCIgLz5cbiAgPC9idXR0b24+XG4gIH1cbiAgfSBAZWxzZSB7XG4gIDxuZy1jb250YWluZXIgKm5nVGVtcGxhdGVPdXRsZXQ9XCJjb250ZW50XCIgLz5cbiAgfVxuPC9kaXY+XG5cbkBpZiAoc3BsaXQoKSkge1xuPGRpdiBwYXJ0PVwidHJhaWxpbmdcIiBjbGFzcz1cInRyYWlsaW5nXCI+XG4gIDxtZC1kaXZpZGVyIHBhcnQ9XCJkaXZpZGVyXCIgW3ZlcnRpY2FsXT1cInRydWVcIiAvPlxuICA8c2xvdCBuYW1lPVwidHJhaWxpbmdcIj48L3Nsb3Q+XG48L2Rpdj5cbn1cblxuQGlmICghZGlzYWJsZWQoKSAmJiAocHJvZ3Jlc3NWYWx1ZSgpIHx8IHByb2dyZXNzSW5kZXRlcm1pbmF0ZSgpKSkge1xuPG1kLXByb2dyZXNzLWluZGljYXRvciBwYXJ0PVwicHJvZ3Jlc3MtaW5kaWNhdG9yXCIgdmFyaWFudD1cImxpbmVhclwiIFt2YWx1ZV09XCJwcm9ncmVzc1ZhbHVlKClcIiBbbWF4XT1cInByb2dyZXNzTWF4KClcIlxuICBbaW5kZXRlcm1pbmF0ZV09XCJwcm9ncmVzc0luZGV0ZXJtaW5hdGUoKVwiIFtidWZmZXJdPVwicHJvZ3Jlc3NCdWZmZXIoKVwiIC8+XG59Il19