import { ChangeDetectionStrategy, Component, model, output, viewChild, ViewEncapsulation, } from '@angular/core';
import { MaterialDesignComponent } from '../material-design.component';
import { SlotDirective } from '../../directives/slot.directive';
import { RippleComponent } from '../ripple/ripple.component';
import { FocusRingComponent } from '../focus-ring/focus-ring.component';
import { TouchAreaComponent } from '../touch-area/touch-area.component';
import { CommonModule } from '@angular/common';
import { AvatarComponent } from '../avatar/avatar.component';
import { ButtonComponent } from '../button/button.component';
import { IconComponent } from '../icon/icon.component';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
export class ChipComponent extends MaterialDesignComponent {
    closable = model(false);
    pill = model(false);
    disabled = model(false);
    selected = model(false);
    href = model();
    anchorTarget = model();
    name = model();
    value = model();
    close = output();
    leadingSlot = this.slotDirective('leading');
    trailingSlot = this.slotDirective('trailing');
    button = viewChild('button');
    constructor() {
        super();
        this.setSlots(AvatarComponent, (x) => (x.hostElement.slot = 'leading'));
    }
    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.9", ngImport: i0, type: ChipComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "18.2.9", type: ChipComponent, isStandalone: true, selector: "md-chip", inputs: { closable: { classPropertyName: "closable", publicName: "closable", isSignal: true, isRequired: false, transformFunction: null }, pill: { classPropertyName: "pill", publicName: "pill", isSignal: true, isRequired: false, transformFunction: null }, disabled: { classPropertyName: "disabled", publicName: "disabled", isSignal: true, isRequired: false, transformFunction: null }, selected: { classPropertyName: "selected", publicName: "selected", isSignal: true, isRequired: false, transformFunction: null }, href: { classPropertyName: "href", publicName: "href", isSignal: true, isRequired: false, transformFunction: null }, anchorTarget: { classPropertyName: "anchorTarget", publicName: "anchorTarget", isSignal: true, isRequired: false, transformFunction: null }, name: { classPropertyName: "name", publicName: "name", isSignal: true, isRequired: false, transformFunction: null }, value: { classPropertyName: "value", publicName: "value", isSignal: true, isRequired: false, transformFunction: null } }, outputs: { closable: "closableChange", pill: "pillChange", disabled: "disabledChange", selected: "selectedChange", href: "hrefChange", anchorTarget: "anchorTargetChange", name: "nameChange", value: "valueChange", close: "close" }, host: { properties: { "attr.leading": "leadingSlot()?.any() || null", "attr.trailing": "trailingSlot()?.any() || null", "attr.disabled": "disabled() || null", "attr.closable": "closable() || null", "attr.pill": "pill() || null", "attr.selected": "selected() || null" } }, viewQueries: [{ propertyName: "button", first: true, predicate: ["button"], descendants: true, isSignal: true }], usesInheritance: true, ngImport: i0, template: "<ng-template #content>\n  <md-touch-area />\n  <slot name=\"leading\"></slot>\n  <slot></slot>\n  <slot name=\"trailing\"></slot>\n</ng-template>\n\n<md-focus-ring part=\"focus-ring\" [target]=\"button()\" />\n<md-ripple part=\"ripple\" [target]=\"button()\" />\n@if (closable()) {\n<ng-container *ngTemplateOutlet=\"content\" />\n<md-button variant=\"plain\" (click)=\"close.emit()\">\n  <md-icon>close</md-icon>\n</md-button>\n} @else {\n@if (href()) {\n<a part=\"button\" #button [attr.href]=\"href() ?? null\" [attr.target]=\"anchorTarget() ?? null\"\n  [tabIndex]=\"disabled() ? -1 : 0\">\n  <ng-container *ngTemplateOutlet=\"content\" />\n</a>\n} @else {\n<button part=\"button\" #button type=\"button\" [disabled]=\"disabled() || null\" [attr.name]=\"name() ?? null\"\n  [attr.value]=\"value() ?? null\">\n  <ng-container *ngTemplateOutlet=\"content\" />\n</button>\n}\n}", styles: [":host{--_color: currentColor;position:relative;border-radius:var(--md-sys-shape-extra-small);color:var(--md-sys-color-surface-variant-on);display:inline-flex;align-items:center;justify-content:center;height:32px;flex-shrink:0;cursor:pointer;isolation:isolate;font-size:var(--md-sys-typescale-label-large-size);font-weight:var(--md-sys-typescale-label-large-weight);font-family:var(--md-sys-typescale-label-large-font);gap:8px;background-color:transparent;border:1px solid var(--md-sys-color-outline);padding-inline-start:8px;padding-inline-end:8px;overflow:hidden;transition-property:background-color,color,opacity;transition-duration:var(--md-sys-motion-duration-short-4);transition-timing-function:var(--md-sys-motion-easing-standard)}:host button,:host a{background-color:transparent;display:inherit;font:inherit;color:inherit;padding:0;margin:0;gap:inherit;text-decoration:none;border-radius:inherit;appearance:none;border:0;outline:none;cursor:pointer;align-items:center;transition-property:opacity;transition-duration:var(--md-sys-motion-duration-short-4);transition-timing-function:var(--md-sys-motion-easing-standard)}:host .touch{position:absolute;inset:0;border-radius:inherit}:host ::slotted(md-icon){pointer-events:none;--md-comp-icon-size: 18}:host ::slotted(md-avatar){margin-inline-start:-4px;--md-comp-avatar-size: 24}:host md-ripple{--md-comp-ripple-color: var(--_color)}:host md-button{height:100%;padding-inline-start:4px;padding-inline-end:4px}:host([closable=true]){padding-inline-start:16px;cursor:default}:host([closable=true]) button,:host([closable=true]) a{margin-left:-4px;cursor:pointer;position:relative;padding-inline-start:8px;padding-inline-end:8px}:host([pill=true]){border-radius:var(--md-sys-shape-full)}:host([leading=true]){padding-inline-start:8px}:host([pill=true][trailing=true]){padding-inline-end:4px}:host([closable=true]){padding-inline-end:0px}:host([selected=true]){background-color:var(--md-sys-color-secondary-container);color:var(--md-sys-color-secondary-container-on)}:host([selected=true][disabled=true]){background-color:color-mix(in oklab,transparent,var(--md-sys-color-surface-on) calc(var(--md-sys-disabled-background-color) * 100%))}:host([disabled=true]){pointer-events:none;cursor:default;color:color-mix(in oklab,transparent,var(--md-sys-color-surface-on) calc(var(--md-sys-disabled-color) * 100%))}\n"], dependencies: [{ kind: "directive", type: SlotDirective, selector: "slot", inputs: ["name", "slot"] }, { kind: "component", type: RippleComponent, selector: "md-ripple, [mdRipple]", inputs: ["hoverable", "interactive"], outputs: ["hoverableChange", "interactiveChange"] }, { kind: "component", type: FocusRingComponent, selector: "md-focus-ring", inputs: ["focusVisible"], outputs: ["focusVisibleChange"] }, { kind: "component", type: TouchAreaComponent, selector: "md-touch-area" }, { kind: "ngmodule", type: CommonModule }, { kind: "directive", type: i1.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }, { kind: "component", type: ButtonComponent, selector: "md-button", inputs: ["variant", "disabled", "type", "href", "anchorTarget", "name", "value", "progressIndeterminate", "progressValue", "progressMax"], outputs: ["variantChange", "disabledChange", "typeChange", "hrefChange", "anchorTargetChange", "nameChange", "valueChange", "progressIndeterminateChange", "progressValueChange", "progressMaxChange"] }, { kind: "component", type: IconComponent, selector: "md-icon", inputs: ["filled", "size", "badgeDot", "badgeNumber", "slot"], outputs: ["filledChange", "sizeChange", "badgeDotChange", "badgeNumberChange", "slotChange"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.ShadowDom });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.9", ngImport: i0, type: ChipComponent, decorators: [{
            type: Component,
            args: [{ selector: 'md-chip', standalone: true, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.ShadowDom, imports: [
                        SlotDirective,
                        RippleComponent,
                        FocusRingComponent,
                        TouchAreaComponent,
                        CommonModule,
                        ButtonComponent,
                        IconComponent,
                    ], hostDirectives: [], host: {
                        '[attr.leading]': `leadingSlot()?.any() || null`,
                        '[attr.trailing]': `trailingSlot()?.any() || null`,
                        '[attr.disabled]': 'disabled() || null',
                        '[attr.closable]': 'closable() || null',
                        '[attr.pill]': 'pill() || null',
                        '[attr.selected]': 'selected() || null',
                    }, template: "<ng-template #content>\n  <md-touch-area />\n  <slot name=\"leading\"></slot>\n  <slot></slot>\n  <slot name=\"trailing\"></slot>\n</ng-template>\n\n<md-focus-ring part=\"focus-ring\" [target]=\"button()\" />\n<md-ripple part=\"ripple\" [target]=\"button()\" />\n@if (closable()) {\n<ng-container *ngTemplateOutlet=\"content\" />\n<md-button variant=\"plain\" (click)=\"close.emit()\">\n  <md-icon>close</md-icon>\n</md-button>\n} @else {\n@if (href()) {\n<a part=\"button\" #button [attr.href]=\"href() ?? null\" [attr.target]=\"anchorTarget() ?? null\"\n  [tabIndex]=\"disabled() ? -1 : 0\">\n  <ng-container *ngTemplateOutlet=\"content\" />\n</a>\n} @else {\n<button part=\"button\" #button type=\"button\" [disabled]=\"disabled() || null\" [attr.name]=\"name() ?? null\"\n  [attr.value]=\"value() ?? null\">\n  <ng-container *ngTemplateOutlet=\"content\" />\n</button>\n}\n}", styles: [":host{--_color: currentColor;position:relative;border-radius:var(--md-sys-shape-extra-small);color:var(--md-sys-color-surface-variant-on);display:inline-flex;align-items:center;justify-content:center;height:32px;flex-shrink:0;cursor:pointer;isolation:isolate;font-size:var(--md-sys-typescale-label-large-size);font-weight:var(--md-sys-typescale-label-large-weight);font-family:var(--md-sys-typescale-label-large-font);gap:8px;background-color:transparent;border:1px solid var(--md-sys-color-outline);padding-inline-start:8px;padding-inline-end:8px;overflow:hidden;transition-property:background-color,color,opacity;transition-duration:var(--md-sys-motion-duration-short-4);transition-timing-function:var(--md-sys-motion-easing-standard)}:host button,:host a{background-color:transparent;display:inherit;font:inherit;color:inherit;padding:0;margin:0;gap:inherit;text-decoration:none;border-radius:inherit;appearance:none;border:0;outline:none;cursor:pointer;align-items:center;transition-property:opacity;transition-duration:var(--md-sys-motion-duration-short-4);transition-timing-function:var(--md-sys-motion-easing-standard)}:host .touch{position:absolute;inset:0;border-radius:inherit}:host ::slotted(md-icon){pointer-events:none;--md-comp-icon-size: 18}:host ::slotted(md-avatar){margin-inline-start:-4px;--md-comp-avatar-size: 24}:host md-ripple{--md-comp-ripple-color: var(--_color)}:host md-button{height:100%;padding-inline-start:4px;padding-inline-end:4px}:host([closable=true]){padding-inline-start:16px;cursor:default}:host([closable=true]) button,:host([closable=true]) a{margin-left:-4px;cursor:pointer;position:relative;padding-inline-start:8px;padding-inline-end:8px}:host([pill=true]){border-radius:var(--md-sys-shape-full)}:host([leading=true]){padding-inline-start:8px}:host([pill=true][trailing=true]){padding-inline-end:4px}:host([closable=true]){padding-inline-end:0px}:host([selected=true]){background-color:var(--md-sys-color-secondary-container);color:var(--md-sys-color-secondary-container-on)}:host([selected=true][disabled=true]){background-color:color-mix(in oklab,transparent,var(--md-sys-color-surface-on) calc(var(--md-sys-disabled-background-color) * 100%))}:host([disabled=true]){pointer-events:none;cursor:default;color:color-mix(in oklab,transparent,var(--md-sys-color-surface-on) calc(var(--md-sys-disabled-color) * 100%))}\n"] }]
        }], ctorParameters: () => [] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hpcC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy93dHByb2dyYW1zL21hdGVyaWFsLWRlc2lnbi9zcmMvbGliL2NvbXBvbmVudHMvY2hpcC9jaGlwLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3d0cHJvZ3JhbXMvbWF0ZXJpYWwtZGVzaWduL3NyYy9saWIvY29tcG9uZW50cy9jaGlwL2NoaXAuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUNMLHVCQUF1QixFQUN2QixTQUFTLEVBRVQsS0FBSyxFQUNMLE1BQU0sRUFDTixTQUFTLEVBQ1QsaUJBQWlCLEdBQ2xCLE1BQU0sZUFBZSxDQUFDO0FBQ3ZCLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLDhCQUE4QixDQUFDO0FBQ3ZFLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQztBQUNoRSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFDN0QsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sb0NBQW9DLENBQUM7QUFDeEUsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sb0NBQW9DLENBQUM7QUFDeEUsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUM3RCxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFDN0QsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLHdCQUF3QixDQUFDOzs7QUE0QnZELE1BQU0sT0FBTyxhQUFjLFNBQVEsdUJBQXVCO0lBQy9DLFFBQVEsR0FBRyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDeEIsSUFBSSxHQUFHLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNwQixRQUFRLEdBQUcsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ3hCLFFBQVEsR0FBRyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDeEIsSUFBSSxHQUFHLEtBQUssRUFBVSxDQUFDO0lBQ3ZCLFlBQVksR0FBRyxLQUFLLEVBQVUsQ0FBQztJQUMvQixJQUFJLEdBQUcsS0FBSyxFQUFVLENBQUM7SUFDdkIsS0FBSyxHQUFHLEtBQUssRUFBVSxDQUFDO0lBQ3hCLEtBQUssR0FBRyxNQUFNLEVBQUUsQ0FBQztJQUVqQixXQUFXLEdBQUcsSUFBSSxDQUFDLGFBQWEsQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUM1QyxZQUFZLEdBQUcsSUFBSSxDQUFDLGFBQWEsQ0FBQyxVQUFVLENBQUMsQ0FBQztJQUU5QyxNQUFNLEdBQ2IsU0FBUyxDQUFvRCxRQUFRLENBQUMsQ0FBQztJQUV6RTtRQUNFLEtBQUssRUFBRSxDQUFDO1FBQ1IsSUFBSSxDQUFDLFFBQVEsQ0FBQyxlQUFlLEVBQUUsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLFdBQVcsQ0FBQyxJQUFJLEdBQUcsU0FBUyxDQUFDLENBQUMsQ0FBQztJQUMxRSxDQUFDO3VHQXBCVSxhQUFhOzJGQUFiLGFBQWEsc3JEQzdDMUIsZzNCQTBCQyxrM0VEQ0csYUFBYSwyRUFDYixlQUFlLDJKQUNmLGtCQUFrQixxSEFDbEIsa0JBQWtCLHlEQUNsQixZQUFZLHNNQUNaLGVBQWUseVlBQ2YsYUFBYTs7MkZBWUosYUFBYTtrQkExQnpCLFNBQVM7K0JBQ0UsU0FBUyxjQUdQLElBQUksbUJBQ0MsdUJBQXVCLENBQUMsTUFBTSxpQkFDaEMsaUJBQWlCLENBQUMsU0FBUyxXQUNqQzt3QkFDUCxhQUFhO3dCQUNiLGVBQWU7d0JBQ2Ysa0JBQWtCO3dCQUNsQixrQkFBa0I7d0JBQ2xCLFlBQVk7d0JBQ1osZUFBZTt3QkFDZixhQUFhO3FCQUNkLGtCQUNlLEVBQUUsUUFDWjt3QkFDSixnQkFBZ0IsRUFBRSw4QkFBOEI7d0JBQ2hELGlCQUFpQixFQUFFLCtCQUErQjt3QkFDbEQsaUJBQWlCLEVBQUUsb0JBQW9CO3dCQUN2QyxpQkFBaUIsRUFBRSxvQkFBb0I7d0JBQ3ZDLGFBQWEsRUFBRSxnQkFBZ0I7d0JBQy9CLGlCQUFpQixFQUFFLG9CQUFvQjtxQkFDeEMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSxcbiAgQ29tcG9uZW50LFxuICBFbGVtZW50UmVmLFxuICBtb2RlbCxcbiAgb3V0cHV0LFxuICB2aWV3Q2hpbGQsXG4gIFZpZXdFbmNhcHN1bGF0aW9uLFxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE1hdGVyaWFsRGVzaWduQ29tcG9uZW50IH0gZnJvbSAnLi4vbWF0ZXJpYWwtZGVzaWduLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBTbG90RGlyZWN0aXZlIH0gZnJvbSAnLi4vLi4vZGlyZWN0aXZlcy9zbG90LmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBSaXBwbGVDb21wb25lbnQgfSBmcm9tICcuLi9yaXBwbGUvcmlwcGxlLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBGb2N1c1JpbmdDb21wb25lbnQgfSBmcm9tICcuLi9mb2N1cy1yaW5nL2ZvY3VzLXJpbmcuY29tcG9uZW50JztcbmltcG9ydCB7IFRvdWNoQXJlYUNvbXBvbmVudCB9IGZyb20gJy4uL3RvdWNoLWFyZWEvdG91Y2gtYXJlYS5jb21wb25lbnQnO1xuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IEF2YXRhckNvbXBvbmVudCB9IGZyb20gJy4uL2F2YXRhci9hdmF0YXIuY29tcG9uZW50JztcbmltcG9ydCB7IEJ1dHRvbkNvbXBvbmVudCB9IGZyb20gJy4uL2J1dHRvbi9idXR0b24uY29tcG9uZW50JztcbmltcG9ydCB7IEljb25Db21wb25lbnQgfSBmcm9tICcuLi9pY29uL2ljb24uY29tcG9uZW50JztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnbWQtY2hpcCcsXG4gIHRlbXBsYXRlVXJsOiAnLi9jaGlwLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmw6ICcuL2NoaXAuY29tcG9uZW50LnNjc3MnLFxuICBzdGFuZGFsb25lOiB0cnVlLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbiAgZW5jYXBzdWxhdGlvbjogVmlld0VuY2Fwc3VsYXRpb24uU2hhZG93RG9tLFxuICBpbXBvcnRzOiBbXG4gICAgU2xvdERpcmVjdGl2ZSxcbiAgICBSaXBwbGVDb21wb25lbnQsXG4gICAgRm9jdXNSaW5nQ29tcG9uZW50LFxuICAgIFRvdWNoQXJlYUNvbXBvbmVudCxcbiAgICBDb21tb25Nb2R1bGUsXG4gICAgQnV0dG9uQ29tcG9uZW50LFxuICAgIEljb25Db21wb25lbnQsXG4gIF0sXG4gIGhvc3REaXJlY3RpdmVzOiBbXSxcbiAgaG9zdDoge1xuICAgICdbYXR0ci5sZWFkaW5nXSc6IGBsZWFkaW5nU2xvdCgpPy5hbnkoKSB8fCBudWxsYCxcbiAgICAnW2F0dHIudHJhaWxpbmddJzogYHRyYWlsaW5nU2xvdCgpPy5hbnkoKSB8fCBudWxsYCxcbiAgICAnW2F0dHIuZGlzYWJsZWRdJzogJ2Rpc2FibGVkKCkgfHwgbnVsbCcsXG4gICAgJ1thdHRyLmNsb3NhYmxlXSc6ICdjbG9zYWJsZSgpIHx8IG51bGwnLFxuICAgICdbYXR0ci5waWxsXSc6ICdwaWxsKCkgfHwgbnVsbCcsXG4gICAgJ1thdHRyLnNlbGVjdGVkXSc6ICdzZWxlY3RlZCgpIHx8IG51bGwnLFxuICB9LFxufSlcbmV4cG9ydCBjbGFzcyBDaGlwQ29tcG9uZW50IGV4dGVuZHMgTWF0ZXJpYWxEZXNpZ25Db21wb25lbnQge1xuICByZWFkb25seSBjbG9zYWJsZSA9IG1vZGVsKGZhbHNlKTtcbiAgcmVhZG9ubHkgcGlsbCA9IG1vZGVsKGZhbHNlKTtcbiAgcmVhZG9ubHkgZGlzYWJsZWQgPSBtb2RlbChmYWxzZSk7XG4gIHJlYWRvbmx5IHNlbGVjdGVkID0gbW9kZWwoZmFsc2UpO1xuICByZWFkb25seSBocmVmID0gbW9kZWw8c3RyaW5nPigpO1xuICByZWFkb25seSBhbmNob3JUYXJnZXQgPSBtb2RlbDxzdHJpbmc+KCk7XG4gIHJlYWRvbmx5IG5hbWUgPSBtb2RlbDxzdHJpbmc+KCk7XG4gIHJlYWRvbmx5IHZhbHVlID0gbW9kZWw8c3RyaW5nPigpO1xuICByZWFkb25seSBjbG9zZSA9IG91dHB1dCgpO1xuXG4gIHJlYWRvbmx5IGxlYWRpbmdTbG90ID0gdGhpcy5zbG90RGlyZWN0aXZlKCdsZWFkaW5nJyk7XG4gIHJlYWRvbmx5IHRyYWlsaW5nU2xvdCA9IHRoaXMuc2xvdERpcmVjdGl2ZSgndHJhaWxpbmcnKTtcblxuICByZWFkb25seSBidXR0b24gPVxuICAgIHZpZXdDaGlsZDxFbGVtZW50UmVmPEhUTUxCdXR0b25FbGVtZW50IHwgSFRNTEFuY2hvckVsZW1lbnQ+PignYnV0dG9uJyk7XG5cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLnNldFNsb3RzKEF2YXRhckNvbXBvbmVudCwgKHgpID0+ICh4Lmhvc3RFbGVtZW50LnNsb3QgPSAnbGVhZGluZycpKTtcbiAgfVxufVxuIiwiPG5nLXRlbXBsYXRlICNjb250ZW50PlxuICA8bWQtdG91Y2gtYXJlYSAvPlxuICA8c2xvdCBuYW1lPVwibGVhZGluZ1wiPjwvc2xvdD5cbiAgPHNsb3Q+PC9zbG90PlxuICA8c2xvdCBuYW1lPVwidHJhaWxpbmdcIj48L3Nsb3Q+XG48L25nLXRlbXBsYXRlPlxuXG48bWQtZm9jdXMtcmluZyBwYXJ0PVwiZm9jdXMtcmluZ1wiIFt0YXJnZXRdPVwiYnV0dG9uKClcIiAvPlxuPG1kLXJpcHBsZSBwYXJ0PVwicmlwcGxlXCIgW3RhcmdldF09XCJidXR0b24oKVwiIC8+XG5AaWYgKGNsb3NhYmxlKCkpIHtcbjxuZy1jb250YWluZXIgKm5nVGVtcGxhdGVPdXRsZXQ9XCJjb250ZW50XCIgLz5cbjxtZC1idXR0b24gdmFyaWFudD1cInBsYWluXCIgKGNsaWNrKT1cImNsb3NlLmVtaXQoKVwiPlxuICA8bWQtaWNvbj5jbG9zZTwvbWQtaWNvbj5cbjwvbWQtYnV0dG9uPlxufSBAZWxzZSB7XG5AaWYgKGhyZWYoKSkge1xuPGEgcGFydD1cImJ1dHRvblwiICNidXR0b24gW2F0dHIuaHJlZl09XCJocmVmKCkgPz8gbnVsbFwiIFthdHRyLnRhcmdldF09XCJhbmNob3JUYXJnZXQoKSA/PyBudWxsXCJcbiAgW3RhYkluZGV4XT1cImRpc2FibGVkKCkgPyAtMSA6IDBcIj5cbiAgPG5nLWNvbnRhaW5lciAqbmdUZW1wbGF0ZU91dGxldD1cImNvbnRlbnRcIiAvPlxuPC9hPlxufSBAZWxzZSB7XG48YnV0dG9uIHBhcnQ9XCJidXR0b25cIiAjYnV0dG9uIHR5cGU9XCJidXR0b25cIiBbZGlzYWJsZWRdPVwiZGlzYWJsZWQoKSB8fCBudWxsXCIgW2F0dHIubmFtZV09XCJuYW1lKCkgPz8gbnVsbFwiXG4gIFthdHRyLnZhbHVlXT1cInZhbHVlKCkgPz8gbnVsbFwiPlxuICA8bmctY29udGFpbmVyICpuZ1RlbXBsYXRlT3V0bGV0PVwiY29udGVudFwiIC8+XG48L2J1dHRvbj5cbn1cbn0iXX0=