import { ChangeDetectionStrategy, Component, computed, effect, inject, model, viewChild, ViewEncapsulation, } from '@angular/core';
import { MaterialDesignComponent } from '../material-design.component';
import { PopoverComponent } from '../popover/popover.component';
import { attach, AttachableDirective, } from '../../directives/attachable.directive';
import { AnimationDirective } from '../../directives/animation/animation.directive';
import { Animator } from '../../directives/animation/animator';
import { ButtonComponent } from '../button/button.component';
import { SlotDirective } from '../../directives/slot.directive';
import * as i0 from "@angular/core";
import * as i1 from "../../directives/attachable.directive";
export class TooltipComponent extends MaterialDesignComponent {
    variant = model('plain');
    placement = model('bottom');
    trigger = model('hover');
    offset = model(8);
    manualClose = model(false);
    popover = viewChild('popover');
    attachableDirective = inject(AttachableDirective);
    modal = model(false);
    state = computed(() => this.popover()?.state() ?? 'closed');
    headlineSlot = this.slotDirective('headline');
    actionSlot = this.slotDirective('action');
    scrimAnimation = [
        new Animator('opening', {
            keyframes: { opacity: 0.32 },
            options: { easing: 'standardDecelerate' },
        }),
        new Animator('closing', {
            keyframes: { opacity: 0 },
            options: { duration: 'short3', easing: 'standardAccelerate' },
        }),
    ];
    constructor() {
        super();
        attach('pointerenter', 'pointerleave');
        effect(() => {
            const state = this.state();
            const modal = this.modal();
            const target = this.popover()?.attachableDirective?.targetElement();
            if (!target) {
                return;
            }
            if (modal) {
                if (state === 'opening') {
                    target.style.zIndex = 'var(--md-sys-z-index-popover)';
                }
                else if (state === 'closed') {
                    target.style.zIndex = '';
                }
            }
        });
        this.setSlots(ButtonComponent, (x) => {
            x.hostElement.slot = 'action';
            x.variant.set('text');
        });
    }
    openTooltip() {
        this.popover()?.open?.set(true);
    }
    closeTooltip() {
        this.popover()?.open?.set(false);
    }
    onActionClick() {
        this.closeTooltip();
    }
    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.9", ngImport: i0, type: TooltipComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "18.2.9", type: TooltipComponent, isStandalone: true, selector: "md-tooltip", inputs: { variant: { classPropertyName: "variant", publicName: "variant", isSignal: true, isRequired: false, transformFunction: null }, placement: { classPropertyName: "placement", publicName: "placement", isSignal: true, isRequired: false, transformFunction: null }, trigger: { classPropertyName: "trigger", publicName: "trigger", isSignal: true, isRequired: false, transformFunction: null }, offset: { classPropertyName: "offset", publicName: "offset", isSignal: true, isRequired: false, transformFunction: null }, manualClose: { classPropertyName: "manualClose", publicName: "manualClose", isSignal: true, isRequired: false, transformFunction: null }, modal: { classPropertyName: "modal", publicName: "modal", isSignal: true, isRequired: false, transformFunction: null } }, outputs: { variant: "variantChange", placement: "placementChange", trigger: "triggerChange", offset: "offsetChange", manualClose: "manualCloseChange", modal: "modalChange" }, host: { properties: { "attr.variant": "variant()", "attr.headline": "headlineSlot()?.any() || null", "attr.actions": "actionSlot()?.any() || null", "attr.state": "state()" } }, viewQueries: [{ propertyName: "popover", first: true, predicate: ["popover"], descendants: true, isSignal: true }], usesInheritance: true, hostDirectives: [{ directive: i1.AttachableDirective, inputs: ["target", "target"] }], ngImport: i0, template: "@if (modal()) {\n<div mdAnimation [mdAnimationAnimators]=\"scrimAnimation\" [mdAnimationState]=\"state()\" part=\"scrim\" class=\"scrim\"></div>\n}\n<md-popover #popover part=\"popover\" [target]=\"attachableDirective.target()\" [offset]=\"offset()\"\n  [placement]=\"placement()\" [trigger]=\"trigger()\" [manualClose]=\"manualClose() || !!actionSlot()?.any()\" [delay]=\"500\">\n  @if (variant() === 'plain') {\n  <slot></slot>\n  } @else {\n  <span part=\"headline\" class=\"headline\">\n    <slot name=\"headline\"></slot>\n  </span>\n  <slot></slot>\n  <span part=\"actions\" class=\"actions\">\n    <slot name=\"action\" (click)=\"onActionClick()\"></slot>\n  </span>\n  }\n</md-popover>", styles: [":host{position:absolute;display:inline-flex;flex-direction:column}:host md-popover{max-width:280px;font-size:var(--md-sys-typescale-body-small-size);font-weight:var(--md-sys-typescale-body-small-weight);font-family:var(--md-sys-typescale-body-small-font)}:host md-popover::part(body){padding:8px}:host ::slotted(md-divider){border-color:var(--md-sys-color-outline-variant)}:host .scrim{display:none;inset:0;opacity:0;position:fixed;z-index:var(--md-sys-z-index-scrim);background:var(--md-sys-color-scrim);transition-property:opacity}:host(:not([state=closed])) .scrim{display:block}:host([variant=plain]){color:var(--md-sys-color-surface-inverse-on)}:host([variant=plain]) md-popover::part(container){background-color:var(--md-sys-color-surface-inverse)}:host([variant=rich]){color:var(--md-sys-color-surface-variant-on)}:host([variant=rich]) md-popover::part(body){padding-top:12px;padding-bottom:8px;padding-inline:16px}:host([variant=rich]) .headline{display:none;margin-bottom:4px;color:var(--md-sys-color-surface-on);font-size:var(--md-sys-typescale-label-large-size);font-weight:var(--md-sys-typescale-label-large-weight);font-family:var(--md-sys-typescale-label-large-font)}:host([variant=rich]) .actions{margin-inline-start:-12px;display:none;margin-top:12px;justify-content:flex-start;gap:8px}:host([headline=true]) .headline{display:inline-flex}:host([actions=true]) .actions{display:inline-flex}\n"], dependencies: [{ kind: "component", type: PopoverComponent, selector: "md-popover", inputs: ["trigger", "flip", "shift", "offset", "delay", "placement", "strategy", "native", "open", "manualClose", "useContainerWidth"], outputs: ["triggerChange", "flipChange", "shiftChange", "offsetChange", "delayChange", "placementChange", "strategyChange", "nativeChange", "openChange", "manualCloseChange", "useContainerWidthChange", "stateChange"] }, { kind: "directive", type: AnimationDirective, selector: "[mdAnimation]", inputs: ["mdAnimation", "mdAnimationAnimators", "mdAnimationState"], outputs: ["mdAnimationChange", "mdAnimationAnimatorsChange", "mdAnimationStateChange"] }, { kind: "directive", type: SlotDirective, selector: "slot", inputs: ["name", "slot"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.ShadowDom });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.9", ngImport: i0, type: TooltipComponent, decorators: [{
            type: Component,
            args: [{ selector: 'md-tooltip', standalone: true, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.ShadowDom, imports: [PopoverComponent, AnimationDirective, SlotDirective], hostDirectives: [
                        {
                            directive: AttachableDirective,
                            inputs: ['target'],
                        },
                    ], host: {
                        '[attr.variant]': 'variant()',
                        '[attr.headline]': `headlineSlot()?.any() || null`,
                        '[attr.actions]': `actionSlot()?.any() || null`,
                        '[attr.state]': 'state()',
                    }, template: "@if (modal()) {\n<div mdAnimation [mdAnimationAnimators]=\"scrimAnimation\" [mdAnimationState]=\"state()\" part=\"scrim\" class=\"scrim\"></div>\n}\n<md-popover #popover part=\"popover\" [target]=\"attachableDirective.target()\" [offset]=\"offset()\"\n  [placement]=\"placement()\" [trigger]=\"trigger()\" [manualClose]=\"manualClose() || !!actionSlot()?.any()\" [delay]=\"500\">\n  @if (variant() === 'plain') {\n  <slot></slot>\n  } @else {\n  <span part=\"headline\" class=\"headline\">\n    <slot name=\"headline\"></slot>\n  </span>\n  <slot></slot>\n  <span part=\"actions\" class=\"actions\">\n    <slot name=\"action\" (click)=\"onActionClick()\"></slot>\n  </span>\n  }\n</md-popover>", styles: [":host{position:absolute;display:inline-flex;flex-direction:column}:host md-popover{max-width:280px;font-size:var(--md-sys-typescale-body-small-size);font-weight:var(--md-sys-typescale-body-small-weight);font-family:var(--md-sys-typescale-body-small-font)}:host md-popover::part(body){padding:8px}:host ::slotted(md-divider){border-color:var(--md-sys-color-outline-variant)}:host .scrim{display:none;inset:0;opacity:0;position:fixed;z-index:var(--md-sys-z-index-scrim);background:var(--md-sys-color-scrim);transition-property:opacity}:host(:not([state=closed])) .scrim{display:block}:host([variant=plain]){color:var(--md-sys-color-surface-inverse-on)}:host([variant=plain]) md-popover::part(container){background-color:var(--md-sys-color-surface-inverse)}:host([variant=rich]){color:var(--md-sys-color-surface-variant-on)}:host([variant=rich]) md-popover::part(body){padding-top:12px;padding-bottom:8px;padding-inline:16px}:host([variant=rich]) .headline{display:none;margin-bottom:4px;color:var(--md-sys-color-surface-on);font-size:var(--md-sys-typescale-label-large-size);font-weight:var(--md-sys-typescale-label-large-weight);font-family:var(--md-sys-typescale-label-large-font)}:host([variant=rich]) .actions{margin-inline-start:-12px;display:none;margin-top:12px;justify-content:flex-start;gap:8px}:host([headline=true]) .headline{display:inline-flex}:host([actions=true]) .actions{display:inline-flex}\n"] }]
        }], ctorParameters: () => [] });
//# sourceMappingURL=data:application/json;base64,