import { CommonModule } from '@angular/common';
import { Component, ChangeDetectionStrategy, ViewEncapsulation, model, viewChild, computed, } from '@angular/core';
import { toSignal } from '@angular/core/rxjs-interop';
import { openClose } from '../../common/rxjs/open-close';
import { AnimationDirective } from '../../directives/animation/animation.directive';
import { attachTarget } from '../../directives/attachable.directive';
import { ForwardFocusDirective } from '../../directives/forward-focus.directive';
import { ElevationComponent } from '../elevation/elevation.component';
import { FocusRingComponent } from '../focus-ring/focus-ring.component';
import { IconComponent } from '../icon/icon.component';
import { MaterialDesignComponent } from '../material-design.component';
import { ProgressIndicatorComponent } from '../progress-indicator/progress-indicator.component';
import { RippleComponent } from '../ripple/ripple.component';
import { TouchAreaComponent } from '../touch-area/touch-area.component';
import { SlotDirective } from '../../directives/slot.directive';
import * as i0 from "@angular/core";
import * as i1 from "../../directives/forward-focus.directive";
import * as i2 from "@angular/common";
export class FabComponent extends MaterialDesignComponent {
    palette = model('primary');
    size = model('medium');
    lowered = model(false);
    disabled = model(false);
    type = model('button');
    href = model();
    anchorTarget = model();
    name = model();
    value = model();
    extended = model(false);
    iconSlot = this.slotDirective();
    labelSlot = this.slotDirective('label');
    button = viewChild('button');
    elevationLevel = computed(() => (this.lowered() ? 1 : 3));
    _openClose$ = openClose(this.extended);
    state = toSignal(this._openClose$, {
        initialValue: 'closed',
    });
    constructor() {
        super();
        attachTarget(ForwardFocusDirective, this.button);
    }
    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.9", ngImport: i0, type: FabComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "18.2.9", type: FabComponent, isStandalone: true, selector: "md-fab", inputs: { palette: { classPropertyName: "palette", publicName: "palette", isSignal: true, isRequired: false, transformFunction: null }, size: { classPropertyName: "size", publicName: "size", isSignal: true, isRequired: false, transformFunction: null }, lowered: { classPropertyName: "lowered", publicName: "lowered", isSignal: true, isRequired: false, transformFunction: null }, disabled: { classPropertyName: "disabled", publicName: "disabled", isSignal: true, isRequired: false, transformFunction: null }, type: { classPropertyName: "type", publicName: "type", isSignal: true, isRequired: false, transformFunction: null }, href: { classPropertyName: "href", publicName: "href", isSignal: true, isRequired: false, transformFunction: null }, anchorTarget: { classPropertyName: "anchorTarget", publicName: "anchorTarget", isSignal: true, isRequired: false, transformFunction: null }, name: { classPropertyName: "name", publicName: "name", isSignal: true, isRequired: false, transformFunction: null }, value: { classPropertyName: "value", publicName: "value", isSignal: true, isRequired: false, transformFunction: null }, extended: { classPropertyName: "extended", publicName: "extended", isSignal: true, isRequired: false, transformFunction: null } }, outputs: { palette: "paletteChange", size: "sizeChange", lowered: "loweredChange", disabled: "disabledChange", type: "typeChange", href: "hrefChange", anchorTarget: "anchorTargetChange", name: "nameChange", value: "valueChange", extended: "extendedChange" }, host: { properties: { "attr.palette": "palette()", "attr.size": "size()", "attr.disabled": "disabled()", "attr.icon": "iconSlot()?.any() || null", "attr.label": "labelSlot()?.any() || null", "attr.state": "state()" } }, viewQueries: [{ propertyName: "button", first: true, predicate: ["button"], descendants: true, isSignal: true }], usesInheritance: true, hostDirectives: [{ directive: i1.ForwardFocusDirective }], ngImport: i0, template: "<ng-template #content>\n  <md-touch-area />\n  <slot></slot>\n  <span part=\"label\">\n    <slot name=\"label\"></slot>\n  </span>\n</ng-template>\n\n<md-elevation part=\"elevation\" [target]=\"button()\" [level]=\"elevationLevel()\" />\n<md-focus-ring part=\"focus-ring\" [target]=\"button()\" />\n<md-ripple part=\"ripple\" [target]=\"button()\" />\n@if (href()) {\n<a part=\"button\" #button [attr.href]=\"href() ?? null\" [attr.target]=\"anchorTarget() ?? null\"\n  [tabIndex]=\"disabled() ? -1 : 0\">\n  <ng-container *ngTemplateOutlet=\"content\" />\n</a>\n} @else {\n<button part=\"button\" #button [type]=\"type()\" [disabled]=\"disabled() || null\" [attr.name]=\"name() ?? null\"\n  [attr.value]=\"value() ?? null\">\n  <ng-container *ngTemplateOutlet=\"content\" />\n</button>\n}", styles: [":host{--_color: currentColor;position:relative;display:inline-flex;gap:8px;cursor:pointer;justify-content:flex-start;align-items:center;font-size:var(--md-sys-typescale-label-large-size);font-weight:var(--md-sys-typescale-label-large-weight);font-family:var(--md-sys-typescale-label-large-font);transition-property:background-color,color,width;transition-duration:var(--md-sys-motion-duration-short-4);transition-timing-function:var(--md-sys-motion-easing-standard-decelerate)}:host button,:host a{background-color:transparent;display:inherit;font:inherit;color:inherit;padding:0;margin:0;gap:inherit;text-decoration:none;border-radius:inherit;appearance:none;border:0;outline:none;cursor:pointer;align-items:center;transition-property:opacity;transition-duration:var(--md-sys-motion-duration-short-4);transition-timing-function:var(--md-sys-motion-easing-standard);overflow:hidden}:host .label{display:none}:host md-ripple{--md-comp-ripple-color: var(--_color)}:host([state=opened]){transition-timing-function:var(--md-sys-motion-easing-standard-accelerate)}:host(:not([state=closed])[label=true]) .label{display:inline-flex}:host([palette=surface]){background-color:var(--md-sys-color-surface-container-low);color:var(--md-sys-color-primary)}:host([palette=primary]){background-color:var(--md-sys-color-primary-container);color:var(--md-sys-color-primary-container-on)}:host([palette=secondary]){background-color:var(--md-sys-color-secondary-container);color:var(--md-sys-color-secondary-container-on)}:host([palette=tertiary]){background-color:var(--md-sys-color-tertiary-container);color:var(--md-sys-color-tertiary-container-on)}:host([palette=danger]){background-color:var(--md-sys-color-danger-container);color:var(--md-sys-color-danger-container-on)}:host([palette=warning]){background-color:var(--md-sys-color-warning-container);color:var(--md-sys-color-warning-container-on)}:host([palette=success]){background-color:var(--md-sys-color-success-container);color:var(--md-sys-color-success-container-on)}:host([size=large]){height:96px;width:96px;padding:32px;border-radius:var(--md-sys-shape-medium)}:host([size=large]) ::slotted(md-icon){--md-comp-icon-size: 36}:host([size=medium]){height:56px;width:56px;padding:16px;border-radius:var(--md-sys-shape-small)}:host([size=medium]) ::slotted(md-icon){--md-comp-icon-size: 24}:host([size=small]){height:40px;width:40px;padding:8px;border-radius:var(--md-sys-shape-extra-small)}:host([size=small]) md-icon,:host([size=small]) ::slotted(md-icon){--md-comp-icon-size: 24}:host([label=true]:not([icon])),:host([icon=true]:not([state=closed])[label=true]){width:auto}:host([disabled=true]){pointer-events:none;cursor:default;color:color-mix(in oklab,transparent,var(--md-sys-color-surface-on) calc(var(--md-sys-disabled-color) * 100%));background-color:color-mix(in oklab,transparent,var(--md-sys-color-surface-on) calc(var(--md-sys-disabled-background-color) * 100%))}\n"], dependencies: [{ kind: "component", type: TouchAreaComponent, selector: "md-touch-area" }, { kind: "component", type: ElevationComponent, selector: "md-elevation", inputs: ["level", "hoverable", "interactive", "dragging"], outputs: ["levelChange", "hoverableChange", "interactiveChange", "draggingChange"] }, { kind: "component", type: RippleComponent, selector: "md-ripple, [mdRipple]", inputs: ["hoverable", "interactive"], outputs: ["hoverableChange", "interactiveChange"] }, { kind: "component", type: FocusRingComponent, selector: "md-focus-ring", inputs: ["focusVisible"], outputs: ["focusVisibleChange"] }, { kind: "ngmodule", type: CommonModule }, { kind: "directive", type: i2.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }, { kind: "directive", type: SlotDirective, selector: "slot", inputs: ["name", "slot"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.ShadowDom });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.9", ngImport: i0, type: FabComponent, decorators: [{
            type: Component,
            args: [{ selector: 'md-fab', changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.ShadowDom, standalone: true, imports: [
                        ProgressIndicatorComponent,
                        TouchAreaComponent,
                        ElevationComponent,
                        RippleComponent,
                        FocusRingComponent,
                        CommonModule,
                        SlotDirective,
                        AnimationDirective,
                        IconComponent,
                    ], hostDirectives: [ForwardFocusDirective], host: {
                        '[attr.palette]': 'palette()',
                        '[attr.size]': 'size()',
                        '[attr.disabled]': 'disabled()',
                        '[attr.icon]': `iconSlot()?.any() || null`,
                        '[attr.label]': 'labelSlot()?.any() || null',
                        '[attr.state]': 'state()',
                    }, template: "<ng-template #content>\n  <md-touch-area />\n  <slot></slot>\n  <span part=\"label\">\n    <slot name=\"label\"></slot>\n  </span>\n</ng-template>\n\n<md-elevation part=\"elevation\" [target]=\"button()\" [level]=\"elevationLevel()\" />\n<md-focus-ring part=\"focus-ring\" [target]=\"button()\" />\n<md-ripple part=\"ripple\" [target]=\"button()\" />\n@if (href()) {\n<a part=\"button\" #button [attr.href]=\"href() ?? null\" [attr.target]=\"anchorTarget() ?? null\"\n  [tabIndex]=\"disabled() ? -1 : 0\">\n  <ng-container *ngTemplateOutlet=\"content\" />\n</a>\n} @else {\n<button part=\"button\" #button [type]=\"type()\" [disabled]=\"disabled() || null\" [attr.name]=\"name() ?? null\"\n  [attr.value]=\"value() ?? null\">\n  <ng-container *ngTemplateOutlet=\"content\" />\n</button>\n}", styles: [":host{--_color: currentColor;position:relative;display:inline-flex;gap:8px;cursor:pointer;justify-content:flex-start;align-items:center;font-size:var(--md-sys-typescale-label-large-size);font-weight:var(--md-sys-typescale-label-large-weight);font-family:var(--md-sys-typescale-label-large-font);transition-property:background-color,color,width;transition-duration:var(--md-sys-motion-duration-short-4);transition-timing-function:var(--md-sys-motion-easing-standard-decelerate)}:host button,:host a{background-color:transparent;display:inherit;font:inherit;color:inherit;padding:0;margin:0;gap:inherit;text-decoration:none;border-radius:inherit;appearance:none;border:0;outline:none;cursor:pointer;align-items:center;transition-property:opacity;transition-duration:var(--md-sys-motion-duration-short-4);transition-timing-function:var(--md-sys-motion-easing-standard);overflow:hidden}:host .label{display:none}:host md-ripple{--md-comp-ripple-color: var(--_color)}:host([state=opened]){transition-timing-function:var(--md-sys-motion-easing-standard-accelerate)}:host(:not([state=closed])[label=true]) .label{display:inline-flex}:host([palette=surface]){background-color:var(--md-sys-color-surface-container-low);color:var(--md-sys-color-primary)}:host([palette=primary]){background-color:var(--md-sys-color-primary-container);color:var(--md-sys-color-primary-container-on)}:host([palette=secondary]){background-color:var(--md-sys-color-secondary-container);color:var(--md-sys-color-secondary-container-on)}:host([palette=tertiary]){background-color:var(--md-sys-color-tertiary-container);color:var(--md-sys-color-tertiary-container-on)}:host([palette=danger]){background-color:var(--md-sys-color-danger-container);color:var(--md-sys-color-danger-container-on)}:host([palette=warning]){background-color:var(--md-sys-color-warning-container);color:var(--md-sys-color-warning-container-on)}:host([palette=success]){background-color:var(--md-sys-color-success-container);color:var(--md-sys-color-success-container-on)}:host([size=large]){height:96px;width:96px;padding:32px;border-radius:var(--md-sys-shape-medium)}:host([size=large]) ::slotted(md-icon){--md-comp-icon-size: 36}:host([size=medium]){height:56px;width:56px;padding:16px;border-radius:var(--md-sys-shape-small)}:host([size=medium]) ::slotted(md-icon){--md-comp-icon-size: 24}:host([size=small]){height:40px;width:40px;padding:8px;border-radius:var(--md-sys-shape-extra-small)}:host([size=small]) md-icon,:host([size=small]) ::slotted(md-icon){--md-comp-icon-size: 24}:host([label=true]:not([icon])),:host([icon=true]:not([state=closed])[label=true]){width:auto}:host([disabled=true]){pointer-events:none;cursor:default;color:color-mix(in oklab,transparent,var(--md-sys-color-surface-on) calc(var(--md-sys-disabled-color) * 100%));background-color:color-mix(in oklab,transparent,var(--md-sys-color-surface-on) calc(var(--md-sys-disabled-background-color) * 100%))}\n"] }]
        }], ctorParameters: () => [] });
//# sourceMappingURL=data:application/json;base64,