import { ChangeDetectionStrategy, Component, effect, inject, model, PLATFORM_ID, ViewEncapsulation, } from '@angular/core';
import { MaterialDesignComponent } from '../material-design.component';
import { AnimationDirective } from '../../directives/animation/animation.directive';
import { IconButtonComponent } from '../icon-button/icon-button.component';
import { animationContext, AnimationContextDirective, } from '../../directives/animation/animation-context.directive';
import { Animator } from '../../directives/animation/animator';
import { isPlatformBrowser } from '@angular/common';
import { Subject, takeUntil, timer } from 'rxjs';
import { openClose } from '../../common/rxjs/open-close';
import { toSignal } from '@angular/core/rxjs-interop';
import { ElevationComponent } from '../elevation/elevation.component';
import * as i0 from "@angular/core";
import * as i1 from "../../directives/animation/animation-context.directive";
export class SnackBarComponent extends MaterialDesignComponent {
    multiline = model(false);
    closeButton = model(false);
    open = model(false);
    autoDissmissTimeout = model(5000);
    actionSlot = this.slotDirective('action');
    animationTriggers = {
        container: [
            new Animator('opening', {
                style: { display: 'inline-flex' },
                keyframes: { transform: 'scaleY(100%)' },
                options: { duration: 'short4', easing: 'standardDecelerate' },
            }),
            new Animator('closing', {
                keyframes: { transform: 'scaleY(0)' },
                options: {
                    duration: 'short2',
                    easing: 'standardAccelerate',
                    delay: 'short1',
                },
            }),
            new Animator('closed', {
                style: { display: 'none', transform: 'scaleY(0)' },
            }),
        ],
        body: [
            new Animator('opening', {
                keyframes: { opacity: '1' },
                options: {
                    duration: 'short4',
                    easing: 'standardDecelerate',
                    delay: 'short3',
                },
            }),
            new Animator('closing', {
                keyframes: { opacity: '0' },
                options: { duration: 'short2', easing: 'standardAccelerate' },
            }),
        ],
    };
    _platformId = inject(PLATFORM_ID);
    _closing$ = new Subject();
    _openClose = openClose(this.open, 'long1', 'long1');
    state = toSignal(this._openClose);
    constructor() {
        super();
        this.hostElement.popover = 'manual';
        animationContext(this.animationTriggers);
        effect(() => {
            const state = this.state();
            if (state === 'opening' && isPlatformBrowser(this._platformId)) {
                this.hostElement.showPopover();
            }
            if (state === 'closed' && isPlatformBrowser(this._platformId)) {
                this.hostElement.hidePopover();
                this._closing$.next();
            }
            if (state === 'opened') {
                if (this.autoDissmissTimeout() > 0) {
                    timer(this.autoDissmissTimeout())
                        .pipe(takeUntil(this._closing$))
                        .subscribe(() => this.open.set(false));
                }
            }
        });
    }
    onActionClick() {
        this.open.set(false);
    }
    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.9", ngImport: i0, type: SnackBarComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "18.2.9", type: SnackBarComponent, isStandalone: true, selector: "md-snack-bar", inputs: { multiline: { classPropertyName: "multiline", publicName: "multiline", isSignal: true, isRequired: false, transformFunction: null }, closeButton: { classPropertyName: "closeButton", publicName: "closeButton", isSignal: true, isRequired: false, transformFunction: null }, open: { classPropertyName: "open", publicName: "open", isSignal: true, isRequired: false, transformFunction: null }, autoDissmissTimeout: { classPropertyName: "autoDissmissTimeout", publicName: "autoDissmissTimeout", isSignal: true, isRequired: false, transformFunction: null } }, outputs: { multiline: "multilineChange", closeButton: "closeButtonChange", open: "openChange", autoDissmissTimeout: "autoDissmissTimeoutChange" }, host: { properties: { "attr.closeButton": "closeButton() || null", "attr.actions": "actionSlot()?.any() || null", "attr.multiline": "multiline() || null" } }, usesInheritance: true, hostDirectives: [{ directive: i1.AnimationContextDirective }], ngImport: i0, template: "<div mdAnimation=\"container\" [mdAnimationState]=\"state()\" class=\"container\">\n  <md-elevation part=\"elevation\" [level]=\"2\" />\n  <div mdAnimation=\"body\" [mdAnimationState]=\"state()\" class=\"body\">\n    <div>\n      <slot></slot>\n    </div>\n    <div class=\"actions\">\n      <slot #actionSlot name=\"action\" (click)=\"onActionClick()\"></slot>\n      @if (closeButton()) {\n      <md-icon-button (click)=\"open.set(false)\">\n        close\n      </md-icon-button>\n      }\n    </div>\n  </div>\n</div>", styles: [":host{max-width:100%;min-width:280px;display:contents;margin:auto 0 0;position:fixed;height:fit-content;width:100%;z-index:var(--md-sys-z-index-snack-bar);gap:8px;padding:0 0 16px;border:0;overflow:visible;padding-inline:16px}:host .container{position:relative;background-color:var(--md-sys-color-surface-inverse);color:var(--md-sys-color-surface-inverse-on);border-radius:var(--md-sys-shape-extra-small);padding:0;margin:0;gap:inherit;display:inline-flex;flex-direction:column;width:100%;transform-origin:bottom;transform:scaleY(0)}:host .body{display:inline-flex;flex-direction:row;opacity:0;color:inherit;align-items:center;gap:inherit;padding-top:4px;padding-bottom:4px;padding-inline:16px;min-height:48px}:host .actions{gap:8px;display:inline-flex;margin-inline-start:auto}:host md-icon-button{color:inherit}:host ::slotted(md-button){color:var(--md-sys-color-primary-inverse-on)}@media screen and (min-width: 640px){:host{max-width:min(560px,100% - 48px);margin:auto auto 0}}:host([closeButton=true]) .body{padding-inline-end:4px}:host([multiline=true]) .body{flex-direction:column;align-items:flex-start}\n"], dependencies: [{ kind: "component", type: IconButtonComponent, selector: "md-icon-button", inputs: ["disabled", "type", "href", "anchorTarget", "name", "value", "progressIndeterminate", "progressValue", "progressMax", "variant", "selected", "custom", "badgeDot", "badgeNumber"], outputs: ["disabledChange", "typeChange", "hrefChange", "anchorTargetChange", "nameChange", "valueChange", "progressIndeterminateChange", "progressValueChange", "progressMaxChange", "variantChange", "selectedChange", "customChange", "badgeDotChange", "badgeNumberChange"] }, { kind: "component", type: ElevationComponent, selector: "md-elevation", inputs: ["level", "hoverable", "interactive", "dragging"], outputs: ["levelChange", "hoverableChange", "interactiveChange", "draggingChange"] }, { kind: "directive", type: AnimationDirective, selector: "[mdAnimation]", inputs: ["mdAnimation", "mdAnimationAnimators", "mdAnimationState"], outputs: ["mdAnimationChange", "mdAnimationAnimatorsChange", "mdAnimationStateChange"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.ShadowDom });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.9", ngImport: i0, type: SnackBarComponent, decorators: [{
            type: Component,
            args: [{ selector: 'md-snack-bar', standalone: true, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.ShadowDom, imports: [IconButtonComponent, ElevationComponent, AnimationDirective], hostDirectives: [AnimationContextDirective], host: {
                        '[attr.closeButton]': 'closeButton() || null',
                        '[attr.actions]': 'actionSlot()?.any() || null',
                        '[attr.multiline]': 'multiline() || null',
                    }, template: "<div mdAnimation=\"container\" [mdAnimationState]=\"state()\" class=\"container\">\n  <md-elevation part=\"elevation\" [level]=\"2\" />\n  <div mdAnimation=\"body\" [mdAnimationState]=\"state()\" class=\"body\">\n    <div>\n      <slot></slot>\n    </div>\n    <div class=\"actions\">\n      <slot #actionSlot name=\"action\" (click)=\"onActionClick()\"></slot>\n      @if (closeButton()) {\n      <md-icon-button (click)=\"open.set(false)\">\n        close\n      </md-icon-button>\n      }\n    </div>\n  </div>\n</div>", styles: [":host{max-width:100%;min-width:280px;display:contents;margin:auto 0 0;position:fixed;height:fit-content;width:100%;z-index:var(--md-sys-z-index-snack-bar);gap:8px;padding:0 0 16px;border:0;overflow:visible;padding-inline:16px}:host .container{position:relative;background-color:var(--md-sys-color-surface-inverse);color:var(--md-sys-color-surface-inverse-on);border-radius:var(--md-sys-shape-extra-small);padding:0;margin:0;gap:inherit;display:inline-flex;flex-direction:column;width:100%;transform-origin:bottom;transform:scaleY(0)}:host .body{display:inline-flex;flex-direction:row;opacity:0;color:inherit;align-items:center;gap:inherit;padding-top:4px;padding-bottom:4px;padding-inline:16px;min-height:48px}:host .actions{gap:8px;display:inline-flex;margin-inline-start:auto}:host md-icon-button{color:inherit}:host ::slotted(md-button){color:var(--md-sys-color-primary-inverse-on)}@media screen and (min-width: 640px){:host{max-width:min(560px,100% - 48px);margin:auto auto 0}}:host([closeButton=true]) .body{padding-inline-end:4px}:host([multiline=true]) .body{flex-direction:column;align-items:flex-start}\n"] }]
        }], ctorParameters: () => [] });
//# sourceMappingURL=data:application/json;base64,