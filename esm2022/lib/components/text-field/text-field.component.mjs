import { Component, ChangeDetectionStrategy, ViewEncapsulation, forwardRef, model, viewChild, computed, Input, } from '@angular/core';
import { toSignal, toObservable } from '@angular/core/rxjs-interop';
import { FormsModule, NG_VALUE_ACCESSOR } from '@angular/forms';
import { combineLatest, merge, filter, switchMap, fromEvent, map } from 'rxjs';
import { attachTarget } from '../../directives/attachable.directive';
import { ForwardFocusDirective } from '../../directives/forward-focus.directive';
import { FieldComponent } from '../field/field.component';
import { MaterialDesignValueAccessorComponent } from '../material-design-value-accessor.component';
import { ListComponent } from '../list/list.component';
import { ListItemComponent } from '../list-item/list-item.component';
import { SlotDirective } from '../../directives/slot.directive';
import { CommonModule } from '@angular/common';
import { MaterialDesignComponent } from '../material-design.component';
import * as i0 from "@angular/core";
import * as i1 from "../../directives/forward-focus.directive";
import * as i2 from "@angular/forms";
export class TextFieldComponent extends MaterialDesignValueAccessorComponent {
    value = model();
    variant = model('filled');
    type = model('text');
    prefix = model();
    suffix = model();
    label = model();
    supportingText = model();
    maxLength = model();
    hasDropdown = model(false);
    selectedItemToTextFn = (value) => value;
    _input = viewChild('input');
    _field = viewChild(FieldComponent);
    counterText = computed(() => this.maxLength() && this._input()?.nativeElement
        ? `${this.value()?.length ?? 0}/${this.maxLength()}`
        : undefined);
    populated = toSignal(combineLatest({
        focused: merge(toObservable(this._input).pipe(filter((x) => !!x?.nativeElement), switchMap((x) => fromEvent(x.nativeElement, 'focus').pipe(map(() => true)))), toObservable(this._input).pipe(filter((x) => !!x?.nativeElement), switchMap((x) => fromEvent(x.nativeElement, 'blur').pipe(map(() => false))))),
        hasValue: toObservable(this.value).pipe(map((x) => !!x)),
    }).pipe(map((x) => x.focused || x.hasValue)));
    constructor() {
        super();
        attachTarget(ForwardFocusDirective, this._input);
        this.setSlots(ListItemComponent, (x) => {
            x.type.set('button');
            x.selected.set(x.value() === this.value());
        });
    }
    onContentClick() {
        this._input()?.nativeElement.focus();
    }
    onInput(event) {
        if (this.type() === 'text-area') {
            const target = event.target;
            target.style.height = 'auto';
            target.style.height = target.scrollHeight + 'px';
        }
        if (this.hasDropdown()) {
            if (!this._field()?.popover()?.open()) {
                this._field().popover().open.set(true);
            }
        }
    }
    onItemClick(event) {
        const item = MaterialDesignComponent.get(event.target);
        this.value.set(this.selectedItemToTextFn(item.value()));
    }
    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.9", ngImport: i0, type: TextFieldComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "18.2.9", type: TextFieldComponent, isStandalone: true, selector: "md-text-field", inputs: { value: { classPropertyName: "value", publicName: "value", isSignal: true, isRequired: false, transformFunction: null }, variant: { classPropertyName: "variant", publicName: "variant", isSignal: true, isRequired: false, transformFunction: null }, type: { classPropertyName: "type", publicName: "type", isSignal: true, isRequired: false, transformFunction: null }, prefix: { classPropertyName: "prefix", publicName: "prefix", isSignal: true, isRequired: false, transformFunction: null }, suffix: { classPropertyName: "suffix", publicName: "suffix", isSignal: true, isRequired: false, transformFunction: null }, label: { classPropertyName: "label", publicName: "label", isSignal: true, isRequired: false, transformFunction: null }, supportingText: { classPropertyName: "supportingText", publicName: "supportingText", isSignal: true, isRequired: false, transformFunction: null }, maxLength: { classPropertyName: "maxLength", publicName: "maxLength", isSignal: true, isRequired: false, transformFunction: null }, hasDropdown: { classPropertyName: "hasDropdown", publicName: "hasDropdown", isSignal: true, isRequired: false, transformFunction: null }, selectedItemToTextFn: { classPropertyName: "selectedItemToTextFn", publicName: "selectedItemToTextFn", isSignal: false, isRequired: false, transformFunction: null } }, outputs: { value: "valueChange", variant: "variantChange", type: "typeChange", prefix: "prefixChange", suffix: "suffixChange", label: "labelChange", supportingText: "supportingTextChange", maxLength: "maxLengthChange", hasDropdown: "hasDropdownChange" }, host: { attributes: { "tabindex": "0" }, properties: { "attr.disabled": "disabled() || null" } }, providers: [
            {
                provide: NG_VALUE_ACCESSOR,
                multi: true,
                useExisting: forwardRef(() => TextFieldComponent),
            },
        ], viewQueries: [{ propertyName: "_input", first: true, predicate: ["input"], descendants: true, isSignal: true }, { propertyName: "_field", first: true, predicate: FieldComponent, descendants: true, isSignal: true }], usesInheritance: true, hostDirectives: [{ directive: i1.ForwardFocusDirective }], ngImport: i0, template: "<md-field [variant]=\"variant()\" [populated]=\"!!populated()\" [errorText]=\"errorText()\" [label]=\"label()\"\n  (contentClick)=\"onContentClick()\" [disabled]=\"disabled()\" popoverTrigger=\"manual\" [maxPopoverHeight]=\"300\">\n  <slot name=\"leading\" slot=\"leading\"></slot>\n\n  <slot name=\"prefix\" slot=\"prefix\"></slot>\n  <slot name=\"suffix\" slot=\"suffix\"></slot>\n  <slot name=\"supporting-text\" slot=\"supporting-text\"></slot>\n\n  @if (counterText()) {\n  <span slot=\"counter\">{{ counterText() }}</span>\n  }\n\n  @if (type() === 'text-area') {\n  <textarea #input [ngModel]=\"value()\" (ngModelChange)=\"value.set($event)\" rows=\"1\" (input)=\"onInput($event)\"\n    [disabled]=\"disabled()\"></textarea>\n  } @else {\n  <input #input [ngModel]=\"value()\" (ngModelChange)=\"value.set($event)\" [type]=\"type()\" [disabled]=\"disabled()\"\n    (input)=\"onInput($event)\">\n  }\n  <slot name=\"trailing\" slot=\"trailing\"></slot>\n  @if (hasDropdown()) {\n  <md-list slot=\"popover\">\n    <slot (click)=\"onItemClick($event)\"></slot>\n  </md-list>\n  }\n</md-field>", styles: [":host input,:host textarea{display:inline-flex;appearance:none;margin:0;padding:0;padding-inline:0;padding-block:0;border:0;outline:none;background-color:transparent;color:inherit;caret-color:inherit;resize:none;overflow:hidden;font-family:inherit;font-weight:inherit;font-size:inherit;box-sizing:border-box}:host input::placeholder,:host textarea::placeholder{color:currentColor;opacity:1}:host input::-webkit-calendar-picker-indicator,:host textarea::-webkit-calendar-picker-indicator{display:none}:host input::-webkit-search-decoration,:host input::-webkit-search-cancel-button,:host textarea::-webkit-search-decoration,:host textarea::-webkit-search-cancel-button{display:none}:host input::-webkit-inner-spin-button,:host input::-webkit-outer-spin-button,:host textarea::-webkit-inner-spin-button,:host textarea::-webkit-outer-spin-button{display:none}:host input[type=number],:host textarea[type=number]{-moz-appearance:textfield}:host md-field::part(content){cursor:text}:host([disabled=true]){pointer-events:none;cursor:default}\n"], dependencies: [{ kind: "component", type: FieldComponent, selector: "md-field", inputs: ["value", "variant", "label", "populated", "open", "popoverTrigger", "maxPopoverHeight"], outputs: ["valueChange", "variantChange", "labelChange", "populatedChange", "contentClick", "bodyClick", "openChange", "popoverTriggerChange", "maxPopoverHeightChange", "popoverStateChange"] }, { kind: "ngmodule", type: FormsModule }, { kind: "directive", type: i2.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i2.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { kind: "component", type: ListComponent, selector: "md-list" }, { kind: "directive", type: SlotDirective, selector: "slot", inputs: ["name", "slot"] }, { kind: "ngmodule", type: CommonModule }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.ShadowDom });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.9", ngImport: i0, type: TextFieldComponent, decorators: [{
            type: Component,
            args: [{ selector: 'md-text-field', standalone: true, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.ShadowDom, imports: [
                        FieldComponent,
                        FormsModule,
                        ListComponent,
                        SlotDirective,
                        CommonModule,
                    ], host: {
                        '[attr.disabled]': 'disabled() || null',
                        tabindex: '0',
                    }, hostDirectives: [ForwardFocusDirective], providers: [
                        {
                            provide: NG_VALUE_ACCESSOR,
                            multi: true,
                            useExisting: forwardRef(() => TextFieldComponent),
                        },
                    ], template: "<md-field [variant]=\"variant()\" [populated]=\"!!populated()\" [errorText]=\"errorText()\" [label]=\"label()\"\n  (contentClick)=\"onContentClick()\" [disabled]=\"disabled()\" popoverTrigger=\"manual\" [maxPopoverHeight]=\"300\">\n  <slot name=\"leading\" slot=\"leading\"></slot>\n\n  <slot name=\"prefix\" slot=\"prefix\"></slot>\n  <slot name=\"suffix\" slot=\"suffix\"></slot>\n  <slot name=\"supporting-text\" slot=\"supporting-text\"></slot>\n\n  @if (counterText()) {\n  <span slot=\"counter\">{{ counterText() }}</span>\n  }\n\n  @if (type() === 'text-area') {\n  <textarea #input [ngModel]=\"value()\" (ngModelChange)=\"value.set($event)\" rows=\"1\" (input)=\"onInput($event)\"\n    [disabled]=\"disabled()\"></textarea>\n  } @else {\n  <input #input [ngModel]=\"value()\" (ngModelChange)=\"value.set($event)\" [type]=\"type()\" [disabled]=\"disabled()\"\n    (input)=\"onInput($event)\">\n  }\n  <slot name=\"trailing\" slot=\"trailing\"></slot>\n  @if (hasDropdown()) {\n  <md-list slot=\"popover\">\n    <slot (click)=\"onItemClick($event)\"></slot>\n  </md-list>\n  }\n</md-field>", styles: [":host input,:host textarea{display:inline-flex;appearance:none;margin:0;padding:0;padding-inline:0;padding-block:0;border:0;outline:none;background-color:transparent;color:inherit;caret-color:inherit;resize:none;overflow:hidden;font-family:inherit;font-weight:inherit;font-size:inherit;box-sizing:border-box}:host input::placeholder,:host textarea::placeholder{color:currentColor;opacity:1}:host input::-webkit-calendar-picker-indicator,:host textarea::-webkit-calendar-picker-indicator{display:none}:host input::-webkit-search-decoration,:host input::-webkit-search-cancel-button,:host textarea::-webkit-search-decoration,:host textarea::-webkit-search-cancel-button{display:none}:host input::-webkit-inner-spin-button,:host input::-webkit-outer-spin-button,:host textarea::-webkit-inner-spin-button,:host textarea::-webkit-outer-spin-button{display:none}:host input[type=number],:host textarea[type=number]{-moz-appearance:textfield}:host md-field::part(content){cursor:text}:host([disabled=true]){pointer-events:none;cursor:default}\n"] }]
        }], ctorParameters: () => [], propDecorators: { selectedItemToTextFn: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,