import { ChangeDetectionStrategy, Component, computed, model, viewChild, ViewEncapsulation, } from '@angular/core';
import { MaterialDesignComponent } from '../material-design.component';
import { RippleComponent } from '../ripple/ripple.component';
import { ForwardFocusDirective } from '../../directives/forward-focus.directive';
import { CommonModule } from '@angular/common';
import { TouchAreaComponent } from '../touch-area/touch-area.component';
import { ParentActivationDirective } from '../../directives/parent-activation.directive';
import { BadgeComponent } from '../badge/badge.component';
import { ProgressIndicatorComponent } from '../progress-indicator/progress-indicator.component';
import { attachTarget } from '../../directives/attachable.directive';
import { FocusRingComponent } from '../focus-ring/focus-ring.component';
import * as i0 from "@angular/core";
import * as i1 from "../../directives/forward-focus.directive";
import * as i2 from "../../directives/parent-activation.directive";
import * as i3 from "@angular/common";
export class AvatarComponent extends MaterialDesignComponent {
    disabled = model(false);
    type = model(undefined);
    href = model();
    anchorTarget = model();
    name = model();
    value = model();
    progressIndeterminate = model(false);
    progressValue = model(0);
    progressMax = model(0);
    badgeDot = model(false);
    badgeNumber = model();
    src = model();
    palette = model('primary');
    fullName = model();
    size = model();
    slot = model();
    button = viewChild('button');
    initial = computed(() => this.fullName() ? this.fullName()[0] : '');
    constructor() {
        super();
        attachTarget(ForwardFocusDirective, this.button);
        attachTarget(ParentActivationDirective, this.button);
    }
    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.9", ngImport: i0, type: AvatarComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "18.2.9", type: AvatarComponent, isStandalone: true, selector: "md-avatar", inputs: { disabled: { classPropertyName: "disabled", publicName: "disabled", isSignal: true, isRequired: false, transformFunction: null }, type: { classPropertyName: "type", publicName: "type", isSignal: true, isRequired: false, transformFunction: null }, href: { classPropertyName: "href", publicName: "href", isSignal: true, isRequired: false, transformFunction: null }, anchorTarget: { classPropertyName: "anchorTarget", publicName: "anchorTarget", isSignal: true, isRequired: false, transformFunction: null }, name: { classPropertyName: "name", publicName: "name", isSignal: true, isRequired: false, transformFunction: null }, value: { classPropertyName: "value", publicName: "value", isSignal: true, isRequired: false, transformFunction: null }, progressIndeterminate: { classPropertyName: "progressIndeterminate", publicName: "progressIndeterminate", isSignal: true, isRequired: false, transformFunction: null }, progressValue: { classPropertyName: "progressValue", publicName: "progressValue", isSignal: true, isRequired: false, transformFunction: null }, progressMax: { classPropertyName: "progressMax", publicName: "progressMax", isSignal: true, isRequired: false, transformFunction: null }, badgeDot: { classPropertyName: "badgeDot", publicName: "badgeDot", isSignal: true, isRequired: false, transformFunction: null }, badgeNumber: { classPropertyName: "badgeNumber", publicName: "badgeNumber", isSignal: true, isRequired: false, transformFunction: null }, src: { classPropertyName: "src", publicName: "src", isSignal: true, isRequired: false, transformFunction: null }, palette: { classPropertyName: "palette", publicName: "palette", isSignal: true, isRequired: false, transformFunction: null }, fullName: { classPropertyName: "fullName", publicName: "fullName", isSignal: true, isRequired: false, transformFunction: null }, size: { classPropertyName: "size", publicName: "size", isSignal: true, isRequired: false, transformFunction: null }, slot: { classPropertyName: "slot", publicName: "slot", isSignal: true, isRequired: false, transformFunction: null } }, outputs: { disabled: "disabledChange", type: "typeChange", href: "hrefChange", anchorTarget: "anchorTargetChange", name: "nameChange", value: "valueChange", progressIndeterminate: "progressIndeterminateChange", progressValue: "progressValueChange", progressMax: "progressMaxChange", badgeDot: "badgeDotChange", badgeNumber: "badgeNumberChange", src: "srcChange", palette: "paletteChange", fullName: "fullNameChange", size: "sizeChange", slot: "slotChange" }, host: { properties: { "attr.palette": "palette()", "attr.interactive": "!!type() || !!href() || null", "style.--md-comp-avatar-size": "size() ?? null", "attr.disabled": "disabled() || null", "attr.busy": "progressIndeterminate() || !!progressValue() || null" } }, viewQueries: [{ propertyName: "button", first: true, predicate: ["button"], descendants: true, isSignal: true }], usesInheritance: true, hostDirectives: [{ directive: i1.ForwardFocusDirective }, { directive: i2.ParentActivationDirective }], ngImport: i0, template: "<ng-template #content>\n  <md-touch-area />\n  @if (src()) {\n  @defer {\n  <img [src]=\"src()\" [alt]=\"fullName()\" />\n  }\n  } @else {\n  <span class=\"initials\">\n    {{ initial() }}\n  </span>\n  }\n</ng-template>\n\n@if (this.type() || this.href()) {\n<md-focus-ring part=\"focus-ring\" [target]=\"button()\" />\n<md-ripple part=\"ripple\" [target]=\"button()\" />\n@if (href()) {\n<a part=\"button\" #button [attr.href]=\"href() ?? null\" [attr.target]=\"anchorTarget() ?? null\"\n  [tabIndex]=\"disabled() ? -1 : 0\">\n  <ng-container *ngTemplateOutlet=\"content\" class=\"content\" />\n</a>\n} @else {\n<button part=\"button\" #button [type]=\"type()\" [disabled]=\"disabled()\" [attr.name]=\"name() ?? null\"\n  [attr.value]=\"value() ?? null\">\n  <ng-container *ngTemplateOutlet=\"content\" />\n</button>\n}\n} @else {\n<ng-container *ngTemplateOutlet=\"content\" />\n}\n@if (badgeDot() || badgeNumber()) {\n<md-badge part=\"badge\" [dot]=\"badgeDot()\" [number]=\"badgeNumber()\" />\n}\n\n@if (!disabled() && (progressValue() || progressIndeterminate())) {\n<md-progress-indicator [value]=\"progressValue()\" [indeterminate]=\"progressIndeterminate()\" />\n}", styles: [":host{--md-comp-avatar-size: 40;--_size-px: calc(var(--md-comp-avatar-size) * 1px);--_color: currentColor;position:relative;border-radius:var(--md-sys-shape-full);height:var(--_size-px);width:var(--_size-px);flex-shrink:0;font-size:var(--md-sys-typescale-label-large-size);font-weight:var(--md-sys-typescale-label-large-weight);font-family:var(--md-sys-typescale-label-large-font);font-size:calc(var(--_size-px) * .45);justify-content:center;align-items:center;display:inline-flex;overflow:hidden;transition-property:background-color,border,color;transition-duration:var(--md-sys-motion-duration-short-4);transition-timing-function:var(--md-sys-motion-easing-standard)}:host img{height:var(--_size-px);width:var(--_size-px);transition-property:opacity;transition-duration:var(--md-sys-motion-duration-short-4);transition-timing-function:var(--md-sys-motion-easing-standard)}:host button,:host a{background-color:transparent;display:inherit;font:inherit;color:inherit;padding:0;margin:0;gap:inherit;text-decoration:none;border-radius:inherit;appearance:none;border:0;outline:none;cursor:pointer;align-items:center;transition-property:opacity;transition-duration:var(--md-sys-motion-duration-short-4);transition-timing-function:var(--md-sys-motion-easing-standard)}:host md-ripple{--md-comp-ripple-color: var(--_color);--md-comp-ripple-transform-default: scale(0);--md-comp-ripple-transform-hover: scale(1);z-index:1}:host md-progress-indicator{--md-comp-progress-indicator-color: var(--_color);--md-comp-progress-indicator-size: calc(var(--md-comp-avatar-size) * .6);position:absolute;display:inline-flex;align-self:center}:host .content{transition-property:opacity;transition-duration:var(--md-sys-motion-duration-short-4);transition-timing-function:var(--md-sys-motion-easing-standard)}:host([interactive=true]){cursor:pointer}:host([palette=surface]){background-color:var(--md-sys-color-surface-container-low);border:2px solid var(--md-sys-color-outline-variant);color:var(--md-sys-color-surface-variant-on)}:host([palette=primary]){background-color:var(--md-sys-color-primary-container);border:2px solid var(--md-sys-color-primary);color:var(--md-sys-color-primary)}:host([palette=secondary]){background-color:var(--md-sys-color-secondary-container);border:2px solid var(--md-sys-color-secondary);color:var(--md-sys-color-secondary)}:host([palette=tertiary]){background-color:var(--md-sys-color-tertiary-container);border:2px solid var(--md-sys-color-tertiary);color:var(--md-sys-color-tertiary)}:host([palette=plain]){background-color:transparent;color:var(--md-sys-color-surface-variant-on)}:host([palette=plain][disabled=true]){background-color:transparent;border-color:transparent}:host([interactive=true]:hover) img{opacity:.8}:host([busy=true]:not([disabled=true])){pointer-events:none}:host([busy=true]:not([disabled=true])) img{opacity:.5}:host([busy=true]:not([disabled=true])) .initials{opacity:0}:host([disabled=true]){pointer-events:none;cursor:default;color:color-mix(in oklab,transparent,var(--md-sys-color-surface-on) calc(var(--md-sys-disabled-color) * 100%));background-color:color-mix(in oklab,transparent,var(--md-sys-color-surface-on) calc(var(--md-sys-disabled-background-color) * 100%));border-color:color-mix(in oklab,transparent,var(--md-sys-color-surface-on) calc(var(--md-sys-disabled-border-color) * 100%))}:host([disabled=true]) img{opacity:.5}\n"], dependencies: [{ kind: "ngmodule", type: CommonModule }, { kind: "directive", type: i3.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }, { kind: "component", type: TouchAreaComponent, selector: "md-touch-area" }, { kind: "component", type: FocusRingComponent, selector: "md-focus-ring", inputs: ["focusVisible"], outputs: ["focusVisibleChange"] }, { kind: "component", type: RippleComponent, selector: "md-ripple, [mdRipple]", inputs: ["hoverable", "interactive"], outputs: ["hoverableChange", "interactiveChange"] }, { kind: "component", type: BadgeComponent, selector: "md-badge", inputs: ["dot", "number", "embedded"], outputs: ["dotChange", "numberChange", "embeddedChange"] }, { kind: "component", type: ProgressIndicatorComponent, selector: "md-progress-indicator", inputs: ["variant", "value", "max", "indeterminate", "fourColor", "size", "width", "buffer", "circleSize"], outputs: ["variantChange", "valueChange", "maxChange", "indeterminateChange", "fourColorChange", "sizeChange", "widthChange", "bufferChange", "circleSizeChange"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.ShadowDom });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.9", ngImport: i0, type: AvatarComponent, decorators: [{
            type: Component,
            args: [{ selector: 'md-avatar', changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.ShadowDom, standalone: true, imports: [
                        CommonModule,
                        TouchAreaComponent,
                        FocusRingComponent,
                        RippleComponent,
                        CommonModule,
                        BadgeComponent,
                        ProgressIndicatorComponent,
                    ], hostDirectives: [ForwardFocusDirective, ParentActivationDirective], host: {
                        '[attr.palette]': 'palette()',
                        '[attr.interactive]': '!!type() || !!href() || null',
                        '[style.--md-comp-avatar-size]': 'size() ?? null',
                        '[attr.disabled]': 'disabled() || null',
                        '[attr.busy]': 'progressIndeterminate() || !!progressValue() || null',
                    }, template: "<ng-template #content>\n  <md-touch-area />\n  @if (src()) {\n  @defer {\n  <img [src]=\"src()\" [alt]=\"fullName()\" />\n  }\n  } @else {\n  <span class=\"initials\">\n    {{ initial() }}\n  </span>\n  }\n</ng-template>\n\n@if (this.type() || this.href()) {\n<md-focus-ring part=\"focus-ring\" [target]=\"button()\" />\n<md-ripple part=\"ripple\" [target]=\"button()\" />\n@if (href()) {\n<a part=\"button\" #button [attr.href]=\"href() ?? null\" [attr.target]=\"anchorTarget() ?? null\"\n  [tabIndex]=\"disabled() ? -1 : 0\">\n  <ng-container *ngTemplateOutlet=\"content\" class=\"content\" />\n</a>\n} @else {\n<button part=\"button\" #button [type]=\"type()\" [disabled]=\"disabled()\" [attr.name]=\"name() ?? null\"\n  [attr.value]=\"value() ?? null\">\n  <ng-container *ngTemplateOutlet=\"content\" />\n</button>\n}\n} @else {\n<ng-container *ngTemplateOutlet=\"content\" />\n}\n@if (badgeDot() || badgeNumber()) {\n<md-badge part=\"badge\" [dot]=\"badgeDot()\" [number]=\"badgeNumber()\" />\n}\n\n@if (!disabled() && (progressValue() || progressIndeterminate())) {\n<md-progress-indicator [value]=\"progressValue()\" [indeterminate]=\"progressIndeterminate()\" />\n}", styles: [":host{--md-comp-avatar-size: 40;--_size-px: calc(var(--md-comp-avatar-size) * 1px);--_color: currentColor;position:relative;border-radius:var(--md-sys-shape-full);height:var(--_size-px);width:var(--_size-px);flex-shrink:0;font-size:var(--md-sys-typescale-label-large-size);font-weight:var(--md-sys-typescale-label-large-weight);font-family:var(--md-sys-typescale-label-large-font);font-size:calc(var(--_size-px) * .45);justify-content:center;align-items:center;display:inline-flex;overflow:hidden;transition-property:background-color,border,color;transition-duration:var(--md-sys-motion-duration-short-4);transition-timing-function:var(--md-sys-motion-easing-standard)}:host img{height:var(--_size-px);width:var(--_size-px);transition-property:opacity;transition-duration:var(--md-sys-motion-duration-short-4);transition-timing-function:var(--md-sys-motion-easing-standard)}:host button,:host a{background-color:transparent;display:inherit;font:inherit;color:inherit;padding:0;margin:0;gap:inherit;text-decoration:none;border-radius:inherit;appearance:none;border:0;outline:none;cursor:pointer;align-items:center;transition-property:opacity;transition-duration:var(--md-sys-motion-duration-short-4);transition-timing-function:var(--md-sys-motion-easing-standard)}:host md-ripple{--md-comp-ripple-color: var(--_color);--md-comp-ripple-transform-default: scale(0);--md-comp-ripple-transform-hover: scale(1);z-index:1}:host md-progress-indicator{--md-comp-progress-indicator-color: var(--_color);--md-comp-progress-indicator-size: calc(var(--md-comp-avatar-size) * .6);position:absolute;display:inline-flex;align-self:center}:host .content{transition-property:opacity;transition-duration:var(--md-sys-motion-duration-short-4);transition-timing-function:var(--md-sys-motion-easing-standard)}:host([interactive=true]){cursor:pointer}:host([palette=surface]){background-color:var(--md-sys-color-surface-container-low);border:2px solid var(--md-sys-color-outline-variant);color:var(--md-sys-color-surface-variant-on)}:host([palette=primary]){background-color:var(--md-sys-color-primary-container);border:2px solid var(--md-sys-color-primary);color:var(--md-sys-color-primary)}:host([palette=secondary]){background-color:var(--md-sys-color-secondary-container);border:2px solid var(--md-sys-color-secondary);color:var(--md-sys-color-secondary)}:host([palette=tertiary]){background-color:var(--md-sys-color-tertiary-container);border:2px solid var(--md-sys-color-tertiary);color:var(--md-sys-color-tertiary)}:host([palette=plain]){background-color:transparent;color:var(--md-sys-color-surface-variant-on)}:host([palette=plain][disabled=true]){background-color:transparent;border-color:transparent}:host([interactive=true]:hover) img{opacity:.8}:host([busy=true]:not([disabled=true])){pointer-events:none}:host([busy=true]:not([disabled=true])) img{opacity:.5}:host([busy=true]:not([disabled=true])) .initials{opacity:0}:host([disabled=true]){pointer-events:none;cursor:default;color:color-mix(in oklab,transparent,var(--md-sys-color-surface-on) calc(var(--md-sys-disabled-color) * 100%));background-color:color-mix(in oklab,transparent,var(--md-sys-color-surface-on) calc(var(--md-sys-disabled-background-color) * 100%));border-color:color-mix(in oklab,transparent,var(--md-sys-color-surface-on) calc(var(--md-sys-disabled-border-color) * 100%))}:host([disabled=true]) img{opacity:.5}\n"] }]
        }], ctorParameters: () => [] });
//# sourceMappingURL=data:application/json;base64,