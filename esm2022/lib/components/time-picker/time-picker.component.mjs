import { ChangeDetectionStrategy, Component, computed, effect, forwardRef, model, signal, viewChild, ViewEncapsulation, } from '@angular/core';
import { ButtonComponent } from '../button/button.component';
import { FormsModule, NG_VALUE_ACCESSOR } from '@angular/forms';
import { MaterialDesignValueAccessorComponent } from '../material-design-value-accessor.component';
import { FieldComponent } from '../field/field.component';
import { DialogComponent } from '../dialog/dialog.component';
import { TimeSpan } from '../../common/time-span';
import { CommonModule } from '@angular/common';
import { IconComponent } from '../icon/icon.component';
import { RippleComponent } from '../ripple/ripple.component';
import { getMeridianValues } from '../../common/date-helpers/get-meridian-values';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "@angular/forms";
export class TimePickerComponent extends MaterialDesignValueAccessorComponent {
    variant = model('embedded');
    fieldVariant = model('filled');
    label = model();
    value = model();
    selectionValue = model(this.value());
    field = viewChild('field');
    dialog = viewChild('dialog');
    hours = model(true);
    seconds = model(false);
    timeOfDay = model(false);
    locale = model('en');
    meridian = model('am');
    populated = computed(() => {
        if (this.field()?.popover()?.state() === 'closing' && !this.value()) {
            return false;
        }
        return (!!this.value() ||
            this.field()?.open() ||
            this.field()?.popover()?.state() === 'opening');
    });
    get meridianLabels() {
        return getMeridianValues(this.locale());
    }
    get valueAsTimeSpan() {
        return this.value() ? TimeSpan.parse(this.value()) : undefined;
    }
    set valueAsTimeSpan(value) {
        this.value.set(value?.toString());
    }
    get selectedValueAsTimeSpan() {
        return this.selectionValue()
            ? TimeSpan.parse(this.selectionValue())
            : undefined;
    }
    set selectedValueAsTimeSpan(value) {
        this.selectionValue.set(value?.toString());
    }
    hoursInput = signal(this.selectedValueAsTimeSpan?.hours);
    minutesInput = signal(this.selectedValueAsTimeSpan?.minutes);
    secondsInput = signal(this.selectedValueAsTimeSpan?.seconds);
    displayText = computed(() => {
        if (!this.valueAsTimeSpan) {
            return $localize `Select a time...`;
        }
        const time = this.valueAsTimeSpan.toString({
            seconds: this.seconds(),
            hours: this.hours(),
        });
        if (this.timeOfDay()) {
            // eslint-disable-next-line @typescript-eslint/no-explicit-any
            return `${time} ${this.meridianLabels[this.meridian()]}`;
        }
        return time;
    });
    constructor() {
        super();
        effect(() => {
            const hours = this.hoursInput();
            const minutes = this.minutesInput();
            const seconds = this.secondsInput();
            this.selectedValueAsTimeSpan = new TimeSpan(hours, minutes, seconds);
        }, {
            allowSignalWrites: true,
        });
        effect(() => {
            if (this.variant() === 'embedded') {
                this.value.set(this.selectionValue());
            }
        }, {
            allowSignalWrites: true,
        });
        effect(() => {
            if (this.timeOfDay()) {
                if (this.meridian() === 'am' && this.hoursInput() === 12) {
                    this.hoursInput.set(0);
                }
                else if (this.meridian() === 'pm' && this.hoursInput() === 0) {
                    this.hoursInput.set(12);
                }
            }
        }, {
            allowSignalWrites: true,
        });
    }
    clearClick() {
        this.value.set(undefined);
        this.selectionValue.set(undefined);
    }
    okayClick() {
        this.value.set(this.selectionValue());
        if (this.variant() === 'dropdown') {
            this.field()?.open.set(false);
        }
        if (this.variant() === 'dialog') {
            this.dialog()?.open.set(false);
        }
    }
    cancelClick() {
        this.selectionValue.set(this.value());
        if (this.variant() === 'dropdown') {
            this.field()?.open.set(false);
        }
        if (this.variant() === 'dialog') {
            this.dialog()?.open.set(false);
        }
    }
    bodyClick() {
        if (this.variant() !== 'dialog') {
            return;
        }
        this.dialog()?.open.set(true);
    }
    popoverStateChange(state) {
        if (state === 'closed') {
            this.cancelClick();
        }
    }
    onBeforeInput(event, part) {
        const input = event.target;
        const inputEvent = event;
        if (inputEvent.inputType === 'insertText') {
            inputEvent.preventDefault();
            const min = 0;
            const max = part === 'hours' ? 12 : 59;
            let value = parseInt(input.value + (inputEvent.data ?? '0'));
            if (this.timeOfDay() || part !== 'hours') {
                if (value < min) {
                    value = min;
                }
                if (value > max) {
                    value = max;
                }
            }
            if (part === 'hours') {
                if (this.timeOfDay() && this.meridian() === 'am' && value === 12) {
                    this.hoursInput.set(0);
                }
                else if (this.timeOfDay() &&
                    this.meridian() === 'pm' &&
                    value === 0) {
                    this.hoursInput.set(12);
                }
                else {
                    this.hoursInput.set(value);
                }
            }
            if (part === 'minutes') {
                this.minutesInput.set(value);
            }
            if (part === 'seconds') {
                this.secondsInput.set(value);
            }
        }
    }
    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.9", ngImport: i0, type: TimePickerComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "18.2.9", type: TimePickerComponent, isStandalone: true, selector: "md-time-picker", inputs: { variant: { classPropertyName: "variant", publicName: "variant", isSignal: true, isRequired: false, transformFunction: null }, fieldVariant: { classPropertyName: "fieldVariant", publicName: "fieldVariant", isSignal: true, isRequired: false, transformFunction: null }, label: { classPropertyName: "label", publicName: "label", isSignal: true, isRequired: false, transformFunction: null }, value: { classPropertyName: "value", publicName: "value", isSignal: true, isRequired: false, transformFunction: null }, selectionValue: { classPropertyName: "selectionValue", publicName: "selectionValue", isSignal: true, isRequired: false, transformFunction: null }, hours: { classPropertyName: "hours", publicName: "hours", isSignal: true, isRequired: false, transformFunction: null }, seconds: { classPropertyName: "seconds", publicName: "seconds", isSignal: true, isRequired: false, transformFunction: null }, timeOfDay: { classPropertyName: "timeOfDay", publicName: "timeOfDay", isSignal: true, isRequired: false, transformFunction: null }, locale: { classPropertyName: "locale", publicName: "locale", isSignal: true, isRequired: false, transformFunction: null }, meridian: { classPropertyName: "meridian", publicName: "meridian", isSignal: true, isRequired: false, transformFunction: null } }, outputs: { variant: "variantChange", fieldVariant: "fieldVariantChange", label: "labelChange", value: "valueChange", selectionValue: "selectionValueChange", hours: "hoursChange", seconds: "secondsChange", timeOfDay: "timeOfDayChange", locale: "localeChange", meridian: "meridianChange" }, providers: [
            {
                provide: NG_VALUE_ACCESSOR,
                multi: true,
                useExisting: forwardRef(() => TimePickerComponent),
            },
        ], viewQueries: [{ propertyName: "field", first: true, predicate: ["field"], descendants: true, isSignal: true }, { propertyName: "dialog", first: true, predicate: ["dialog"], descendants: true, isSignal: true }], usesInheritance: true, ngImport: i0, template: "<ng-template #actions>\n  <md-button [attr.slot]=\"variant() === 'dialog' ? 'action' : null\" variant=\"text\" class=\"clear\" (click)=\"clearClick()\"\n    i18n>Clear</md-button>\n  @if (variant() !== 'embedded') {\n  <md-button [attr.slot]=\"variant() === 'dialog' ? 'action' : null\" variant=\"text\" (click)=\"okayClick()\"\n    i18n>Okay</md-button>\n  <md-button [attr.slot]=\"variant() === 'dialog' ? 'action' : null\" variant=\"text\" (click)=\"cancelClick()\"\n    i18n>Cancel</md-button>\n  }\n</ng-template>\n\n<ng-template #contents>\n  <div class=\"container\">\n    <div class=\"body\">\n      @if (hours()) {\n      <div class=\"input-container\">\n        <div class=\"input\">\n          <md-ripple [target]=\"hours\" [interactive]=\"false\" />\n          <input #hours type=\"number\" class=\"hours\" (beforeinput)=\"onBeforeInput($event, 'hours')\"\n            [(ngModel)]=\"hoursInput\">\n        </div>\n        <span class=\"input-label\" i18n>Hours</span>\n      </div>\n      <span class=\"separator\">:</span>\n      }\n      <div class=\"input-container\">\n        <div class=\"input\">\n          <md-ripple [target]=\"minutes\" [interactive]=\"false\" />\n          <input #minutes type=\"number\" class=\"minutes\" (beforeinput)=\"onBeforeInput($event, 'minutes')\"\n            [(ngModel)]=\"minutesInput\">\n        </div>\n        <span class=\"input-label\" i18n>Minutes</span>\n      </div>\n      @if (seconds()) {\n      <span class=\"separator\">:</span>\n      <div class=\"input-container\">\n        <div class=\"input\">\n          <md-ripple [target]=\"seconds\" [interactive]=\"false\" />\n          <input #seconds type=\"number\" class=\"seconds\" (beforeinput)=\"onBeforeInput($event, 'seconds')\"\n            [(ngModel)]=\"secondsInput\">\n        </div>\n        <span class=\"input-label\" i18n>Seconds</span>\n      </div>\n      }\n      @if (timeOfDay()) {\n      <div class=\"meridian\">\n        <md-button variant=\"plain\" [class.selected]=\"meridian() === 'am'\" (click)=\"meridian.set('am')\">\n          {{ meridianLabels.am }}\n        </md-button>\n        <md-button variant=\"plain\" [class.selected]=\"meridian() === 'pm'\" (click)=\"meridian.set('pm')\">\n          {{ meridianLabels.pm }}\n        </md-button>\n      </div>\n      }\n    </div>\n    @if (variant() !== 'dialog') {\n    <div class=\"actions\">\n      <ng-container *ngTemplateOutlet=\"actions\" />\n    </div>\n    }\n  </div>\n</ng-template>\n\n@if (variant() === 'embedded') {\n<ng-container *ngTemplateOutlet=\"contents\" />\n} @else {\n<md-field #field [variant]=\"fieldVariant()\" [populated]=\"!!populated()\" [errorText]=\"errorText()\" [label]=\"label()\"\n  [disabled]=\"disabled()\" (bodyClick)=\"bodyClick()\" (popoverStateChange)=\"popoverStateChange($event)\">\n  <slot name=\"leading\" slot=\"leading\"></slot>\n  <slot name=\"prefix\" slot=\"prefix\"></slot>\n  <slot name=\"suffix\" slot=\"suffix\"></slot>\n  <slot name=\"supporting-text\" slot=\"supporting-text\"></slot>\n  <slot name=\"counter\" slot=\"counter\"></slot>\n  <span class=\"selected-value\">\n    {{ displayText() }}\n  </span>\n  <md-icon slot=\"trailing\">schedule</md-icon>\n  @if (variant() === 'dropdown') {\n  <div class=\"popover\" slot=\"popover\">\n    <ng-container *ngTemplateOutlet=\"contents\" />\n  </div>\n  }\n</md-field>\n@if (variant() === 'dialog') {\n<md-dialog #dialog (stateChange)=\"popoverStateChange($event)\">\n  <md-icon slot=\"icon\">schedule</md-icon>\n  <span class=\"selected-value\" slot=\"headline\" i18n>\n    Select a time...\n  </span>\n  <slot name=\"supporting-text\" slot=\"supporting-text\"></slot>\n  <ng-container *ngTemplateOutlet=\"contents\" />\n  <ng-container *ngTemplateOutlet=\"actions\" />\n</md-dialog>\n}\n}", styles: [":host md-field::part(body){cursor:pointer}:host .popover{display:inline-flex}:host .container{display:inline-flex;flex-direction:column;isolation:isolate;flex-grow:1;background-color:var(--md-sys-color-surface-container);border-radius:var(--md-sys-shape-extra-small);padding-top:20px;padding-bottom:12px;padding-inline:12px}:host .container md-button[variant=plain]{border-inline:1px solid var(--md-sys-color-outline);height:40px}:host .container md-button[variant=plain]:first-child{border-top:1px solid var(--md-sys-color-outline);border-bottom:.5px solid var(--md-sys-color-outline);border-radius:var(--md-sys-shape-extra-small-top)}:host .container md-button[variant=plain]:last-child{border-top:.5px solid var(--md-sys-color-outline);border-bottom:1px solid var(--md-sys-color-outline);border-radius:var(--md-sys-shape-extra-small-bottom)}:host .container .body{position:relative;flex-grow:1;flex-direction:row;display:inline-flex;justify-content:center}:host .actions{display:inline-flex;justify-content:flex-end;gap:8px;flex-grow:1;margin-top:8px}:host .clear{margin-inline-end:auto}:host .selected-value{display:inline-flex;gap:8px}:host input,:host textarea{display:inline-flex;appearance:none;margin:0;padding:0;padding-inline:0;padding-block:0;border:0;outline:none;background-color:transparent;color:inherit;caret-color:inherit;resize:none;overflow:hidden;font-family:inherit;font-weight:inherit;font-size:inherit;box-sizing:border-box;height:80px;width:96px;text-align:center;border-radius:inherit}:host input::placeholder,:host textarea::placeholder{color:currentColor;opacity:1}:host input::-webkit-calendar-picker-indicator,:host textarea::-webkit-calendar-picker-indicator{display:none}:host input::-webkit-search-decoration,:host input::-webkit-search-cancel-button,:host textarea::-webkit-search-decoration,:host textarea::-webkit-search-cancel-button{display:none}:host input::-webkit-inner-spin-button,:host input::-webkit-outer-spin-button,:host textarea::-webkit-inner-spin-button,:host textarea::-webkit-outer-spin-button{display:none}:host input[type=number],:host textarea[type=number]{-moz-appearance:textfield}:host .input-container{display:inline-flex;gap:4px;flex-direction:column}:host .input-label{color:var(--md-sys-color-surface-variant-on);font-size:var(--md-sys-typescale-body-small-size);font-weight:var(--md-sys-typescale-body-small-weight);font-family:var(--md-sys-typescale-body-small-font)}:host .input{position:relative;font-size:var(--md-sys-typescale-display-large-no-rfs-size);font-weight:var(--md-sys-typescale-display-large-no-rfs-weight);font-family:var(--md-sys-typescale-display-large-no-rfs-font);caret-color:currentColor;border-radius:var(--md-sys-shape-small)}:host .hours{background-color:var(--md-sys-color-primary-container);color:var(--md-sys-color-primary-container-on)}:host .hours:focus{border:2px solid var(--md-sys-color-primary)}:host .minutes,:host .seconds{background-color:var(--md-sys-color-surface-container-highest);color:var(--md-sys-color-surface-on)}:host .minutes:focus,:host .seconds:focus{border:2px solid var(--md-sys-color-surface-on)}:host .separator{margin-inline:8px;font-size:var(--md-sys-typescale-display-large-no-rfs-size);font-weight:var(--md-sys-typescale-display-large-no-rfs-weight);font-family:var(--md-sys-typescale-display-large-no-rfs-font)}:host .meridian{display:inline-flex;flex-direction:column;margin-inline-start:16px;width:52px}:host .meridian .selected{background-color:var(--md-sys-color-tertiary-container);color:var(--md-sys-color-tertiary-container-on)}\n"], dependencies: [{ kind: "component", type: ButtonComponent, selector: "md-button", inputs: ["variant", "disabled", "type", "href", "anchorTarget", "name", "value", "progressIndeterminate", "progressValue", "progressMax"], outputs: ["variantChange", "disabledChange", "typeChange", "hrefChange", "anchorTargetChange", "nameChange", "valueChange", "progressIndeterminateChange", "progressValueChange", "progressMaxChange"] }, { kind: "component", type: DialogComponent, selector: "md-dialog", inputs: ["returnValue", "open"], outputs: ["returnValueChange", "openChange", "cancel", "stateChange"] }, { kind: "component", type: FieldComponent, selector: "md-field", inputs: ["value", "variant", "label", "populated", "open", "popoverTrigger", "maxPopoverHeight"], outputs: ["valueChange", "variantChange", "labelChange", "populatedChange", "contentClick", "bodyClick", "openChange", "popoverTriggerChange", "maxPopoverHeightChange", "popoverStateChange"] }, { kind: "ngmodule", type: CommonModule }, { kind: "directive", type: i1.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }, { kind: "component", type: IconComponent, selector: "md-icon", inputs: ["filled", "size", "badgeDot", "badgeNumber", "slot"], outputs: ["filledChange", "sizeChange", "badgeDotChange", "badgeNumberChange", "slotChange"] }, { kind: "ngmodule", type: FormsModule }, { kind: "directive", type: i2.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i2.NumberValueAccessor, selector: "input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]" }, { kind: "directive", type: i2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i2.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { kind: "component", type: RippleComponent, selector: "md-ripple, [mdRipple]", inputs: ["hoverable", "interactive"], outputs: ["hoverableChange", "interactiveChange"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.ShadowDom });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.9", ngImport: i0, type: TimePickerComponent, decorators: [{
            type: Component,
            args: [{ selector: 'md-time-picker', standalone: true, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.ShadowDom, imports: [
                        ButtonComponent,
                        DialogComponent,
                        FieldComponent,
                        CommonModule,
                        IconComponent,
                        FormsModule,
                        RippleComponent,
                    ], hostDirectives: [], host: {}, providers: [
                        {
                            provide: NG_VALUE_ACCESSOR,
                            multi: true,
                            useExisting: forwardRef(() => TimePickerComponent),
                        },
                    ], template: "<ng-template #actions>\n  <md-button [attr.slot]=\"variant() === 'dialog' ? 'action' : null\" variant=\"text\" class=\"clear\" (click)=\"clearClick()\"\n    i18n>Clear</md-button>\n  @if (variant() !== 'embedded') {\n  <md-button [attr.slot]=\"variant() === 'dialog' ? 'action' : null\" variant=\"text\" (click)=\"okayClick()\"\n    i18n>Okay</md-button>\n  <md-button [attr.slot]=\"variant() === 'dialog' ? 'action' : null\" variant=\"text\" (click)=\"cancelClick()\"\n    i18n>Cancel</md-button>\n  }\n</ng-template>\n\n<ng-template #contents>\n  <div class=\"container\">\n    <div class=\"body\">\n      @if (hours()) {\n      <div class=\"input-container\">\n        <div class=\"input\">\n          <md-ripple [target]=\"hours\" [interactive]=\"false\" />\n          <input #hours type=\"number\" class=\"hours\" (beforeinput)=\"onBeforeInput($event, 'hours')\"\n            [(ngModel)]=\"hoursInput\">\n        </div>\n        <span class=\"input-label\" i18n>Hours</span>\n      </div>\n      <span class=\"separator\">:</span>\n      }\n      <div class=\"input-container\">\n        <div class=\"input\">\n          <md-ripple [target]=\"minutes\" [interactive]=\"false\" />\n          <input #minutes type=\"number\" class=\"minutes\" (beforeinput)=\"onBeforeInput($event, 'minutes')\"\n            [(ngModel)]=\"minutesInput\">\n        </div>\n        <span class=\"input-label\" i18n>Minutes</span>\n      </div>\n      @if (seconds()) {\n      <span class=\"separator\">:</span>\n      <div class=\"input-container\">\n        <div class=\"input\">\n          <md-ripple [target]=\"seconds\" [interactive]=\"false\" />\n          <input #seconds type=\"number\" class=\"seconds\" (beforeinput)=\"onBeforeInput($event, 'seconds')\"\n            [(ngModel)]=\"secondsInput\">\n        </div>\n        <span class=\"input-label\" i18n>Seconds</span>\n      </div>\n      }\n      @if (timeOfDay()) {\n      <div class=\"meridian\">\n        <md-button variant=\"plain\" [class.selected]=\"meridian() === 'am'\" (click)=\"meridian.set('am')\">\n          {{ meridianLabels.am }}\n        </md-button>\n        <md-button variant=\"plain\" [class.selected]=\"meridian() === 'pm'\" (click)=\"meridian.set('pm')\">\n          {{ meridianLabels.pm }}\n        </md-button>\n      </div>\n      }\n    </div>\n    @if (variant() !== 'dialog') {\n    <div class=\"actions\">\n      <ng-container *ngTemplateOutlet=\"actions\" />\n    </div>\n    }\n  </div>\n</ng-template>\n\n@if (variant() === 'embedded') {\n<ng-container *ngTemplateOutlet=\"contents\" />\n} @else {\n<md-field #field [variant]=\"fieldVariant()\" [populated]=\"!!populated()\" [errorText]=\"errorText()\" [label]=\"label()\"\n  [disabled]=\"disabled()\" (bodyClick)=\"bodyClick()\" (popoverStateChange)=\"popoverStateChange($event)\">\n  <slot name=\"leading\" slot=\"leading\"></slot>\n  <slot name=\"prefix\" slot=\"prefix\"></slot>\n  <slot name=\"suffix\" slot=\"suffix\"></slot>\n  <slot name=\"supporting-text\" slot=\"supporting-text\"></slot>\n  <slot name=\"counter\" slot=\"counter\"></slot>\n  <span class=\"selected-value\">\n    {{ displayText() }}\n  </span>\n  <md-icon slot=\"trailing\">schedule</md-icon>\n  @if (variant() === 'dropdown') {\n  <div class=\"popover\" slot=\"popover\">\n    <ng-container *ngTemplateOutlet=\"contents\" />\n  </div>\n  }\n</md-field>\n@if (variant() === 'dialog') {\n<md-dialog #dialog (stateChange)=\"popoverStateChange($event)\">\n  <md-icon slot=\"icon\">schedule</md-icon>\n  <span class=\"selected-value\" slot=\"headline\" i18n>\n    Select a time...\n  </span>\n  <slot name=\"supporting-text\" slot=\"supporting-text\"></slot>\n  <ng-container *ngTemplateOutlet=\"contents\" />\n  <ng-container *ngTemplateOutlet=\"actions\" />\n</md-dialog>\n}\n}", styles: [":host md-field::part(body){cursor:pointer}:host .popover{display:inline-flex}:host .container{display:inline-flex;flex-direction:column;isolation:isolate;flex-grow:1;background-color:var(--md-sys-color-surface-container);border-radius:var(--md-sys-shape-extra-small);padding-top:20px;padding-bottom:12px;padding-inline:12px}:host .container md-button[variant=plain]{border-inline:1px solid var(--md-sys-color-outline);height:40px}:host .container md-button[variant=plain]:first-child{border-top:1px solid var(--md-sys-color-outline);border-bottom:.5px solid var(--md-sys-color-outline);border-radius:var(--md-sys-shape-extra-small-top)}:host .container md-button[variant=plain]:last-child{border-top:.5px solid var(--md-sys-color-outline);border-bottom:1px solid var(--md-sys-color-outline);border-radius:var(--md-sys-shape-extra-small-bottom)}:host .container .body{position:relative;flex-grow:1;flex-direction:row;display:inline-flex;justify-content:center}:host .actions{display:inline-flex;justify-content:flex-end;gap:8px;flex-grow:1;margin-top:8px}:host .clear{margin-inline-end:auto}:host .selected-value{display:inline-flex;gap:8px}:host input,:host textarea{display:inline-flex;appearance:none;margin:0;padding:0;padding-inline:0;padding-block:0;border:0;outline:none;background-color:transparent;color:inherit;caret-color:inherit;resize:none;overflow:hidden;font-family:inherit;font-weight:inherit;font-size:inherit;box-sizing:border-box;height:80px;width:96px;text-align:center;border-radius:inherit}:host input::placeholder,:host textarea::placeholder{color:currentColor;opacity:1}:host input::-webkit-calendar-picker-indicator,:host textarea::-webkit-calendar-picker-indicator{display:none}:host input::-webkit-search-decoration,:host input::-webkit-search-cancel-button,:host textarea::-webkit-search-decoration,:host textarea::-webkit-search-cancel-button{display:none}:host input::-webkit-inner-spin-button,:host input::-webkit-outer-spin-button,:host textarea::-webkit-inner-spin-button,:host textarea::-webkit-outer-spin-button{display:none}:host input[type=number],:host textarea[type=number]{-moz-appearance:textfield}:host .input-container{display:inline-flex;gap:4px;flex-direction:column}:host .input-label{color:var(--md-sys-color-surface-variant-on);font-size:var(--md-sys-typescale-body-small-size);font-weight:var(--md-sys-typescale-body-small-weight);font-family:var(--md-sys-typescale-body-small-font)}:host .input{position:relative;font-size:var(--md-sys-typescale-display-large-no-rfs-size);font-weight:var(--md-sys-typescale-display-large-no-rfs-weight);font-family:var(--md-sys-typescale-display-large-no-rfs-font);caret-color:currentColor;border-radius:var(--md-sys-shape-small)}:host .hours{background-color:var(--md-sys-color-primary-container);color:var(--md-sys-color-primary-container-on)}:host .hours:focus{border:2px solid var(--md-sys-color-primary)}:host .minutes,:host .seconds{background-color:var(--md-sys-color-surface-container-highest);color:var(--md-sys-color-surface-on)}:host .minutes:focus,:host .seconds:focus{border:2px solid var(--md-sys-color-surface-on)}:host .separator{margin-inline:8px;font-size:var(--md-sys-typescale-display-large-no-rfs-size);font-weight:var(--md-sys-typescale-display-large-no-rfs-weight);font-family:var(--md-sys-typescale-display-large-no-rfs-font)}:host .meridian{display:inline-flex;flex-direction:column;margin-inline-start:16px;width:52px}:host .meridian .selected{background-color:var(--md-sys-color-tertiary-container);color:var(--md-sys-color-tertiary-container-on)}\n"] }]
        }], ctorParameters: () => [] });
//# sourceMappingURL=data:application/json;base64,