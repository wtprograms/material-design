import { Component, ChangeDetectionStrategy, ViewEncapsulation, forwardRef, model, viewChild, computed, } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
import { attachTarget } from '../../directives/attachable.directive';
import { ForwardFocusDirective } from '../../directives/forward-focus.directive';
import { ParentActivationDirective } from '../../directives/parent-activation.directive';
import { RippleComponent } from '../ripple/ripple.component';
import { IconComponent } from '../icon/icon.component';
import { MaterialDesignValueAccessorComponent } from '../material-design-value-accessor.component';
import { FocusRingComponent } from '../focus-ring/focus-ring.component';
import { SlotDirective } from '../../directives/slot.directive';
import * as i0 from "@angular/core";
import * as i1 from "../../directives/parent-activation.directive";
import * as i2 from "../../directives/forward-focus.directive";
export class CheckComponent extends MaterialDesignValueAccessorComponent {
    type = model('checkbox');
    switch = model(false);
    supportingText = model();
    value = model(false);
    _input = viewChild('input');
    uncheckedIconSlot = this.slotDirective('unchecked-icon');
    checkedIconSlot = this.slotDirective('checked-icon');
    labelSlot = this.slotDirective();
    checked = computed(() => this.value() === true || this.value() === undefined);
    indeterminate = computed(() => this.value() === undefined);
    _checkboxIcon = computed(() => {
        if (!this.checked() && !this.indeterminate()) {
            return 'check_box_outline_blank';
        }
        else if (this.checked() && !this.indeterminate()) {
            return 'check_box';
        }
        return 'indeterminate_check_box';
    });
    _radioIcon = computed(() => this.checked() ? 'radio_button_checked' : 'radio_button_unchecked');
    icon = computed(() => this.type() === 'checkbox' ? this._checkboxIcon() : this._radioIcon());
    constructor() {
        super();
        attachTarget(ParentActivationDirective, this._input);
        attachTarget(ForwardFocusDirective, this._input);
    }
    onInput(event) {
        const target = event.target;
        if (!target.checked) {
            this.value.set(false);
        }
        else if (target.indeterminate) {
            this.value.set(undefined);
        }
        else {
            this.value.set(true);
        }
    }
    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.9", ngImport: i0, type: CheckComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "18.2.9", type: CheckComponent, isStandalone: true, selector: "md-check", inputs: { type: { classPropertyName: "type", publicName: "type", isSignal: true, isRequired: false, transformFunction: null }, switch: { classPropertyName: "switch", publicName: "switch", isSignal: true, isRequired: false, transformFunction: null }, supportingText: { classPropertyName: "supportingText", publicName: "supportingText", isSignal: true, isRequired: false, transformFunction: null }, value: { classPropertyName: "value", publicName: "value", isSignal: true, isRequired: false, transformFunction: null } }, outputs: { type: "typeChange", switch: "switchChange", supportingText: "supportingTextChange", value: "valueChange" }, host: { properties: { "attr.error": "!!errorText() || null", "attr.type": "type()", "attr.checked": "checked() || indeterminate()", "attr.disabled": "disabled() || null", "attr.switch": "switch() || null", "attr.uncheckedIcon": "uncheckedIconSlot()?.any() || null", "attr.checkedIcon": "checkedIconSlot()?.any() || null", "attr.label": "labelSlot()?.any() || null" } }, providers: [
            {
                provide: NG_VALUE_ACCESSOR,
                multi: true,
                useExisting: forwardRef(() => CheckComponent),
            },
        ], viewQueries: [{ propertyName: "_input", first: true, predicate: ["input"], descendants: true, isSignal: true }], usesInheritance: true, hostDirectives: [{ directive: i1.ParentActivationDirective }, { directive: i2.ForwardFocusDirective }], ngImport: i0, template: "@if (switch()) {\n<div class=\"track\">\n  <div class=\"container\">\n    <md-ripple [target]=\"input\" />\n    <md-focus-ring [target]=\"input\" />\n    <div class=\"handle\">\n      <span class=\"unchecked-icon\">\n        <slot name=\"unchecked-icon\"></slot>\n      </span>\n      <span class=\"checked-icon\">\n        <slot name=\"checked-icon\"></slot>\n      </span>\n    </div>\n  </div>\n</div>\n} @else {\n<div part=\"container\" class=\"container\">\n  <md-ripple [target]=\"input\" />\n  <md-focus-ring [target]=\"input\" />\n  <md-icon [filled]=\"checked() || indeterminate()\">{{ icon() }}</md-icon>\n</div>\n}\n<input #input [type]=\"type()\" [disabled]=\"disabled()\" [checked]=\"checked()\" [indeterminate]=\"indeterminate()\"\n  (change)=\"onInput($event)\">\n<span class=\"label\">\n  <slot></slot>\n</span>", styles: [":host{position:relative;display:inline-flex;flex-direction:row;gap:8px;color:var(--md-sys-color-surface-variant-on);transition-property:color;transition-duration:var(--md-sys-motion-duration-short-4);transition-timing-function:var(--md-sys-motion-easing-standard)}:host .container{position:relative;display:inline-flex;justify-content:center;align-items:center;border-radius:var(--md-sys-shape-full);width:40px;height:40px}:host input{appearance:none;position:absolute;inset:0;border-radius:inherit;outline:0;cursor:pointer}:host md-ripple{--md-comp-ripple-transform-default: scale(0);--md-comp-ripple-transform-hover: scale(1)}:host .label{display:none;color:inherit;align-self:center}:host md-icon,:host ::slotted(md-icon){pointer-events:none}:host md-icon{color:inherit}:host([checked=true]){color:var(--md-sys-color-primary)}:host([checked=true]) md-icon,:host([checked=true]) ::slotted(md-icon){--md-comp-icon-filled: 1}:host([error=true]){color:var(--md-sys-color-danger)}:host([label=true]) .label{display:inline-flex}:host([switch=true]){flex-grow:0;flex-shrink:0}:host([switch=true]) .track{width:52px;height:32px;display:inline-flex;justify-content:center;align-items:center;background-color:var(--md-sys-color-surface-container-highest);border:2px solid var(--md-sys-color-outline);border-radius:var(--md-sys-shape-full);box-sizing:border-box;transition-property:background-color;transition-duration:var(--md-sys-motion-duration-short-4);transition-timing-function:var(--md-sys-motion-easing-border)}:host([switch=true]) .handle{width:16px;height:16px;display:inline-flex;justify-content:center;align-items:center;color:var(--md-sys-color-surface-container-highest);background-color:var(--md-sys-color-outline);border-radius:inherit;transition-property:width,height,background-color;transition-duration:var(--md-sys-motion-duration-short-4);transition-timing-function:var(--md-sys-motion-easing-standard)}:host([switch=true]) .container{position:absolute;transition-property:inset-inline-start;transition-duration:var(--md-sys-motion-duration-short-4);transition-timing-function:var(--md-sys-motion-easing-standard)}:host([switch=true]) .unchecked-icon,:host([switch=true]) .checked-icon{display:none}:host([switch=true]) ::slotted(md-icon){--md-comp-icon-size: 16}:host([switch=true][checked=false]) .container{inset-inline-start:-4px}:host([switch=true][checked=false][error=true]) .track{background-color:var(--md-sys-color-danger-container);border-color:var(--md-sys-color-danger)}:host([switch=true][checked=false][error=true]) .handle{color:var(--md-sys-color-danger-on);background-color:var(--md-sys-color-danger)}:host([switch=true][checked=true]) .container{inset-inline-start:16px}:host([switch=true][checked=true]) .track{background-color:var(--md-sys-color-primary);border-color:var(--md-sys-color-primary)}:host([switch=true][checked=true]) .handle{height:24px;width:24px;color:var(--md-sys-color-primary);background-color:var(--md-sys-color-primary-on)}:host([switch=true][checked=true][error=true]) .track{background-color:var(--md-sys-color-danger);border-color:var(--md-sys-color-danger)}:host([switch=true][checked=true][error=true]) .handle{color:var(--md-sys-color-danger);background-color:var(--md-sys-color-danger-on)}:host([switch=true][checked=false][uncheckedIcon=true]) .unchecked-icon{display:inline-flex}:host([switch=true][checked=false][uncheckedIcon=true]) .handle{height:24px;width:24px}:host([switch=true][checked=true][checkedIcon=true]) .checked-icon{display:inline-flex}:host([switch=true]:active) .handle,:host([switch=true][checked=false][uncheckedIcon=true]:active) .handle{height:28px;width:28px}:host([switch=true][disabled=true]){color:color-mix(in oklab,transparent,var(--md-sys-color-surface-on) calc(var(--md-sys-disabled-color) * 100%))}:host([switch=true][disabled=true]) .track{background-color:var(--md-sys-color-surface-container-highest);border-color:color-mix(in oklab,transparent,var(--md-sys-color-surface-on) calc(var(--md-sys-disabled-border-color) * 100%))}:host([switch=true][disabled=true]) .handle{color:var(--md-sys-color-surface);background-color:color-mix(in oklab,transparent,var(--md-sys-color-surface-on) calc(var(--md-sys-disabled-border-color) * 100%))}:host([disabled=true]){pointer-events:none;cursor:default;color:color-mix(in oklab,transparent,var(--md-sys-color-surface-on) calc(var(--md-sys-disabled-color) * 100%))}:host([disabled=true]) .track{background-color:var(--md-sys-color-surface-container-highest);border-color:color-mix(in oklab,transparent,var(--md-sys-color-surface-on) calc(var(--md-sys-disabled-border-color) * 100%))}:host([disabled=true]) .handle{color:var(--md-sys-color-surface);background-color:color-mix(in oklab,transparent,var(--md-sys-color-surface-on) calc(var(--md-sys-disabled-border-color) * 100%))}\n"], dependencies: [{ kind: "component", type: RippleComponent, selector: "md-ripple, [mdRipple]", inputs: ["hoverable", "interactive"], outputs: ["hoverableChange", "interactiveChange"] }, { kind: "component", type: FocusRingComponent, selector: "md-focus-ring", inputs: ["focusVisible"], outputs: ["focusVisibleChange"] }, { kind: "component", type: IconComponent, selector: "md-icon", inputs: ["filled", "size", "badgeDot", "badgeNumber", "slot"], outputs: ["filledChange", "sizeChange", "badgeDotChange", "badgeNumberChange", "slotChange"] }, { kind: "directive", type: SlotDirective, selector: "slot", inputs: ["name", "slot"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.ShadowDom });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.9", ngImport: i0, type: CheckComponent, decorators: [{
            type: Component,
            args: [{ selector: 'md-check', standalone: true, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.ShadowDom, imports: [RippleComponent, FocusRingComponent, IconComponent, SlotDirective], hostDirectives: [ParentActivationDirective, ForwardFocusDirective], host: {
                        '[attr.error]': '!!errorText() || null',
                        '[attr.type]': 'type()',
                        '[attr.checked]': 'checked() || indeterminate()',
                        '[attr.disabled]': 'disabled() || null',
                        '[attr.switch]': 'switch() || null',
                        '[attr.uncheckedIcon]': `uncheckedIconSlot()?.any() || null`,
                        '[attr.checkedIcon]': `checkedIconSlot()?.any() || null`,
                        '[attr.label]': `labelSlot()?.any() || null`,
                    }, providers: [
                        {
                            provide: NG_VALUE_ACCESSOR,
                            multi: true,
                            useExisting: forwardRef(() => CheckComponent),
                        },
                    ], template: "@if (switch()) {\n<div class=\"track\">\n  <div class=\"container\">\n    <md-ripple [target]=\"input\" />\n    <md-focus-ring [target]=\"input\" />\n    <div class=\"handle\">\n      <span class=\"unchecked-icon\">\n        <slot name=\"unchecked-icon\"></slot>\n      </span>\n      <span class=\"checked-icon\">\n        <slot name=\"checked-icon\"></slot>\n      </span>\n    </div>\n  </div>\n</div>\n} @else {\n<div part=\"container\" class=\"container\">\n  <md-ripple [target]=\"input\" />\n  <md-focus-ring [target]=\"input\" />\n  <md-icon [filled]=\"checked() || indeterminate()\">{{ icon() }}</md-icon>\n</div>\n}\n<input #input [type]=\"type()\" [disabled]=\"disabled()\" [checked]=\"checked()\" [indeterminate]=\"indeterminate()\"\n  (change)=\"onInput($event)\">\n<span class=\"label\">\n  <slot></slot>\n</span>", styles: [":host{position:relative;display:inline-flex;flex-direction:row;gap:8px;color:var(--md-sys-color-surface-variant-on);transition-property:color;transition-duration:var(--md-sys-motion-duration-short-4);transition-timing-function:var(--md-sys-motion-easing-standard)}:host .container{position:relative;display:inline-flex;justify-content:center;align-items:center;border-radius:var(--md-sys-shape-full);width:40px;height:40px}:host input{appearance:none;position:absolute;inset:0;border-radius:inherit;outline:0;cursor:pointer}:host md-ripple{--md-comp-ripple-transform-default: scale(0);--md-comp-ripple-transform-hover: scale(1)}:host .label{display:none;color:inherit;align-self:center}:host md-icon,:host ::slotted(md-icon){pointer-events:none}:host md-icon{color:inherit}:host([checked=true]){color:var(--md-sys-color-primary)}:host([checked=true]) md-icon,:host([checked=true]) ::slotted(md-icon){--md-comp-icon-filled: 1}:host([error=true]){color:var(--md-sys-color-danger)}:host([label=true]) .label{display:inline-flex}:host([switch=true]){flex-grow:0;flex-shrink:0}:host([switch=true]) .track{width:52px;height:32px;display:inline-flex;justify-content:center;align-items:center;background-color:var(--md-sys-color-surface-container-highest);border:2px solid var(--md-sys-color-outline);border-radius:var(--md-sys-shape-full);box-sizing:border-box;transition-property:background-color;transition-duration:var(--md-sys-motion-duration-short-4);transition-timing-function:var(--md-sys-motion-easing-border)}:host([switch=true]) .handle{width:16px;height:16px;display:inline-flex;justify-content:center;align-items:center;color:var(--md-sys-color-surface-container-highest);background-color:var(--md-sys-color-outline);border-radius:inherit;transition-property:width,height,background-color;transition-duration:var(--md-sys-motion-duration-short-4);transition-timing-function:var(--md-sys-motion-easing-standard)}:host([switch=true]) .container{position:absolute;transition-property:inset-inline-start;transition-duration:var(--md-sys-motion-duration-short-4);transition-timing-function:var(--md-sys-motion-easing-standard)}:host([switch=true]) .unchecked-icon,:host([switch=true]) .checked-icon{display:none}:host([switch=true]) ::slotted(md-icon){--md-comp-icon-size: 16}:host([switch=true][checked=false]) .container{inset-inline-start:-4px}:host([switch=true][checked=false][error=true]) .track{background-color:var(--md-sys-color-danger-container);border-color:var(--md-sys-color-danger)}:host([switch=true][checked=false][error=true]) .handle{color:var(--md-sys-color-danger-on);background-color:var(--md-sys-color-danger)}:host([switch=true][checked=true]) .container{inset-inline-start:16px}:host([switch=true][checked=true]) .track{background-color:var(--md-sys-color-primary);border-color:var(--md-sys-color-primary)}:host([switch=true][checked=true]) .handle{height:24px;width:24px;color:var(--md-sys-color-primary);background-color:var(--md-sys-color-primary-on)}:host([switch=true][checked=true][error=true]) .track{background-color:var(--md-sys-color-danger);border-color:var(--md-sys-color-danger)}:host([switch=true][checked=true][error=true]) .handle{color:var(--md-sys-color-danger);background-color:var(--md-sys-color-danger-on)}:host([switch=true][checked=false][uncheckedIcon=true]) .unchecked-icon{display:inline-flex}:host([switch=true][checked=false][uncheckedIcon=true]) .handle{height:24px;width:24px}:host([switch=true][checked=true][checkedIcon=true]) .checked-icon{display:inline-flex}:host([switch=true]:active) .handle,:host([switch=true][checked=false][uncheckedIcon=true]:active) .handle{height:28px;width:28px}:host([switch=true][disabled=true]){color:color-mix(in oklab,transparent,var(--md-sys-color-surface-on) calc(var(--md-sys-disabled-color) * 100%))}:host([switch=true][disabled=true]) .track{background-color:var(--md-sys-color-surface-container-highest);border-color:color-mix(in oklab,transparent,var(--md-sys-color-surface-on) calc(var(--md-sys-disabled-border-color) * 100%))}:host([switch=true][disabled=true]) .handle{color:var(--md-sys-color-surface);background-color:color-mix(in oklab,transparent,var(--md-sys-color-surface-on) calc(var(--md-sys-disabled-border-color) * 100%))}:host([disabled=true]){pointer-events:none;cursor:default;color:color-mix(in oklab,transparent,var(--md-sys-color-surface-on) calc(var(--md-sys-disabled-color) * 100%))}:host([disabled=true]) .track{background-color:var(--md-sys-color-surface-container-highest);border-color:color-mix(in oklab,transparent,var(--md-sys-color-surface-on) calc(var(--md-sys-disabled-border-color) * 100%))}:host([disabled=true]) .handle{color:var(--md-sys-color-surface);background-color:color-mix(in oklab,transparent,var(--md-sys-color-surface-on) calc(var(--md-sys-disabled-border-color) * 100%))}\n"] }]
        }], ctorParameters: () => [] });
//# sourceMappingURL=data:application/json;base64,