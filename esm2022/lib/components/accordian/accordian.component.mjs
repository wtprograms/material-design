import { ChangeDetectionStrategy, Component, model, ViewEncapsulation, } from '@angular/core';
import { MaterialDesignComponent } from '../material-design.component';
import { IconComponent } from '../icon/icon.component';
import { ButtonComponent } from '../button/button.component';
import { openClose } from '../../common/rxjs/open-close';
import { toSignal } from '@angular/core/rxjs-interop';
import * as i0 from "@angular/core";
export class AccordianComponent extends MaterialDesignComponent {
    open = model(false);
    _openClose$ = openClose(this.open, 'short4');
    state = toSignal(this._openClose$);
    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.9", ngImport: i0, type: AccordianComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.1.0", version: "18.2.9", type: AccordianComponent, isStandalone: true, selector: "md-accordian", inputs: { open: { classPropertyName: "open", publicName: "open", isSignal: true, isRequired: false, transformFunction: null } }, outputs: { open: "openChange" }, host: { properties: { "attr.state": "state()" } }, usesInheritance: true, ngImport: i0, template: "<md-button part=\"button\" variant=\"plain\" (click)=\"open.set(!open())\">\n  <slot name=\"headline\"></slot>\n  <md-icon>keyboard_arrow_down</md-icon>\n</md-button>\n<div part=\"body\" class=\"body\">\n  <slot></slot>\n</div>", styles: [":host{display:inline-flex;flex-direction:column}:host md-icon{margin-inline-start:auto;transform:rotate(0);transition-property:transform;transition-duration:var(--md-sys-motion-duration-short-4);transition-timing-function:var(--md-sys-motion-easing-standard)}:host .body{display:inline-flex;flex-direction:column;align-items:flex-start;overflow:hidden;height:0;visibility:hidden;padding-inline:8px;padding-top:0;padding-bottom:0;transition-property:height,visibility,padding;transition-duration:var(--md-sys-motion-duration-short-4);transition-timing-function:var(--md-sys-motion-easing-standard)}:host md-button{--md-comp-button-icon-size: 24;justify-content:flex-start;font-size:var(--md-sys-typescale-title-large-size);font-weight:var(--md-sys-typescale-title-large-weight);font-family:var(--md-sys-typescale-title-large-font);padding:8px}:host md-button::part(button){flex-grow:1}:host(:not([state=closed])) .body{visibility:visible}:host([state=opening]) .body,:host([state=opened]) .body{height:auto;padding-top:8px;padding-bottom:8px}:host([state=opening]) md-icon,:host([state=opened]) md-icon{transform:rotate(-180deg)}\n"], dependencies: [{ kind: "component", type: IconComponent, selector: "md-icon", inputs: ["filled", "size", "badgeDot", "badgeNumber", "slot"], outputs: ["filledChange", "sizeChange", "badgeDotChange", "badgeNumberChange", "slotChange"] }, { kind: "component", type: ButtonComponent, selector: "md-button", inputs: ["variant", "disabled", "type", "href", "anchorTarget", "name", "value", "progressIndeterminate", "progressValue", "progressMax"], outputs: ["variantChange", "disabledChange", "typeChange", "hrefChange", "anchorTargetChange", "nameChange", "valueChange", "progressIndeterminateChange", "progressValueChange", "progressMaxChange"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.ShadowDom });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.9", ngImport: i0, type: AccordianComponent, decorators: [{
            type: Component,
            args: [{ selector: 'md-accordian', standalone: true, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.ShadowDom, imports: [IconComponent, ButtonComponent], host: {
                        '[attr.state]': 'state()',
                    }, template: "<md-button part=\"button\" variant=\"plain\" (click)=\"open.set(!open())\">\n  <slot name=\"headline\"></slot>\n  <md-icon>keyboard_arrow_down</md-icon>\n</md-button>\n<div part=\"body\" class=\"body\">\n  <slot></slot>\n</div>", styles: [":host{display:inline-flex;flex-direction:column}:host md-icon{margin-inline-start:auto;transform:rotate(0);transition-property:transform;transition-duration:var(--md-sys-motion-duration-short-4);transition-timing-function:var(--md-sys-motion-easing-standard)}:host .body{display:inline-flex;flex-direction:column;align-items:flex-start;overflow:hidden;height:0;visibility:hidden;padding-inline:8px;padding-top:0;padding-bottom:0;transition-property:height,visibility,padding;transition-duration:var(--md-sys-motion-duration-short-4);transition-timing-function:var(--md-sys-motion-easing-standard)}:host md-button{--md-comp-button-icon-size: 24;justify-content:flex-start;font-size:var(--md-sys-typescale-title-large-size);font-weight:var(--md-sys-typescale-title-large-weight);font-family:var(--md-sys-typescale-title-large-font);padding:8px}:host md-button::part(button){flex-grow:1}:host(:not([state=closed])) .body{visibility:visible}:host([state=opening]) .body,:host([state=opened]) .body{height:auto;padding-top:8px;padding-bottom:8px}:host([state=opening]) md-icon,:host([state=opened]) md-icon{transform:rotate(-180deg)}\n"] }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWNjb3JkaWFuLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3d0cHJvZ3JhbXMvbWF0ZXJpYWwtZGVzaWduL3NyYy9saWIvY29tcG9uZW50cy9hY2NvcmRpYW4vYWNjb3JkaWFuLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3d0cHJvZ3JhbXMvbWF0ZXJpYWwtZGVzaWduL3NyYy9saWIvY29tcG9uZW50cy9hY2NvcmRpYW4vYWNjb3JkaWFuLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFDTCx1QkFBdUIsRUFDdkIsU0FBUyxFQUNULEtBQUssRUFDTCxpQkFBaUIsR0FDbEIsTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sOEJBQThCLENBQUM7QUFDdkUsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQ3ZELE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUM3RCxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sOEJBQThCLENBQUM7QUFDekQsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLDRCQUE0QixDQUFDOztBQWN0RCxNQUFNLE9BQU8sa0JBQW1CLFNBQVEsdUJBQXVCO0lBQ3BELElBQUksR0FBRyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUM7SUFFWixXQUFXLEdBQUcsU0FBUyxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsUUFBUSxDQUFDLENBQUM7SUFDckQsS0FBSyxHQUFHLFFBQVEsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7dUdBSmpDLGtCQUFrQjsyRkFBbEIsa0JBQWtCLG9UQ3hCL0IscU9BTU0sb3FDRGFNLGFBQWEsaU5BQUUsZUFBZTs7MkZBSzdCLGtCQUFrQjtrQkFaOUIsU0FBUzsrQkFDRSxjQUFjLGNBR1osSUFBSSxtQkFDQyx1QkFBdUIsQ0FBQyxNQUFNLGlCQUNoQyxpQkFBaUIsQ0FBQyxTQUFTLFdBQ2pDLENBQUMsYUFBYSxFQUFFLGVBQWUsQ0FBQyxRQUNuQzt3QkFDSixjQUFjLEVBQUUsU0FBUztxQkFDMUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSxcbiAgQ29tcG9uZW50LFxuICBtb2RlbCxcbiAgVmlld0VuY2Fwc3VsYXRpb24sXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTWF0ZXJpYWxEZXNpZ25Db21wb25lbnQgfSBmcm9tICcuLi9tYXRlcmlhbC1kZXNpZ24uY29tcG9uZW50JztcbmltcG9ydCB7IEljb25Db21wb25lbnQgfSBmcm9tICcuLi9pY29uL2ljb24uY29tcG9uZW50JztcbmltcG9ydCB7IEJ1dHRvbkNvbXBvbmVudCB9IGZyb20gJy4uL2J1dHRvbi9idXR0b24uY29tcG9uZW50JztcbmltcG9ydCB7IG9wZW5DbG9zZSB9IGZyb20gJy4uLy4uL2NvbW1vbi9yeGpzL29wZW4tY2xvc2UnO1xuaW1wb3J0IHsgdG9TaWduYWwgfSBmcm9tICdAYW5ndWxhci9jb3JlL3J4anMtaW50ZXJvcCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ21kLWFjY29yZGlhbicsXG4gIHRlbXBsYXRlVXJsOiAnLi9hY2NvcmRpYW4uY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybDogJy4vYWNjb3JkaWFuLmNvbXBvbmVudC5zY3NzJyxcbiAgc3RhbmRhbG9uZTogdHJ1ZSxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG4gIGVuY2Fwc3VsYXRpb246IFZpZXdFbmNhcHN1bGF0aW9uLlNoYWRvd0RvbSxcbiAgaW1wb3J0czogW0ljb25Db21wb25lbnQsIEJ1dHRvbkNvbXBvbmVudF0sXG4gIGhvc3Q6IHtcbiAgICAnW2F0dHIuc3RhdGVdJzogJ3N0YXRlKCknLFxuICB9LFxufSlcbmV4cG9ydCBjbGFzcyBBY2NvcmRpYW5Db21wb25lbnQgZXh0ZW5kcyBNYXRlcmlhbERlc2lnbkNvbXBvbmVudCB7XG4gIHJlYWRvbmx5IG9wZW4gPSBtb2RlbChmYWxzZSk7XG5cbiAgcHJpdmF0ZSByZWFkb25seSBfb3BlbkNsb3NlJCA9IG9wZW5DbG9zZSh0aGlzLm9wZW4sICdzaG9ydDQnKTtcbiAgcmVhZG9ubHkgc3RhdGUgPSB0b1NpZ25hbCh0aGlzLl9vcGVuQ2xvc2UkKTtcbn1cbiIsIjxtZC1idXR0b24gcGFydD1cImJ1dHRvblwiIHZhcmlhbnQ9XCJwbGFpblwiIChjbGljayk9XCJvcGVuLnNldCghb3BlbigpKVwiPlxuICA8c2xvdCBuYW1lPVwiaGVhZGxpbmVcIj48L3Nsb3Q+XG4gIDxtZC1pY29uPmtleWJvYXJkX2Fycm93X2Rvd248L21kLWljb24+XG48L21kLWJ1dHRvbj5cbjxkaXYgcGFydD1cImJvZHlcIiBjbGFzcz1cImJvZHlcIj5cbiAgPHNsb3Q+PC9zbG90PlxuPC9kaXY+Il19