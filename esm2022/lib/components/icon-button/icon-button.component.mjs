import { CommonModule } from '@angular/common';
import { Component, ChangeDetectionStrategy, ViewEncapsulation, model, viewChild, } from '@angular/core';
import { attachTarget } from '../../directives/attachable.directive';
import { ForwardFocusDirective } from '../../directives/forward-focus.directive';
import { IconComponent } from '../icon/icon.component';
import { MaterialDesignComponent } from '../material-design.component';
import { ProgressIndicatorComponent } from '../progress-indicator/progress-indicator.component';
import { TouchAreaComponent } from '../touch-area/touch-area.component';
import { FocusRingComponent } from '../focus-ring/focus-ring.component';
import { RippleComponent } from '../ripple/ripple.component';
import * as i0 from "@angular/core";
import * as i1 from "../../directives/forward-focus.directive";
import * as i2 from "@angular/common";
export class IconButtonComponent extends MaterialDesignComponent {
    disabled = model(false);
    type = model('button');
    href = model();
    anchorTarget = model();
    name = model();
    value = model();
    progressIndeterminate = model(false);
    progressValue = model(0);
    progressMax = model(0);
    variant = model('standard');
    selected = model(false);
    custom = model(false);
    badgeDot = model(false);
    badgeNumber = model();
    button = viewChild('button');
    constructor() {
        super();
        attachTarget(ForwardFocusDirective, this.button);
    }
    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.9", ngImport: i0, type: IconButtonComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "18.2.9", type: IconButtonComponent, isStandalone: true, selector: "md-icon-button", inputs: { disabled: { classPropertyName: "disabled", publicName: "disabled", isSignal: true, isRequired: false, transformFunction: null }, type: { classPropertyName: "type", publicName: "type", isSignal: true, isRequired: false, transformFunction: null }, href: { classPropertyName: "href", publicName: "href", isSignal: true, isRequired: false, transformFunction: null }, anchorTarget: { classPropertyName: "anchorTarget", publicName: "anchorTarget", isSignal: true, isRequired: false, transformFunction: null }, name: { classPropertyName: "name", publicName: "name", isSignal: true, isRequired: false, transformFunction: null }, value: { classPropertyName: "value", publicName: "value", isSignal: true, isRequired: false, transformFunction: null }, progressIndeterminate: { classPropertyName: "progressIndeterminate", publicName: "progressIndeterminate", isSignal: true, isRequired: false, transformFunction: null }, progressValue: { classPropertyName: "progressValue", publicName: "progressValue", isSignal: true, isRequired: false, transformFunction: null }, progressMax: { classPropertyName: "progressMax", publicName: "progressMax", isSignal: true, isRequired: false, transformFunction: null }, variant: { classPropertyName: "variant", publicName: "variant", isSignal: true, isRequired: false, transformFunction: null }, selected: { classPropertyName: "selected", publicName: "selected", isSignal: true, isRequired: false, transformFunction: null }, custom: { classPropertyName: "custom", publicName: "custom", isSignal: true, isRequired: false, transformFunction: null }, badgeDot: { classPropertyName: "badgeDot", publicName: "badgeDot", isSignal: true, isRequired: false, transformFunction: null }, badgeNumber: { classPropertyName: "badgeNumber", publicName: "badgeNumber", isSignal: true, isRequired: false, transformFunction: null } }, outputs: { disabled: "disabledChange", type: "typeChange", href: "hrefChange", anchorTarget: "anchorTargetChange", name: "nameChange", value: "valueChange", progressIndeterminate: "progressIndeterminateChange", progressValue: "progressValueChange", progressMax: "progressMaxChange", variant: "variantChange", selected: "selectedChange", custom: "customChange", badgeDot: "badgeDotChange", badgeNumber: "badgeNumberChange" }, host: { properties: { "attr.variant": "variant()", "attr.selected": "selected() || null", "attr.busy": "progressIndeterminate() || !!progressValue() || null", "attr.disabled": "disabled() || null" } }, viewQueries: [{ propertyName: "button", first: true, predicate: ["button"], descendants: true, isSignal: true }], usesInheritance: true, hostDirectives: [{ directive: i1.ForwardFocusDirective }], ngImport: i0, template: "<ng-template #content>\n  <md-touch-area />\n  @if (custom()) {\n  <slot></slot>\n  } @else {\n  <md-icon part=\"icon\" [filled]=\"selected()\" [badgeDot]=\"badgeDot()\" [badgeNumber]=\"badgeNumber()\">\n    <slot></slot>\n  </md-icon>\n  }\n</ng-template>\n\n<md-focus-ring part=\"focus-ring\" [target]=\"button()\" />\n<md-ripple part=\"ripple\" [target]=\"button()\" />\n@if (href()) {\n<a part=\"button\" #button [attr.href]=\"href() ?? null\" [attr.target]=\"anchorTarget() ?? null\"\n  [tabIndex]=\"disabled() ? -1 : 0\">\n  <ng-container *ngTemplateOutlet=\"content\" />\n</a>\n} @else {\n<button part=\"button\" #button [type]=\"type()\" [disabled]=\"disabled() || null\" [attr.name]=\"name() ?? null\"\n  [attr.value]=\"value() ?? null\">\n  <ng-container *ngTemplateOutlet=\"content\" />\n</button>\n}\n\n@if (!disabled() && (progressValue() || progressIndeterminate())) {\n<md-progress-indicator [size]=\"28\" [value]=\"progressValue()\" [indeterminate]=\"progressIndeterminate()\" />\n}", styles: [":host{--_color: currentColor;position:relative;display:inline-flex;border-radius:var(--md-sys-shape-full);height:40px;width:40px;cursor:pointer;transition-property:opacity,background-color,color,border-color;transition-duration:var(--md-sys-motion-duration-short-4);transition-timing-function:var(--md-sys-motion-easing-standard);flex-shrink:0;place-content:center;place-items:center;font-size:var(--md-sys-typescale-label-large-size);font-weight:var(--md-sys-typescale-label-large-weight);font-family:var(--md-sys-typescale-label-large-font)}:host button,:host a{background-color:transparent;display:inherit;font:inherit;color:inherit;padding:0;margin:0;gap:inherit;text-decoration:none;border-radius:inherit;appearance:none;border:0;outline:none;cursor:pointer;align-items:center;transition-property:opacity;transition-duration:var(--md-sys-motion-duration-short-4);transition-timing-function:var(--md-sys-motion-easing-standard)}:host ::slotted(md-icon),:host md-icon{--md-comp-icon-size: 24}:host md-ripple{--md-comp-ripple-color: var(--_color);--md-comp-ripple-transform-default: scale(0);--md-comp-ripple-transform-hover: scale(1)}:host md-progress-indicator{--md-comp-progress-indicator-color: var(--_color);position:absolute;display:inline-flex;align-self:center}:host([selected=true]) ::slotted(md-icon),:host([selected=true]) md-icon{--md-comp-icon-filled: 1}:host([variant=filled]){background-color:var(--md-sys-color-surface-container-high);color:var(--md-sys-color-primary)}:host([variant=filled][disabled=true]){background-color:color-mix(in oklab,transparent,var(--md-sys-color-surface-on) calc(var(--md-sys-disabled-background-color) * 100%))}:host([variant=filled][selected=true]){background-color:var(--md-sys-color-primary);color:var(--md-sys-color-primary-on)}:host([variant=tonal]){background-color:var(--md-sys-color-surface-container-high);color:var(--md-sys-color-surface-variant-on)}:host([variant=tonal][disabled=true]){background-color:color-mix(in oklab,transparent,var(--md-sys-color-surface-on) calc(var(--md-sys-disabled-background-color) * 100%))}:host([variant=tonal][selected=true]){background-color:var(--md-sys-color-secondary-container);color:var(--md-sys-color-secondary-container-on)}:host([variant=outlined]){background-color:transparent;color:var(--md-sys-color-surface-variant-on);border:1px solid var(--md-sys-color-outline)}:host([variant=outlined][disabled=true]){border:1px solid color-mix(in oklab,transparent,var(--md-sys-color-surface-on) calc(var(--md-sys-disabled-border-color) * 100%))}:host([variant=outlined][selected=true]){background-color:var(--md-sys-color-surface-inverse);color:var(--md-sys-color-surface-inverse-on)}:host([variant=outlined][selected=true][disabled=true]){background-color:color-mix(in oklab,transparent,var(--md-sys-color-surface-on) calc(var(--md-sys-disabled-background-color) * 100%))}:host([variant=standard]){color:var(--md-sys-color-surface-variant-on)}:host([variant=standard][selected=true]){color:var(--md-sys-color-primary)}:host([busy=true]:not([disabled=true])){pointer-events:none}:host([busy=true]:not([disabled=true])) a,:host([busy=true]:not([disabled=true])) button{opacity:0}:host([disabled=true]){pointer-events:none;cursor:default;color:color-mix(in oklab,transparent,var(--md-sys-color-surface-on) calc(var(--md-sys-disabled-color) * 100%))}\n"], dependencies: [{ kind: "component", type: ProgressIndicatorComponent, selector: "md-progress-indicator", inputs: ["variant", "value", "max", "indeterminate", "fourColor", "size", "width", "buffer", "circleSize"], outputs: ["variantChange", "valueChange", "maxChange", "indeterminateChange", "fourColorChange", "sizeChange", "widthChange", "bufferChange", "circleSizeChange"] }, { kind: "component", type: IconComponent, selector: "md-icon", inputs: ["filled", "size", "badgeDot", "badgeNumber", "slot"], outputs: ["filledChange", "sizeChange", "badgeDotChange", "badgeNumberChange", "slotChange"] }, { kind: "component", type: FocusRingComponent, selector: "md-focus-ring", inputs: ["focusVisible"], outputs: ["focusVisibleChange"] }, { kind: "component", type: RippleComponent, selector: "md-ripple, [mdRipple]", inputs: ["hoverable", "interactive"], outputs: ["hoverableChange", "interactiveChange"] }, { kind: "component", type: TouchAreaComponent, selector: "md-touch-area" }, { kind: "ngmodule", type: CommonModule }, { kind: "directive", type: i2.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.ShadowDom });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.9", ngImport: i0, type: IconButtonComponent, decorators: [{
            type: Component,
            args: [{ selector: 'md-icon-button', changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.ShadowDom, standalone: true, imports: [
                        ProgressIndicatorComponent,
                        IconComponent,
                        FocusRingComponent,
                        RippleComponent,
                        TouchAreaComponent,
                        CommonModule,
                    ], hostDirectives: [ForwardFocusDirective], host: {
                        '[attr.variant]': 'variant()',
                        '[attr.selected]': 'selected() || null',
                        '[attr.busy]': 'progressIndeterminate() || !!progressValue() || null',
                        '[attr.disabled]': 'disabled() || null',
                    }, template: "<ng-template #content>\n  <md-touch-area />\n  @if (custom()) {\n  <slot></slot>\n  } @else {\n  <md-icon part=\"icon\" [filled]=\"selected()\" [badgeDot]=\"badgeDot()\" [badgeNumber]=\"badgeNumber()\">\n    <slot></slot>\n  </md-icon>\n  }\n</ng-template>\n\n<md-focus-ring part=\"focus-ring\" [target]=\"button()\" />\n<md-ripple part=\"ripple\" [target]=\"button()\" />\n@if (href()) {\n<a part=\"button\" #button [attr.href]=\"href() ?? null\" [attr.target]=\"anchorTarget() ?? null\"\n  [tabIndex]=\"disabled() ? -1 : 0\">\n  <ng-container *ngTemplateOutlet=\"content\" />\n</a>\n} @else {\n<button part=\"button\" #button [type]=\"type()\" [disabled]=\"disabled() || null\" [attr.name]=\"name() ?? null\"\n  [attr.value]=\"value() ?? null\">\n  <ng-container *ngTemplateOutlet=\"content\" />\n</button>\n}\n\n@if (!disabled() && (progressValue() || progressIndeterminate())) {\n<md-progress-indicator [size]=\"28\" [value]=\"progressValue()\" [indeterminate]=\"progressIndeterminate()\" />\n}", styles: [":host{--_color: currentColor;position:relative;display:inline-flex;border-radius:var(--md-sys-shape-full);height:40px;width:40px;cursor:pointer;transition-property:opacity,background-color,color,border-color;transition-duration:var(--md-sys-motion-duration-short-4);transition-timing-function:var(--md-sys-motion-easing-standard);flex-shrink:0;place-content:center;place-items:center;font-size:var(--md-sys-typescale-label-large-size);font-weight:var(--md-sys-typescale-label-large-weight);font-family:var(--md-sys-typescale-label-large-font)}:host button,:host a{background-color:transparent;display:inherit;font:inherit;color:inherit;padding:0;margin:0;gap:inherit;text-decoration:none;border-radius:inherit;appearance:none;border:0;outline:none;cursor:pointer;align-items:center;transition-property:opacity;transition-duration:var(--md-sys-motion-duration-short-4);transition-timing-function:var(--md-sys-motion-easing-standard)}:host ::slotted(md-icon),:host md-icon{--md-comp-icon-size: 24}:host md-ripple{--md-comp-ripple-color: var(--_color);--md-comp-ripple-transform-default: scale(0);--md-comp-ripple-transform-hover: scale(1)}:host md-progress-indicator{--md-comp-progress-indicator-color: var(--_color);position:absolute;display:inline-flex;align-self:center}:host([selected=true]) ::slotted(md-icon),:host([selected=true]) md-icon{--md-comp-icon-filled: 1}:host([variant=filled]){background-color:var(--md-sys-color-surface-container-high);color:var(--md-sys-color-primary)}:host([variant=filled][disabled=true]){background-color:color-mix(in oklab,transparent,var(--md-sys-color-surface-on) calc(var(--md-sys-disabled-background-color) * 100%))}:host([variant=filled][selected=true]){background-color:var(--md-sys-color-primary);color:var(--md-sys-color-primary-on)}:host([variant=tonal]){background-color:var(--md-sys-color-surface-container-high);color:var(--md-sys-color-surface-variant-on)}:host([variant=tonal][disabled=true]){background-color:color-mix(in oklab,transparent,var(--md-sys-color-surface-on) calc(var(--md-sys-disabled-background-color) * 100%))}:host([variant=tonal][selected=true]){background-color:var(--md-sys-color-secondary-container);color:var(--md-sys-color-secondary-container-on)}:host([variant=outlined]){background-color:transparent;color:var(--md-sys-color-surface-variant-on);border:1px solid var(--md-sys-color-outline)}:host([variant=outlined][disabled=true]){border:1px solid color-mix(in oklab,transparent,var(--md-sys-color-surface-on) calc(var(--md-sys-disabled-border-color) * 100%))}:host([variant=outlined][selected=true]){background-color:var(--md-sys-color-surface-inverse);color:var(--md-sys-color-surface-inverse-on)}:host([variant=outlined][selected=true][disabled=true]){background-color:color-mix(in oklab,transparent,var(--md-sys-color-surface-on) calc(var(--md-sys-disabled-background-color) * 100%))}:host([variant=standard]){color:var(--md-sys-color-surface-variant-on)}:host([variant=standard][selected=true]){color:var(--md-sys-color-primary)}:host([busy=true]:not([disabled=true])){pointer-events:none}:host([busy=true]:not([disabled=true])) a,:host([busy=true]:not([disabled=true])) button{opacity:0}:host([disabled=true]){pointer-events:none;cursor:default;color:color-mix(in oklab,transparent,var(--md-sys-color-surface-on) calc(var(--md-sys-disabled-color) * 100%))}\n"] }]
        }], ctorParameters: () => [] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaWNvbi1idXR0b24uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvd3Rwcm9ncmFtcy9tYXRlcmlhbC1kZXNpZ24vc3JjL2xpYi9jb21wb25lbnRzL2ljb24tYnV0dG9uL2ljb24tYnV0dG9uLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3d0cHJvZ3JhbXMvbWF0ZXJpYWwtZGVzaWduL3NyYy9saWIvY29tcG9uZW50cy9pY29uLWJ1dHRvbi9pY29uLWJ1dHRvbi5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUNMLFNBQVMsRUFDVCx1QkFBdUIsRUFDdkIsaUJBQWlCLEVBQ2pCLEtBQUssRUFDTCxTQUFTLEdBRVYsTUFBTSxlQUFlLENBQUM7QUFFdkIsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLHVDQUF1QyxDQUFDO0FBQ3JFLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLDBDQUEwQyxDQUFDO0FBQ2pGLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUN2RCxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQztBQUN2RSxPQUFPLEVBQUUsMEJBQTBCLEVBQUUsTUFBTSxvREFBb0QsQ0FBQztBQUNoRyxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxvQ0FBb0MsQ0FBQztBQUN4RSxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxvQ0FBb0MsQ0FBQztBQUN4RSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sNEJBQTRCLENBQUM7Ozs7QUEyQjdELE1BQU0sT0FBTyxtQkFBb0IsU0FBUSx1QkFBdUI7SUFDckQsUUFBUSxHQUFHLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUN4QixJQUFJLEdBQUcsS0FBSyxDQUFvQixRQUFRLENBQUMsQ0FBQztJQUMxQyxJQUFJLEdBQUcsS0FBSyxFQUFVLENBQUM7SUFDdkIsWUFBWSxHQUFHLEtBQUssRUFBVSxDQUFDO0lBQy9CLElBQUksR0FBRyxLQUFLLEVBQVUsQ0FBQztJQUN2QixLQUFLLEdBQUcsS0FBSyxFQUFVLENBQUM7SUFDeEIscUJBQXFCLEdBQUcsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ3JDLGFBQWEsR0FBRyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDekIsV0FBVyxHQUFHLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUN2QixPQUFPLEdBQUcsS0FBSyxDQUFvQixVQUFVLENBQUMsQ0FBQztJQUMvQyxRQUFRLEdBQUcsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ3hCLE1BQU0sR0FBRyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDdEIsUUFBUSxHQUFHLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUN4QixXQUFXLEdBQUcsS0FBSyxFQUFVLENBQUM7SUFFOUIsTUFBTSxHQUNiLFNBQVMsQ0FBb0QsUUFBUSxDQUFDLENBQUM7SUFFekU7UUFDRSxLQUFLLEVBQUUsQ0FBQztRQUNSLFlBQVksQ0FBQyxxQkFBcUIsRUFBRSxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDbkQsQ0FBQzt1R0F0QlUsbUJBQW1COzJGQUFuQixtQkFBbUIseXJGQzVDaEMsdytCQTJCQyx3MEdERUcsMEJBQTBCLGlWQUMxQixhQUFhLGlOQUNiLGtCQUFrQixxSEFDbEIsZUFBZSwySkFDZixrQkFBa0IseURBQ2xCLFlBQVk7OzJGQVVILG1CQUFtQjtrQkF2Qi9CLFNBQVM7K0JBQ0UsZ0JBQWdCLG1CQUdULHVCQUF1QixDQUFDLE1BQU0saUJBQ2hDLGlCQUFpQixDQUFDLFNBQVMsY0FDOUIsSUFBSSxXQUNQO3dCQUNQLDBCQUEwQjt3QkFDMUIsYUFBYTt3QkFDYixrQkFBa0I7d0JBQ2xCLGVBQWU7d0JBQ2Ysa0JBQWtCO3dCQUNsQixZQUFZO3FCQUNiLGtCQUNlLENBQUMscUJBQXFCLENBQUMsUUFDakM7d0JBQ0osZ0JBQWdCLEVBQUUsV0FBVzt3QkFDN0IsaUJBQWlCLEVBQUUsb0JBQW9CO3dCQUN2QyxhQUFhLEVBQUUsc0RBQXNEO3dCQUNyRSxpQkFBaUIsRUFBRSxvQkFBb0I7cUJBQ3hDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7XG4gIENvbXBvbmVudCxcbiAgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksXG4gIFZpZXdFbmNhcHN1bGF0aW9uLFxuICBtb2RlbCxcbiAgdmlld0NoaWxkLFxuICBFbGVtZW50UmVmLFxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEZvcm1TdWJtaXR0ZXJUeXBlIH0gZnJvbSAnLi4vLi4vY29tbW9uL2Zvcm1zL2Zvcm0tc3VibWl0dGVkLXR5cGUnO1xuaW1wb3J0IHsgYXR0YWNoVGFyZ2V0IH0gZnJvbSAnLi4vLi4vZGlyZWN0aXZlcy9hdHRhY2hhYmxlLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBGb3J3YXJkRm9jdXNEaXJlY3RpdmUgfSBmcm9tICcuLi8uLi9kaXJlY3RpdmVzL2ZvcndhcmQtZm9jdXMuZGlyZWN0aXZlJztcbmltcG9ydCB7IEljb25Db21wb25lbnQgfSBmcm9tICcuLi9pY29uL2ljb24uY29tcG9uZW50JztcbmltcG9ydCB7IE1hdGVyaWFsRGVzaWduQ29tcG9uZW50IH0gZnJvbSAnLi4vbWF0ZXJpYWwtZGVzaWduLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBQcm9ncmVzc0luZGljYXRvckNvbXBvbmVudCB9IGZyb20gJy4uL3Byb2dyZXNzLWluZGljYXRvci9wcm9ncmVzcy1pbmRpY2F0b3IuY29tcG9uZW50JztcbmltcG9ydCB7IFRvdWNoQXJlYUNvbXBvbmVudCB9IGZyb20gJy4uL3RvdWNoLWFyZWEvdG91Y2gtYXJlYS5jb21wb25lbnQnO1xuaW1wb3J0IHsgRm9jdXNSaW5nQ29tcG9uZW50IH0gZnJvbSAnLi4vZm9jdXMtcmluZy9mb2N1cy1yaW5nLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBSaXBwbGVDb21wb25lbnQgfSBmcm9tICcuLi9yaXBwbGUvcmlwcGxlLmNvbXBvbmVudCc7XG5cbmV4cG9ydCB0eXBlIEljb25CdXR0b25WYXJpYW50ID0gJ2ZpbGxlZCcgfCAndG9uYWwnIHwgJ291dGxpbmVkJyB8ICdzdGFuZGFyZCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ21kLWljb24tYnV0dG9uJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2ljb24tYnV0dG9uLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmw6ICcuL2ljb24tYnV0dG9uLmNvbXBvbmVudC5zY3NzJyxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG4gIGVuY2Fwc3VsYXRpb246IFZpZXdFbmNhcHN1bGF0aW9uLlNoYWRvd0RvbSxcbiAgc3RhbmRhbG9uZTogdHJ1ZSxcbiAgaW1wb3J0czogW1xuICAgIFByb2dyZXNzSW5kaWNhdG9yQ29tcG9uZW50LFxuICAgIEljb25Db21wb25lbnQsXG4gICAgRm9jdXNSaW5nQ29tcG9uZW50LFxuICAgIFJpcHBsZUNvbXBvbmVudCxcbiAgICBUb3VjaEFyZWFDb21wb25lbnQsXG4gICAgQ29tbW9uTW9kdWxlLFxuICBdLFxuICBob3N0RGlyZWN0aXZlczogW0ZvcndhcmRGb2N1c0RpcmVjdGl2ZV0sXG4gIGhvc3Q6IHtcbiAgICAnW2F0dHIudmFyaWFudF0nOiAndmFyaWFudCgpJyxcbiAgICAnW2F0dHIuc2VsZWN0ZWRdJzogJ3NlbGVjdGVkKCkgfHwgbnVsbCcsXG4gICAgJ1thdHRyLmJ1c3ldJzogJ3Byb2dyZXNzSW5kZXRlcm1pbmF0ZSgpIHx8ICEhcHJvZ3Jlc3NWYWx1ZSgpIHx8IG51bGwnLFxuICAgICdbYXR0ci5kaXNhYmxlZF0nOiAnZGlzYWJsZWQoKSB8fCBudWxsJyxcbiAgfSxcbn0pXG5leHBvcnQgY2xhc3MgSWNvbkJ1dHRvbkNvbXBvbmVudCBleHRlbmRzIE1hdGVyaWFsRGVzaWduQ29tcG9uZW50IHtcbiAgcmVhZG9ubHkgZGlzYWJsZWQgPSBtb2RlbChmYWxzZSk7XG4gIHJlYWRvbmx5IHR5cGUgPSBtb2RlbDxGb3JtU3VibWl0dGVyVHlwZT4oJ2J1dHRvbicpO1xuICByZWFkb25seSBocmVmID0gbW9kZWw8c3RyaW5nPigpO1xuICByZWFkb25seSBhbmNob3JUYXJnZXQgPSBtb2RlbDxzdHJpbmc+KCk7XG4gIHJlYWRvbmx5IG5hbWUgPSBtb2RlbDxzdHJpbmc+KCk7XG4gIHJlYWRvbmx5IHZhbHVlID0gbW9kZWw8c3RyaW5nPigpO1xuICByZWFkb25seSBwcm9ncmVzc0luZGV0ZXJtaW5hdGUgPSBtb2RlbChmYWxzZSk7XG4gIHJlYWRvbmx5IHByb2dyZXNzVmFsdWUgPSBtb2RlbCgwKTtcbiAgcmVhZG9ubHkgcHJvZ3Jlc3NNYXggPSBtb2RlbCgwKTtcbiAgcmVhZG9ubHkgdmFyaWFudCA9IG1vZGVsPEljb25CdXR0b25WYXJpYW50Pignc3RhbmRhcmQnKTtcbiAgcmVhZG9ubHkgc2VsZWN0ZWQgPSBtb2RlbChmYWxzZSk7XG4gIHJlYWRvbmx5IGN1c3RvbSA9IG1vZGVsKGZhbHNlKTtcbiAgcmVhZG9ubHkgYmFkZ2VEb3QgPSBtb2RlbChmYWxzZSk7XG4gIHJlYWRvbmx5IGJhZGdlTnVtYmVyID0gbW9kZWw8bnVtYmVyPigpO1xuXG4gIHJlYWRvbmx5IGJ1dHRvbiA9XG4gICAgdmlld0NoaWxkPEVsZW1lbnRSZWY8SFRNTEJ1dHRvbkVsZW1lbnQgfCBIVE1MQW5jaG9yRWxlbWVudD4+KCdidXR0b24nKTtcblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcigpO1xuICAgIGF0dGFjaFRhcmdldChGb3J3YXJkRm9jdXNEaXJlY3RpdmUsIHRoaXMuYnV0dG9uKTtcbiAgfVxufVxuIiwiPG5nLXRlbXBsYXRlICNjb250ZW50PlxuICA8bWQtdG91Y2gtYXJlYSAvPlxuICBAaWYgKGN1c3RvbSgpKSB7XG4gIDxzbG90Pjwvc2xvdD5cbiAgfSBAZWxzZSB7XG4gIDxtZC1pY29uIHBhcnQ9XCJpY29uXCIgW2ZpbGxlZF09XCJzZWxlY3RlZCgpXCIgW2JhZGdlRG90XT1cImJhZGdlRG90KClcIiBbYmFkZ2VOdW1iZXJdPVwiYmFkZ2VOdW1iZXIoKVwiPlxuICAgIDxzbG90Pjwvc2xvdD5cbiAgPC9tZC1pY29uPlxuICB9XG48L25nLXRlbXBsYXRlPlxuXG48bWQtZm9jdXMtcmluZyBwYXJ0PVwiZm9jdXMtcmluZ1wiIFt0YXJnZXRdPVwiYnV0dG9uKClcIiAvPlxuPG1kLXJpcHBsZSBwYXJ0PVwicmlwcGxlXCIgW3RhcmdldF09XCJidXR0b24oKVwiIC8+XG5AaWYgKGhyZWYoKSkge1xuPGEgcGFydD1cImJ1dHRvblwiICNidXR0b24gW2F0dHIuaHJlZl09XCJocmVmKCkgPz8gbnVsbFwiIFthdHRyLnRhcmdldF09XCJhbmNob3JUYXJnZXQoKSA/PyBudWxsXCJcbiAgW3RhYkluZGV4XT1cImRpc2FibGVkKCkgPyAtMSA6IDBcIj5cbiAgPG5nLWNvbnRhaW5lciAqbmdUZW1wbGF0ZU91dGxldD1cImNvbnRlbnRcIiAvPlxuPC9hPlxufSBAZWxzZSB7XG48YnV0dG9uIHBhcnQ9XCJidXR0b25cIiAjYnV0dG9uIFt0eXBlXT1cInR5cGUoKVwiIFtkaXNhYmxlZF09XCJkaXNhYmxlZCgpIHx8IG51bGxcIiBbYXR0ci5uYW1lXT1cIm5hbWUoKSA/PyBudWxsXCJcbiAgW2F0dHIudmFsdWVdPVwidmFsdWUoKSA/PyBudWxsXCI+XG4gIDxuZy1jb250YWluZXIgKm5nVGVtcGxhdGVPdXRsZXQ9XCJjb250ZW50XCIgLz5cbjwvYnV0dG9uPlxufVxuXG5AaWYgKCFkaXNhYmxlZCgpICYmIChwcm9ncmVzc1ZhbHVlKCkgfHwgcHJvZ3Jlc3NJbmRldGVybWluYXRlKCkpKSB7XG48bWQtcHJvZ3Jlc3MtaW5kaWNhdG9yIFtzaXplXT1cIjI4XCIgW3ZhbHVlXT1cInByb2dyZXNzVmFsdWUoKVwiIFtpbmRldGVybWluYXRlXT1cInByb2dyZXNzSW5kZXRlcm1pbmF0ZSgpXCIgLz5cbn0iXX0=