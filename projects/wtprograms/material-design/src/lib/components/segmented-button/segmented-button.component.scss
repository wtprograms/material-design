@use "../md";

:host {
  --_color: currentColor;
  -webkit-tap-highlight-color: transparent;
  display: inline-flex;
  position: relative;
  height: 40px;
  flex-shrink: 0;
  place-content: center;
  place-items: center;
  gap: 8px;
  user-select: none;
  outline: none;
  padding-inline: 24px;
  border-color: var(--md-sys-color-outline);
  border-style: solid;
  border-top-width: 1px;
  border-bottom-width: 1px;
  color: var(--md-sys-color-surface-variant-on);

  @include md.typescale("label", "large");
  @include md.motion("background-color", "border-color", "color");

  ::ng-deep [mdSegmentedButtonLeading],
  ::ng-deep [mdSegmentedButtonTrailing],
  md-icon {
    --md-comp-icon-size: 18;
    max-height: 18px;
  }

  &.show-check-icon:has(input:checked) ::ng-deep [mdSegmentedButtonLeading] {
    display: none;
  }

  &:first-child {
    border-start-start-radius: var(--md-sys-shape-full);
    border-end-start-radius: var(--md-sys-shape-full);
    border-inline-start-width: 1px;
  }

  &:last-child {
    border-start-end-radius: var(--md-sys-shape-full);
    border-end-end-radius: var(--md-sys-shape-full);
    border-inline-end-width: 1px;
  }

  &:has(::ng-deep [mdSegmentedButtonLeading]),
  &.show-check-icon:has(input:checked) {
    padding-inline-start: 16px;
  }
  &:has(::ng-deep [mdSegmentedButtonTrailing]),
  &:has(md-badge) {
    padding-inline-end: 16px;
  }

  &.selected {
    color: var(--md-sys-color-secondary-container-on);
    background-color: var(--md-sys-color-secondary-container);
  }

  &.disabled {
    color: var(--md-sys-color-disabled-color);
    pointer-events: none;

    &.selected {
      background-color: var(--md-sys-color-disabled-background);
    }
  }

  md-ripple {
    --md-comp-ripple-color: var(--_color);
  }

  input {
    appearance: none;
    position: absolute;
    inset: 0;
    border-radius: inherit;
    outline: 0;
    cursor: pointer;
  }
}
