@use '../md';

:host {
  --_color: currentColor;
  position: relative;
  display: inline-flex;
  gap: 8px;
  cursor: pointer;
  justify-content: flex-start;
  align-items: center;
  @include md.typescale('label', 'large');
  @include md.motion('background-color, color, width', 'standard-decelerate');

  @include md.reset-button {
    overflow: hidden;
  }

  .label {
    display: none;
  }

  md-ripple {
    --md-comp-ripple-color: var(--_color);
  }
}

:host([state='opened']) {
  transition-timing-function: var(--md-sys-motion-easing-standard-accelerate);
}

:host(:not([state='closed'])[label='true']) .label {
  display: inline-flex;
}

:host([palette='surface']) {
  background-color: var(--md-sys-color-surface-container-low);
  color: var(--md-sys-color-primary);
}

$palettes: ('primary', 'secondary', 'tertiary', 'danger', 'warning', 'success');
@each $palette in $palettes {
  :host([palette='#{$palette}']) {
    background-color: var(--md-sys-color-#{$palette}-container);
    color: var(--md-sys-color-#{$palette}-container-on);
  }
}

:host([size='large']) {
  height: 96px;
  width: 96px;
  padding: 32px;
  border-radius: var(--md-sys-shape-medium);

  ::slotted(md-icon) {
    --md-comp-icon-size: 36;
  }
}

:host([size='medium']) {
  height: 56px;
  width: 56px;
  padding: 16px;
  border-radius: var(--md-sys-shape-small);

  ::slotted(md-icon) {
    --md-comp-icon-size: 24;
  }
}

:host([size='small']) {
  height: 40px;
  width: 40px;
  padding: 8px;
  border-radius: var(--md-sys-shape-extra-small);

  md-icon,
  ::slotted(md-icon) {
    --md-comp-icon-size: 24;
  }
}

:host([label='true']:not([icon])),
:host([icon='true']:not([state='closed'])[label='true']) {
  width: auto;
}

@include md.disabled-component {
  color: #{md.disabled('color')};
  background-color: #{md.disabled('background-color')};
}
