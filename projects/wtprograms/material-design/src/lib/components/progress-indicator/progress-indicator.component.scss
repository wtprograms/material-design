@use '../md';

$tokens: (
  'color': var(--md-sys-color-primary),
  'size': 48,
  'width': 4,
  'track': (
    'color': var(--md-sys-color-surface-container-highest),
    'height': 4px,
  ),
);

:host {
  @include md.declare-tokens($tokens, 'md-comp-progress-indicator', true);

  &[variant='circular'] {
    pointer-events: none;
    --_size-px: calc(var(--_size) * 1px);
    $container-padding: 4px;
    $arc-duration: 1333ms;
    $cycle-duration: calc(4 * $arc-duration);
    $linear-rotate-duration: calc($arc-duration * 360 / 306);

    $indeterminate-easing: cubic-bezier(0.4, 0, 0.2, 1);

    display: inline-flex;
    vertical-align: middle;
    width: var(--_size-px);
    height: var(--_size-px);
    position: relative;
    align-items: center;
    justify-content: center;
    contain: strict;
    content-visibility: auto;

    .progress {
      flex: 1;
      align-self: stretch;
      margin: $container-padding;
    }

    .progress,
    .spinner,
    .left,
    .right,
    .circle,
    svg,
    .track,
    .active-track {
      position: absolute;
      inset: 0;
    }

    svg {
      transform: rotate(-90deg);
    }

    circle {
      cx: 50%;
      cy: 50%;
      r: calc(50% * (1 - var(--_width) / 100));
      stroke-width: calc(var(--_width) * 1%);
      stroke-dasharray: 100;
      fill: transparent;
    }

    .active-track {
      transition: stroke-dashoffset 500ms cubic-bezier(0, 0, 0.2, 1);
      stroke: var(--_color);
    }

    .track {
      stroke: transparent;
    }

    .progress.indeterminate {
      animation: linear infinite linear-rotate;
      animation-duration: $linear-rotate-duration;
    }

    .spinner {
      animation: infinite both rotate-arc;
      animation-duration: $cycle-duration;
      animation-timing-function: $indeterminate-easing;
    }

    .left {
      overflow: hidden;
      inset: 0 50% 0 0;
    }

    .right {
      overflow: hidden;
      inset: 0 0 0 50%;
    }

    .circle {
      box-sizing: border-box;
      border-radius: 50%;
      $_padding-box-width: calc(var(--_size-px) - 2 * $container-padding);
      $_fraction: calc(var(--_width) / 100);
      border: solid calc($_fraction * $_padding-box-width);
      border-color: var(--_color) var(--_color) transparent transparent;
      animation: expand-arc;
      animation-iteration-count: infinite;
      animation-fill-mode: both;
      animation-duration: $arc-duration, $cycle-duration;
      animation-timing-function: $indeterminate-easing;
    }

    .left .circle {
      rotate: 135deg;
      inset: 0 -100% 0 0;
    }
    .right .circle {
      rotate: 100deg;
      inset: 0 0 0 -100%;
      animation-delay: calc(-0.5 * $arc-duration), 0ms;
    }

    @keyframes expand-arc {
      0% {
        transform: rotate(265deg);
      }
      50% {
        transform: rotate(130deg);
      }
      100% {
        transform: rotate(265deg);
      }
    }

    @keyframes rotate-arc {
      12.5% {
        transform: rotate(135deg);
      }
      25% {
        transform: rotate(270deg);
      }
      37.5% {
        transform: rotate(405deg);
      }
      50% {
        transform: rotate(540deg);
      }
      62.5% {
        transform: rotate(675deg);
      }
      75% {
        transform: rotate(810deg);
      }
      87.5% {
        transform: rotate(945deg);
      }
      100% {
        transform: rotate(1080deg);
      }
    }

    @keyframes linear-rotate {
      to {
        transform: rotate(360deg);
      }
    }
  }

  &[variant='linear'] {
    $_determinate-duration: 250ms;
    $_determinate-easing: cubic-bezier(0.4, 0, 0.6, 1);
    $_indeterminate-duration: 2s;
    display: flex;
    position: relative;
    min-width: 80px;
    height: var(--_track-height);
    content-visibility: auto;
    contain: strict;

    .progress,
    .dots,
    .inactive-track,
    .bar,
    .bar-inner {
      position: absolute;
    }

    .progress {
      direction: ltr;
      inset: 0;
      border-radius: inherit;
      overflow: hidden;
      display: flex;
      align-items: center;
    }

    .bar {
      animation: none;
      width: 100%;
      height: var(--_track-height);
      transform-origin: left center;
      transition: transform $_determinate-duration $_determinate-easing;
    }

    .secondary-bar {
      display: none;
    }

    .bar-inner {
      inset: 0;
      animation: none;
      background: var(--_color);
    }

    .inactive-track {
      background: var(--_track-color);
      inset: 0;
      transition: transform $_determinate-duration $_determinate-easing;
      transform-origin: left center;
    }

    .dots {
      inset: 0;
      animation: linear infinite $_determinate-duration;
      animation-name: buffering;
      background-color: var(--_track-color);
      background-repeat: repeat-x;
      $svg: "data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' viewBox='0 0 5 2' preserveAspectRatio='xMinYMin slice'%3E%3Ccircle cx='1' cy='1' r='1'/%3E%3C/svg%3E";
      -webkit-mask-image: url($svg);
      mask-image: url($svg);
      z-index: -1;
    }

    .dots[hidden] {
      display: none;
    }

    .indeterminate .bar {
      transition: none;
    }

    .indeterminate .primary-bar {
      inset-inline-start: -145.167%;
    }

    .indeterminate .secondary-bar {
      inset-inline-start: -54.8889%;
      display: block;
    }

    .indeterminate .primary-bar {
      animation: linear infinite $_indeterminate-duration;
      animation-name: primary-indeterminate-translate;
    }

    .indeterminate .primary-bar > .bar-inner {
      animation: linear infinite $_indeterminate-duration
        primary-indeterminate-scale;
    }

    .indeterminate .secondary-bar {
      animation: linear infinite $_indeterminate-duration;
      animation-name: secondary-indeterminate-translate;
    }

    .indeterminate .secondary-bar > .bar-inner {
      animation: linear infinite $_indeterminate-duration
        secondary-indeterminate-scale;
    }

    :host(:dir(rtl)) {
      transform: scale(-1);
    }

    @keyframes primary-indeterminate-scale {
      0% {
        transform: scaleX(0.08);
      }

      36.65% {
        animation-timing-function: cubic-bezier(0.334731, 0.12482, 0.785844, 1);
        transform: scaleX(0.08);
      }

      69.15% {
        animation-timing-function: cubic-bezier(0.06, 0.11, 0.6, 1);
        transform: scaleX(0.661479);
      }

      100% {
        transform: scaleX(0.08);
      }
    }

    @keyframes secondary-indeterminate-scale {
      0% {
        animation-timing-function: cubic-bezier(
          0.205028,
          0.057051,
          0.57661,
          0.453971
        );
        transform: scaleX(0.08);
      }

      19.15% {
        animation-timing-function: cubic-bezier(
          0.152313,
          0.196432,
          0.648374,
          1.00432
        );
        transform: scaleX(0.457104);
      }

      44.15% {
        animation-timing-function: cubic-bezier(
          0.257759,
          -0.003163,
          0.211762,
          1.38179
        );
        transform: scaleX(0.72796);
      }

      100% {
        transform: scaleX(0.08);
      }
    }

    @keyframes buffering {
      0% {
        $_dot-size: calc(var(--_track-height) / 2);
        $_dot-background-width: calc($_dot-size * 5);
        transform: translateX(#{$_dot-background-width});
      }
    }

    @keyframes primary-indeterminate-translate {
      0% {
        transform: translateX(0px);
      }

      20% {
        animation-timing-function: cubic-bezier(0.5, 0, 0.701732, 0.495819);
        transform: translateX(0px);
      }

      59.15% {
        animation-timing-function: cubic-bezier(
          0.302435,
          0.381352,
          0.55,
          0.956352
        );
        transform: translateX(83.6714%);
      }

      100% {
        transform: translateX(200.611%);
      }
    }

    @keyframes secondary-indeterminate-translate {
      0% {
        animation-timing-function: cubic-bezier(0.15, 0, 0.515058, 0.409685);
        transform: translateX(0px);
      }

      25% {
        animation-timing-function: cubic-bezier(
          0.31033,
          0.284058,
          0.8,
          0.733712
        );
        transform: translateX(37.6519%);
      }

      48.35% {
        animation-timing-function: cubic-bezier(0.4, 0.627035, 0.6, 0.902026);
        transform: translateX(84.3862%);
      }

      100% {
        transform: translateX(160.278%);
      }
    }
  }
}
