@use '../md';

:host {
  position: relative;

  display: inline-flex;
  flex-direction: row;
  gap: 8px;
  color: var(--md-sys-color-surface-variant-on);
  @include md.motion('color');

  .container {
    position: relative;
    display: inline-flex;
    justify-content: center;
    align-items: center;
    border-radius: var(--md-sys-shape-full);
    width: 40px;
    height: 40px;
  }

  input {
    appearance: none;
    position: absolute;
    inset: 0;
    border-radius: inherit;
    outline: 0;
    cursor: pointer;
  }

  md-ripple {
    --md-comp-ripple-transform-default: scale(0);
    --md-comp-ripple-transform-hover: scale(1);
  }

  .label {
    display: none;
    color: inherit;
    align-self: center;
  }

  md-icon,
  ::slotted(md-icon) {
    pointer-events: none;
  }

  md-icon {
    color: inherit;
  }
}

:host([checked='true']) {
  color: var(--md-sys-color-primary);

  md-icon,
  ::slotted(md-icon) {
    --md-comp-icon-filled: 1;
  }
}

:host([error='true']) {
  color: var(--md-sys-color-danger);
}

:host([label='true']) {
  .label {
    display: inline-flex;
  }
}

:host([switch='true']) {
  flex-grow: 0;
  flex-shrink: 0;

  .track {
    width: 52px;
    height: 32px;
    display: inline-flex;
    justify-content: center;
    align-items: center;
    background-color: var(--md-sys-color-surface-container-highest);
    border: 2px solid var(--md-sys-color-outline);
    border-radius: var(--md-sys-shape-full);
    box-sizing: border-box;
    @include md.motion('background-color', 'border');
  }

  .handle {
    width: 16px;
    height: 16px;
    display: inline-flex;
    justify-content: center;
    align-items: center;
    color: var(--md-sys-color-surface-container-highest);
    background-color: var(--md-sys-color-outline);
    border-radius: inherit;
    @include md.motion('width, height, background-color');
  }

  .container {
    position: absolute;
    @include md.motion('inset-inline-start');
  }

  .unchecked-icon,
  .checked-icon {
    display: none;
  }

  ::slotted(md-icon) {
    --md-comp-icon-size: 16;
  }
}

:host([switch='true'][checked='false']) {
  .container {
    inset-inline-start: -4px;
  }
}
:host([switch='true'][checked='false'][error='true']) {
  .track {
    background-color: var(--md-sys-color-danger-container);
    border-color: var(--md-sys-color-danger);
  }
  .handle {
    color: var(--md-sys-color-danger-on);
    background-color: var(--md-sys-color-danger);
  }
}

:host([switch='true'][checked='true']) {
  .container {
    inset-inline-start: 16px;
  }
  .track {
    background-color: var(--md-sys-color-primary);
    border-color: var(--md-sys-color-primary);
  }
  .handle {
    height: 24px;
    width: 24px;
    color: var(--md-sys-color-primary);
    background-color: var(--md-sys-color-primary-on);
  }
}
:host([switch='true'][checked='true'][error='true']) {
  .track {
    background-color: var(--md-sys-color-danger);
    border-color: var(--md-sys-color-danger);
  }
  .handle {
    color: var(--md-sys-color-danger);
    background-color: var(--md-sys-color-danger-on);
  }
}

:host([switch='true'][checked='false'][uncheckedIcon='true']) {
  .unchecked-icon {
    display: inline-flex;
  }
  .handle {
    height: 24px;
    width: 24px;
  }
}

:host([switch='true'][checked='true'][checkedIcon='true']) {
  .checked-icon {
    display: inline-flex;
  }
}

:host([switch='true']:active),
:host([switch='true'][checked='false'][uncheckedIcon='true']:active) {
  .handle {
    height: 28px;
    width: 28px;
  }
}

@mixin _disabled {
  color: #{md.disabled('color')};
  .track {
    background-color: var(--md-sys-color-surface-container-highest);
    border-color: #{md.disabled('border-color')};
  }
  .handle {
    color: var(--md-sys-color-surface);
    background-color: #{md.disabled('border-color')};
  }
}

:host([switch='true'][disabled='true']) {
  @include _disabled;
}

@include md.disabled-component {
  @include _disabled;
}
