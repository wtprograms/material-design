@use '../md';

:host {
  --_border-color: var(--md-sys-color-outline);
  --_populated-color: var(--md-sys-color-primary);
  --_error-color: var(--md-sys-color-danger);
  --_content-color: var(--md-sys-color-surface-variant-on);
  --_trailing-color: var(--md-sys-color-surface-variant-on);
  --_footer-color: var(--md-sys-color-surface-variant-on);
  --_label-color: var(--md-sys-color-surface-variant-on);

  display: inline-flex;
  gap: 4px;
  flex-direction: column;
  min-width: 280px;

  .body {
    position: relative;
    display: inline-flex;
    gap: 16px;
    padding-inline: 16px;
    min-height: 52px;
    @include md.motion('background-color');
  }

  .input,
  .input-container {
    display: inline-flex;
    flex-grow: 1;
  }

  .input-content {
    flex-grow: 1;
  }

  .input {
    margin-top: 16px;
    margin-bottom: 4px;
    @include md.typescale('body', 'large');
    @include md.motion('opacity, margin-top');
  }

  .leading,
  .trailing,
  .footer,
  .prefix,
  .suffix,
  .supporting-text,
  .counter {
    display: none;
  }

  .body:has(::ng-deep > .leading > [mdFieldLeading]) {
    padding-inline-start: 12px;
    .leading {
      display: inline-flex;
    }
  }

  .body:has(::ng-deep [mdFieldTrailing]) {
    padding-inline-end: 12px;
    .trailing {
      display: inline-flex;
    }
  }

  .input:has(.prefix) .prefix {
    display: inline-flex;
  }

  .input:has(.suffix) .suffix {
    display: inline-flex;
  }

  .footer:has(.supporting-text) {
    display: inline-flex;
    .supporting-text {
      display: inline-flex;
    }
  }

  .footer:has(.counter) {
    display: inline-flex;
    .counter {
      display: inline-flex;
    }
  }

  .footer:has(.error-text) {
    display: inline-flex;
    .counter {
      display: inline-flex;
    }

    .supporting-text {
      display: none;
    }
  }

  .footer {
    color: var(--_footer-color);
    padding-inline: 16px;
    gap: 16px;
    @include md.typescale('body', 'small');
    @include md.motion('color');
  }

  .counter {
    margin-inline-start: auto;
  }

  .leading,
  .trailing {
    margin-top: 14px;
    --md-comp-icon-size: 24;
    max-height: 24px;

    &:has(::ng-deep md-icon-button) {
      margin-top: 6px;
      max-height: revert;
    }

    ::ng-deep md-icon-button {
      color: inherit;
    }
  }

  .leading,
  .input {
    color: var(--_content-color);
  }

  .trailing {
    color: var(--_trailing-color);
    @include md.motion('color');
  }

  .border {
    position: absolute;
    border-color: var(--_border-color);
    border-style: solid;
    border-width: 0;
    pointer-events: none;
    @include md.motion('border-color');
  }

  .label {
    position: absolute;
    color: var(--_label-color);
    pointer-events: none;
  }

  .label.small {
    opacity: 0;
    z-index: -1;
    @include md.typescale('label', 'small');
  }

  .label.normal {
    top: 16px;
    @include md.typescale('body', 'large');
    @include md.motion('color, font-size, inset-inline-start, top');
  }

  &:has(.label.normal) .input {
    opacity: 0;
  }

  &:hover {
    --_border-color: #{md.mix(
        var(--md-sys-color-outline),
        var(--md-sys-color-surface-variant-on),
        0.5
      )};
    --_content-color: var(--md-sys-color-surface-on);
    --_trailing-color: var(--md-sys-color-surface-on);
    --_label-color: var(--md-sys-color-surface-on);
    --_footer-color: var(--md-sys-color-surface-on);
  }

  &.populated {
    --_border-color: var(--_populated-color);
    --_label-color: var(--_populated-color);

    .label.normal {
      @include md.typescale('label', 'small');
    }

    &:has(.label.normal) .input {
      opacity: 1;
    }
  }

  &.error {
    --_populated-color: var(--_error-color);
    --_border-color: var(--_error-color);
    --_label-color: var(--_error-color);
    --_footer-color: var(--_error-color);
    --_trailing-color: var(--_error-color);

    &:hover {
      --_error-color: #{md.mix(
          var(--md-sys-color-danger),
          var(--md-sys-color-surface-variant-on),
          0.34
        )};
    }
  }

  &.disabled {
    --_border-color: var(--md-sys-color-disabled-border);
    --_populated-color: var(--md-sys-color-disabled-color);
    --_content-color: var(--md-sys-color-disabled-color);
    --_label-color: var(--md-sys-color-disabled-color);
    --_footer-color: var(--md-sys-color-disabled-color);
    --_trailing-color: var(--md-sys-color-disabled-color);
    pointer-events: none;
  }

  &.filled {
    --_transform: scaleX(0);

    .body {
      border-radius: var(--md-sys-shape-extra-small-top);
      background-color: var(--md-sys-color-surface-container-high);
    }

    .border.bottom {
      position: absolute;
      inset: 0;
      border-bottom-width: 1px;

      &::after {
        content: '';
        position: absolute;
        inset: 0;
        border-bottom: 2px solid var(--_border-color);
        transform: var(--_transform);
        @include md.motion('border, transform');
      }
    }

    &.disabled {
      .body {
        background-color: var(--md-sys-color-disabled-background);
      }
    }

    &.populated {
      --_transform: scaleX(1);

      .label.normal {
        top: 8px;
      }

      &:has(.label.normal) .input {
        margin-top: 22px;
      }
    }
  }

  &.outlined {
    --_border-width: 1px;

    .body,
    .border {
      border-radius: var(--md-sys-shape-extra-small);
    }

    .border {
      inset: 0;
    }

    .border.x {
      border-inline-start-width: var(--_border-width);
      border-inline-end-width: var(--_border-width);
    }

    .border.bottom {
      border-bottom-width: var(--_border-width);
    }

    .border.top {
      border-top-width: var(--_border-width);
    }

    .border.top.start {
      width: 12px;
      border-start-end-radius: 0;
    }

    .border.top.end {
      margin-inline-start: 12px;
      border-start-start-radius: 0;
      @include md.motion('margin-inline-start');
    }

    &.populated {
      --_border-width: 2px;
      .label.normal {
        top: -6px;
      }
    }
  }
}
